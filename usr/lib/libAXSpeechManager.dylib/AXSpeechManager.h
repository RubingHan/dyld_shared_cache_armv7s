/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:03:45 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /usr/lib/libAXSpeechManager.dylib
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <libAXSpeechManager.dylib/libAXSpeechManager.dylib-Structs.h>
#import <libAXSpeechManager.dylib/TTSSpeechSynthesizerDelegate.h>

@protocol OS_dispatch_semaphore;
@class NSMutableArray, TTSSpeechSynthesizer, NSThread, NSObject, NSNumber;

@interface AXSpeechManager : NSObject <TTSSpeechSynthesizerDelegate> {

	NSMutableArray* _speechQueue;
	TTSSpeechSynthesizer* _synthesizer;
	NSThread* _runThread;
	bool _runLoopEnabled;
	bool _isSpeaking;
	bool _speechEnabled;
	NSObject<OS_dispatch_semaphore>* _runThreadSemaphore;
	bool isPaused;
	NSNumber* _originalSpeechRateForJobOverride;

}

@property (assign,nonatomic) bool speechEnabled;                                       //@synthesize speechEnabled=_speechEnabled - In the implementation block
@property (nonatomic,@dynamic,readonly) bool isSpeaking; 
@property (assign,nonatomic) bool isPaused; 
@property (nonatomic,retain) NSNumber * originalSpeechRateForJobOverride;              //@synthesize originalSpeechRateForJobOverride=_originalSpeechRateForJobOverride - In the implementation block
+(URegularExpressionRef)createRegularExpressionFromString:(id)arg1 ;
+(id)matchedRangesForString:(id)arg1 withRegularExpression:(URegularExpressionRef)arg2 ;
+(id)availableLanguageCodes;
+(id)currentLanguageCode;
-(bool)isPaused;
-(void)dealloc;
-(id)init;
-(void)_initialize;
-(void)speechSynthesizer:(id)arg1 didStartSpeakingRequest:(id)arg2 ;
-(void)speechSynthesizer:(id)arg1 didFinishSpeakingRequest:(id)arg2 successfully:(bool)arg3 withError:(id)arg4 ;
-(void)speechSynthesizer:(id)arg1 didPauseSpeakingRequest:(id)arg2 ;
-(void)speechSynthesizer:(id)arg1 didContinueSpeakingRequest:(id)arg2 ;
-(void)speechSynthesizer:(id)arg1 willSpeakRangeOfSpeechString:(NSRange)arg2 forRequest:(id)arg3 ;
-(bool)isSpeaking;
-(void)continueSpeaking;
-(void)stopSpeaking:(int)arg1 ;
-(void)setIsPaused:(bool)arg1 ;
-(void)_startNextSpeechJob;
-(void)_checkForLanguageMigration:(id)arg1 ;
-(void)clearSpeechQueue;
-(void)_clearSpeechQueue;
-(bool)speechEnabled;
-(void)_dispatchSpeechAction:(id)arg1 ;
-(void)_pauseSpeaking:(id)arg1 ;
-(void)_continueSpeaking;
-(void)_stopSpeaking:(id)arg1 ;
-(void)_isSpeaking:(id)arg1 ;
-(void)_speechJobFinished:(bool)arg1 action:(id)arg2 ;
-(void)_testSpeechTransforms;
-(void)setSpeechEnabled:(bool)arg1 ;
-(void)dispatchSpeechAction:(id)arg1 ;
-(void)pauseSpeaking:(int)arg1 ;
-(void)stopSpeaking;
-(id)originalSpeechRateForJobOverride;
-(void)setOriginalSpeechRateForJobOverride:(id)arg1 ;
@end

