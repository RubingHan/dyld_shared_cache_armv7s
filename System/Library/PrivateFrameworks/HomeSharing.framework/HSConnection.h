/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:01:16 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/HomeSharing.framework/HomeSharing
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_queue, OS_dispatch_source;
@class HSConnectionConfiguration, HSConnectionStream, NSObject, HSFairPlayInfo, NSString, NSURL;

@interface HSConnection : NSObject {

	HSConnectionConfiguration* _configuration;
	long long _connectionState;
	HSConnectionStream* _connectionStream;
	long long _connectionType;
	NSObject<OS_dispatch_queue>* _serialQueue;
	NSObject<OS_dispatch_source>* _activityTimerSource;
	bool authenticationRequired;
	bool tokenCheckRequired;
	bool _tokenCheckRequred;
	unsigned basePlaylistContainerID;
	unsigned databaseID;
	unsigned databaseRevision;
	unsigned sessionID;
	unsigned _interfaceID;
	unsigned _controlKey;
	unsigned _controlPort;
	unsigned _promptID;
	HSFairPlayInfo* fairPlayInfo;
	NSString* homeSharingGroupID;
	NSString* password;
	NSString* username;

}

@property (readonly) NSURL * baseURL; 
@property (readonly) long long connectionType;                                        //@synthesize connectionType=_connectionType - In the implementation block
@property (assign) long long connectionState;                                         //@synthesize connectionState=_connectionState - In the implementation block
@property (getter=isAuthenticationRequired) bool authenticationRequired; 
@property (getter=isTokenCheckRequired,readonly) bool tokenCheckRequred;              //@synthesize tokenCheckRequred=_tokenCheckRequred - In the implementation block
@property (retain) HSFairPlayInfo * fairPlayInfo; 
@property (copy) NSString * homeSharingGroupID; 
@property (copy) NSString * username; 
@property (copy) NSString * password; 
@property (assign) unsigned databaseID; 
@property (assign) unsigned databaseRevision; 
@property (assign) unsigned basePlaylistContainerID; 
@property (assign) unsigned sessionID; 
@property (assign) unsigned interfaceID;                                              //@synthesize interfaceID=_interfaceID - In the implementation block
@property (assign) unsigned controlKey;                                               //@synthesize controlKey=_controlKey - In the implementation block
@property (assign) unsigned controlPort;                                              //@synthesize controlPort=_controlPort - In the implementation block
@property (assign,nonatomic) unsigned promptID;                                       //@synthesize promptID=_promptID - In the implementation block
@property (assign) bool tokenCheckRequired; 
-(id)password;
-(void)setPassword:(id)arg1 ;
-(void)connectWithCompletionHandler:(/*^block*/ id)arg1 ;
-(id)homeSharingGroupID;
-(void)setHomeSharingGroupID:(id)arg1 ;
-(long long)connectionState;
-(unsigned)databaseID;
-(void)sendRequest:(id)arg1 withResponseHandler:(/*^block*/ id)arg2 ;
-(void)dealloc;
-(id)baseURL;
-(void)disconnect;
-(long long)connectionType;
-(unsigned)sessionID;
-(void)setSessionID:(unsigned)arg1 ;
-(id)initWithBaseURL:(id)arg1 connectionType:(long long)arg2 ;
-(id)initWithConfiguration:(id)arg1 connectionType:(long long)arg2 ;
-(void)setDatabaseRevision:(unsigned)arg1 ;
-(void)setFairPlayInfo:(id)arg1 ;
-(void)setConnectionState:(long long)arg1 ;
-(id)fairPlayInfo;
-(unsigned)_sapVersionForConnectionType;
-(void)_continueFPSetupNegotiationWithData:(id)arg1 internalConnectionCompletionHandler:(/*^block*/ id)arg2 ;
-(void)_loadDatabaseWithInternalConnectionCompletionHandler:(/*^block*/ id)arg1 ;
-(void)setAuthenticationRequired:(bool)arg1 ;
-(void)setTokenCheckRequired:(bool)arg1 ;
-(void)_sendRequest:(id)arg1 withInternalResponseHandler:(/*^block*/ id)arg2 ;
-(unsigned)controlPort;
-(unsigned)controlKey;
-(unsigned)databaseRevision;
-(void)setBasePlaylistContainerID:(unsigned)arg1 ;
-(unsigned)basePlaylistContainerID;
-(void)checkForDatabaseUpdatesWithCompletionHandler:(/*^block*/ id)arg1 ;
-(void)_setupControlConnectionWithInternalConnectionCompletionHandler:(/*^block*/ id)arg1 ;
-(void)_onSerialQueue_sendRequest:(id)arg1 withInternalResponseHandler:(/*^block*/ id)arg2 ;
-(void)setPromptID:(unsigned)arg1 ;
-(void)setInterfaceID:(unsigned)arg1 ;
-(void)setControlPort:(unsigned)arg1 ;
-(void)setControlKey:(unsigned)arg1 ;
-(id)newControlConnection;
-(bool)isAuthenticationRequired;
-(bool)tokenCheckRequired;
-(bool)isTokenCheckRequired;
-(unsigned)interfaceID;
-(unsigned)promptID;
-(void)setUsername:(id)arg1 ;
-(id)username;
-(void)setDatabaseID:(unsigned)arg1 ;
-(id)initWithBaseURL:(id)arg1 ;
@end

