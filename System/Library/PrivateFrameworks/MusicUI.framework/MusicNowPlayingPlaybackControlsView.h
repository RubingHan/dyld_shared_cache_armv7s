/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:01:40 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/MusicUI.framework/MusicUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <MusicUI/MusicUI-Structs.h>
#import <MediaPlayer/MPPlaybackControlsView.h>
#import <MediaPlayer/MPDetailSliderDelegate.h>
#import <UIKit/UIActionSheetDelegate.h>

@class UIActionSheet, SKUICircleProgressIndicator, UIButton, MusicNowPlayingTransportControls, MPVolumeSlider, UIView;

@interface MusicNowPlayingPlaybackControlsView : MPPlaybackControlsView <MPDetailSliderDelegate, UIActionSheetDelegate> {

	UIActionSheet* _createActionSheet;
	SKUICircleProgressIndicator* _createActivityIndicatorView;
	UIButton* _createButton;
	long long _createButtonActions[4];
	UIButton* _infoButton;
	bool _isDetailScrubbing;
	MusicNowPlayingTransportControls* _transportControls;
	MPVolumeSlider* _volumeSlider;
	bool _usesMiniProgressControl;
	long long _orientation;

}

@property (assign,nonatomic,__weak) <MusicNowPlayingPlaybackControlsViewDelegate><MPTransportControlsTarget> * delegate; 
@property (nonatomic,readonly) UIButton * infoButton;                                                                                 //@synthesize infoButton=_infoButton - In the implementation block
@property (assign,nonatomic) long long orientation;                                                                                   //@synthesize orientation=_orientation - In the implementation block
@property (nonatomic,readonly) UIView * viewForPresentingRepeat; 
@property (assign,getter=isShowingCreateLoadingIndicator,nonatomic) bool showingCreateLoadingIndicator; 
@property (assign,nonatomic) bool usesMiniProgressControl;                                                                            //@synthesize usesMiniProgressControl=_usesMiniProgressControl - In the implementation block
@property (nonatomic,readonly) UIActionSheet * createActionSheet;                                                                     //@synthesize createActionSheet=_createActionSheet - In the implementation block
+(unsigned long long)defaultVisibleParts;
-(void)setItem:(id)arg1 ;
-(id)newButtonForPart:(unsigned long long)arg1 ;
-(id)repeatButtonImage;
-(id)shuffleButtonImage;
-(bool)detailScrubbingHidesControls;
-(bool)shouldOverrideProgressTimeLabelStyle;
-(void)reloadView;
-(id)newProgressIndicator;
-(id)playbackSpeedButtonImageForPlaybackSpeed:(unsigned long long)arg1 ;
-(id)playbackSpeedTitleForPlaybackSpeed:(unsigned long long)arg1 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(void)layoutSubviews;
-(long long)orientation;
-(void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2 ;
-(void)tintColorDidChange;
-(void)setOrientation:(long long)arg1 ;
-(long long)buttonType;
-(void).cxx_destruct;
-(id)infoButton;
-(void)_playbackContentsDidChangeNotification:(id)arg1 ;
-(void)_defaultsDidChangeNotification;
-(id)createActionSheet;
-(id)viewForPresentingRepeat;
-(void)_infoButtonAction:(id)arg1 ;
-(void)setShowingCreateLoadingIndicator:(bool)arg1 ;
-(void)setUsesMiniProgressControl:(bool)arg1 animated:(bool)arg2 ;
-(void)_createAction:(id)arg1 ;
-(void)_applyRepeatSettingsToButton:(id)arg1 ;
-(void)_applyShuffleSettingsToButton:(id)arg1 ;
-(bool)_isCreateAvailable;
-(void)_updateForItemDidChangeAnimated:(bool)arg1 ;
-(bool)isShowingCreateLoadingIndicator;
-(void)setUsesMiniProgressControl:(bool)arg1 ;
-(bool)usesMiniProgressControl;
-(void)setPlayer:(id)arg1 ;
@end

