/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:01:38 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/MusicUI.framework/MusicUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <MusicUI/MusicUI-Structs.h>
#import <MediaPlayer/MPAVRoutingControllerDelegate.h>

@protocol OS_dispatch_source;
@class MPAVRoutingController, MPAVRoute, NSObject, RadioStation, NSDate, RUPlaybackTimeoutInfoController, MPReportingController;

@interface MusicRadioPlaybackCoordinator : NSObject <MPAVRoutingControllerDelegate> {

	MPAVRoutingController* _routingController;
	MPAVRoute* _pickedRoute;
	bool _deviceIsDocked;
	bool _deviceIsLocked;
	bool _didPresentNotificationForCurrentItem;
	int _lockStateNotifyToken;
	bool _lockStateNotifyTokenIsValid;
	void* _mediaRemoteCommandObserver;
	NSObject<OS_dispatch_source>* _pauseTimeoutTimerSource;
	RadioStation* _playbackNotificationStation;
	bool _playbackIsPaused;
	NSDate* _playbackTimeoutBeginDate;
	double _playbackTimeoutDuration;
	RUPlaybackTimeoutInfoController* _playbackTimeoutInfoController;
	CFUserNotificationRef _playbackTimeoutNotification;
	bool _playbackTimeoutNotificationDidExpire;
	NSObject<OS_dispatch_source>* _playbackTimeoutNotificationExpirationTimerSource;
	CFRunLoopSourceRef _playbackTimeoutNotificationRunLoopSource;
	NSObject<OS_dispatch_source>* _presentPlaybackTimeoutTimerSource;
	bool _wasUsingBackgroundNetwork;
	RadioStation* _currentStation;
	MPReportingController* _reportingController;

}

@property (nonatomic,retain) RadioStation * currentStation;                            //@synthesize currentStation=_currentStation - In the implementation block
@property (nonatomic,retain) MPReportingController * reportingController;              //@synthesize reportingController=_reportingController - In the implementation block
+(id)sharedCoordinator;
-(void)_playbackStateDidChangeNotification:(id)arg1 ;
-(void)_applicationWillEnterForegroundNotification:(id)arg1 ;
-(void)routingControllerAvailableRoutesDidChange:(id)arg1 ;
-(void)_radioModelDidChangeNotification:(id)arg1 ;
-(void)_itemWillChangeNotification:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(id)_init;
-(void).cxx_destruct;
-(void)setupPlaybackQueueWithPlaybackContext:(id)arg1 completionHandler:(/*^block*/ id)arg2 ;
-(id)currentStation;
-(void)_resetPlaybackTimeoutInformation;
-(void)_dismissExpiredPlaybackTimeoutNotificationForced:(bool)arg1 ;
-(bool)_isPauseTimeoutActive;
-(void)_updatePlaybackTimerForDeviceStateChange;
-(void)_effectiveVolumeDidChangeNotification:(id)arg1 ;
-(void)_playbackContentsDidChangeNotification:(id)arg1 ;
-(void)_itemIsBannedDidChangeNotification:(id)arg1 ;
-(void)_itemIsInWishListDidChangeNotification:(id)arg1 ;
-(void)_itemIsLikedDidChangeNotification:(id)arg1 ;
-(void)_itemDurationDidBecomeAvailableNotification:(id)arg1 ;
-(void)_cancelPlaybackTimeoutNotification;
-(void)_cancelPauseTimeoutTimer;
-(void)_cancelPresentPlaybackTimeoutTimer;
-(id)reportingController;
-(void)setCurrentStation:(id)arg1 ;
-(void)_setupPlayerWithRadioPlaybackContext:(id)arg1 ;
-(bool)_isRadioRelevantItem:(id)arg1 ;
-(void)_presentPlaybackTimeoutNotificationForCurrentItemIfNeeded;
-(void)_schedulePlaybackTimeoutNotificationExpirationTimerIfNeeded;
-(void)_cancelPlaybackTimeoutNotificationExpirationTimer;
-(void)_fullMuteDidChangeNotification:(id)arg1 ;
-(void)_receivedUserNotificationResponseForUserNotification:(CFUserNotificationRef)arg1 withResponseFlags:(unsigned long long)arg2 ;
-(void)setReportingController:(id)arg1 ;
@end

