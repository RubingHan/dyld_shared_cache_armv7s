/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:00:33 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/AccountsDaemon.framework/AccountsDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Accounts/ACAccountStore.h>
#import <Accounts/ACDAccountStoreProtocol.h>

@protocol ACDAccountStoreDelegate;
@class NSMutableArray, ACDDatabase, ACDClientAuthorizationManager, ACDClient, ACDAccountStoreFilter, ACDAuthenticationPluginManager, ACDAccessPluginManager, ACDDataclassOwnersManager, ACDAuthenticationDialogManager;

@interface ACDAccountStore : ACAccountStore <ACDAccountStoreProtocol> {

	NSMutableArray* _accountChanges;
	ACDDatabase* _database;
	ACDClientAuthorizationManager* _authorizationManager;
	bool _notificationsEnabled;
	bool _migrationInProgress;
	<ACDAccountStoreDelegate>* _delegate;
	ACDClient* _client;
	ACDAccountStoreFilter* _filter;
	ACDAuthenticationPluginManager* _authenticationPluginManager;
	ACDAccessPluginManager* _accessPluginManager;
	ACDDataclassOwnersManager* _dataclassOwnersManager;
	ACDAuthenticationDialogManager* _authenticationDialogManager;

}

@property (assign,nonatomic,__weak) <ACDAccountStoreDelegate> * delegate;                               //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic,__weak) ACDClient * client;                                                 //@synthesize client=_client - In the implementation block
@property (nonatomic,readonly) ACDClientAuthorizationManager * authorizationManager;                    //@synthesize authorizationManager=_authorizationManager - In the implementation block
@property (assign,nonatomic,__weak) ACDAccountStoreFilter * filter;                                     //@synthesize filter=_filter - In the implementation block
@property (nonatomic,retain) ACDAuthenticationPluginManager * authenticationPluginManager;              //@synthesize authenticationPluginManager=_authenticationPluginManager - In the implementation block
@property (nonatomic,retain) ACDAccessPluginManager * accessPluginManager;                              //@synthesize accessPluginManager=_accessPluginManager - In the implementation block
@property (nonatomic,retain) ACDDataclassOwnersManager * dataclassOwnersManager;                        //@synthesize dataclassOwnersManager=_dataclassOwnersManager - In the implementation block
@property (nonatomic,retain) ACDAuthenticationDialogManager * authenticationDialogManager;              //@synthesize authenticationDialogManager=_authenticationDialogManager - In the implementation block
@property (assign,nonatomic) bool notificationsEnabled;                                                 //@synthesize notificationsEnabled=_notificationsEnabled - In the implementation block
@property (assign,getter=isMigrationInProgress,nonatomic) bool migrationInProgress;                     //@synthesize migrationInProgress=_migrationInProgress - In the implementation block
-(void)setDelegate:(id)arg1 ;
-(id)delegate;
-(void)setFilter:(id)arg1 ;
-(void).cxx_destruct;
-(id)_accountTypeWithIdentifier:(id)arg1 ;
-(void)_connectToRemoteAccountStoreUsingEndpoint:(id)arg1 ;
-(bool)isMigrationInProgress;
-(id)_childAccountsForAccountWithID:(id)arg1 ;
-(id)dataclassOwnersManager;
-(id)_clientTokenQueue;
-(void)_removeClientTokenForAccountIdentifer:(id)arg1 ;
-(void)_noteAccountStoreDidSaveAccountsWithAccountTypeIdentifiers:(id)arg1 ;
-(id)_addAccountNoSave:(id)arg1 withDataclassActions:(id)arg2 error:(id*)arg3 ;
-(void)_setAccountManagedObjectRelationships:(id)arg1 withAccount:(id)arg2 isNew:(bool)arg3 error:(id*)arg4 ;
-(void)_updateAccountNoSave:(id)arg1 withDataclassActions:(id)arg2 error:(id*)arg3 ;
-(id)_accountWithIdentifier:(id)arg1 ;
-(void)_deleteAccountNoSave:(id)arg1 withDataclassActions:(id)arg2 error:(id*)arg3 ;
-(id)_displayAccountForAccount:(id)arg1 ;
-(void)accountsWithAccountType:(id)arg1 handler:(/*^block*/ id)arg2 ;
-(id)_dataclassWithName:(id)arg1 createIfNecessary:(bool)arg2 ;
-(void)_updateExistenceCacheOfAccountWithTypeIdentifier:(id)arg1 withHandler:(/*^block*/ id)arg2 ;
-(id)_allAccounts_sync;
-(id)_legacyCredentialForAccount:(id)arg1 client:(id)arg2 error:(id*)arg3 ;
-(bool)_canManagedAccountType:(id)arg1 syncManagedDataclass:(id)arg2 ;
-(bool)_isManagedAccount:(id)arg1 enabledForManagedDataclass:(id)arg2 ;
-(id)_removeAccountNoSave:(id)arg1 withDataclassActions:(id)arg2 ;
-(bool)_canSaveAccount:(id)arg1 ;
-(void)saveAccount:(id)arg1 verify:(bool)arg2 dataclassActions:(id)arg3 completion:(/*^block*/ id)arg4 ;
-(void)_completeSave:(id)arg1 dataclassActions:(id)arg2 completion:(/*^block*/ id)arg3 ;
-(void)verifyCredentialsForAccount:(id)arg1 saveWhenAuthorized:(bool)arg2 withHandler:(/*^block*/ id)arg3 ;
-(id)_handleAccountAdd:(id)arg1 withDataclassActions:(id)arg2 ;
-(id)_handleAccountMod:(id)arg1 withDataclassActions:(id)arg2 ;
-(void)_requestAccessForAccountTypeWithIdentifier:(id)arg1 options:(id)arg2 allowUserInteraction:(bool)arg3 withHandler:(/*^block*/ id)arg4 ;
-(id)authorizationManager;
-(id)_clientTokenForAccountIdentifier:(id)arg1 error:(id)arg2 ;
-(id)authenticationDialogManager;
-(void)setClientBundleID:(id)arg1 withHandler:(/*^block*/ id)arg2 ;
-(void)setNotificationsEnabledNum:(bool)arg1 ;
-(void)accountsWithHandler:(/*^block*/ id)arg1 ;
-(void)accountTypesWithHandler:(/*^block*/ id)arg1 ;
-(void)accountWithIdentifier:(id)arg1 handler:(/*^block*/ id)arg2 ;
-(void)parentAccountForAccountWithIdentifier:(id)arg1 handler:(/*^block*/ id)arg2 ;
-(void)childAccountsForAccountWithIdentifier:(id)arg1 handler:(/*^block*/ id)arg2 ;
-(void)accountIdentifiersEnabledToSyncDataclass:(id)arg1 handler:(/*^block*/ id)arg2 ;
-(void)accountIdentifiersEnabledForDataclass:(id)arg1 handler:(/*^block*/ id)arg2 ;
-(void)accountExistsWithDescription:(id)arg1 completion:(/*^block*/ id)arg2 ;
-(void)kerberosAccountsForDomainFromURL:(id)arg1 completion:(/*^block*/ id)arg2 ;
-(void)visibleTopLevelAccountsWithAccountTypeIdentifiers:(id)arg1 completion:(/*^block*/ id)arg2 ;
-(void)accountsWithAccountTypeIdentifiers:(id)arg1 preloadedProperties:(id)arg2 completion:(/*^block*/ id)arg3 ;
-(void)childAccountsWithAccountTypeIdentifier:(id)arg1 parentAccountIdentifier:(id)arg2 handler:(/*^block*/ id)arg3 ;
-(void)displayAccountTypeForAccountWithIdentifier:(id)arg1 handler:(/*^block*/ id)arg2 ;
-(void)accountTypeWithIdentifier:(id)arg1 handler:(/*^block*/ id)arg2 ;
-(void)credentialForAccountWithIdentifier:(id)arg1 handler:(/*^block*/ id)arg2 ;
-(void)credentialForAccountWithIdentifier:(id)arg1 bundleID:(id)arg2 handler:(/*^block*/ id)arg3 ;
-(void)enabledDataclassesForAccountWithIdentifier:(id)arg1 handler:(/*^block*/ id)arg2 ;
-(void)provisionedDataclassesForAccountWithIdentifier:(id)arg1 handler:(/*^block*/ id)arg2 ;
-(void)dataclassesWithHandler:(/*^block*/ id)arg1 ;
-(void)supportedDataclassesForAccountType:(id)arg1 handler:(/*^block*/ id)arg2 ;
-(void)syncableDataclassesForAccountType:(id)arg1 handler:(/*^block*/ id)arg2 ;
-(void)dataclassActionsForAccountSave:(id)arg1 completion:(/*^block*/ id)arg2 ;
-(void)dataclassActionsForAccountDeletion:(id)arg1 completion:(/*^block*/ id)arg2 ;
-(void)isPerformingDataclassActionsForAccount:(id)arg1 completion:(/*^block*/ id)arg2 ;
-(void)accessKeysForAccountType:(id)arg1 handler:(/*^block*/ id)arg2 ;
-(void)removeAccount:(id)arg1 withDataclassActions:(id)arg2 completion:(/*^block*/ id)arg3 ;
-(void)canSaveAccount:(id)arg1 completion:(/*^block*/ id)arg2 ;
-(void)saveAccount:(id)arg1 withHandler:(/*^block*/ id)arg2 ;
-(void)updateExistenceCacheOfAccountWithTypeIdentifier:(id)arg1 withHandler:(/*^block*/ id)arg2 ;
-(void)insertAccountType:(id)arg1 withHandler:(/*^block*/ id)arg2 ;
-(void)removeAccountType:(id)arg1 withHandler:(/*^block*/ id)arg2 ;
-(void)requestAccessForAccountTypeWithIdentifier:(id)arg1 options:(id)arg2 withHandler:(/*^block*/ id)arg3 ;
-(void)appPermissionsForAccountType:(id)arg1 withHandler:(/*^block*/ id)arg2 ;
-(void)setPermissionGranted:(id)arg1 forBundleID:(id)arg2 onAccountType:(id)arg3 withHandler:(/*^block*/ id)arg4 ;
-(void)permissionForAccountType:(id)arg1 withHandler:(/*^block*/ id)arg2 ;
-(void)grantedPermissionsForAccountType:(id)arg1 withHandler:(/*^block*/ id)arg2 ;
-(void)clearGrantedPermissionsForAccountType:(id)arg1 withHandler:(/*^block*/ id)arg2 ;
-(void)typeIdentifierForDomain:(id)arg1 withHandler:(/*^block*/ id)arg2 ;
-(void)clearAllPermissionsGrantedForAccountType:(id)arg1 withHandler:(/*^block*/ id)arg2 ;
-(void)renewCredentialsForAccount:(id)arg1 options:(id)arg2 completion:(/*^block*/ id)arg3 ;
-(void)isTetheredSyncingEnabledForDataclass:(id)arg1 completion:(/*^block*/ id)arg2 ;
-(void)tetheredSyncSourceTypeForDataclass:(id)arg1 completion:(/*^block*/ id)arg2 ;
-(void)isPushSupportedForAccount:(id)arg1 completion:(/*^block*/ id)arg2 ;
-(void)accountIdentifiersEnabledForDataclasses:(id)arg1 withAccountTypeIdentifiers:(id)arg2 completion:(/*^block*/ id)arg3 ;
-(void)handleURL:(id)arg1 ;
-(void)addClientToken:(id)arg1 forAccountIdentifier:(id)arg2 completion:(/*^block*/ id)arg3 ;
-(void)clientTokenForAccountIdentifier:(id)arg1 completion:(/*^block*/ id)arg2 ;
-(id)accountsWithAccountTypeIdentifier:(id)arg1 ;
-(bool)accountsExistWithAccountTypeIdentifier:(id)arg1 ;
-(void)addAccountNoSave:(id)arg1 error:(id*)arg2 ;
-(void)updateAccountNoSave:(id)arg1 error:(id*)arg2 ;
-(void)deleteAccountNoSave:(id)arg1 error:(id*)arg2 ;
-(id)masterCredentialForAccountIdentifier:(id)arg1 ;
-(void)saveAccount:(id)arg1 pid:(id)arg2 verify:(bool)arg3 dataclassActions:(id)arg4 completion:(/*^block*/ id)arg5 ;
-(id)_remoteAccountStore;
-(id)authenticationPluginManager;
-(void)setAuthenticationPluginManager:(id)arg1 ;
-(id)accessPluginManager;
-(void)setAccessPluginManager:(id)arg1 ;
-(void)setDataclassOwnersManager:(id)arg1 ;
-(void)setAuthenticationDialogManager:(id)arg1 ;
-(void)setMigrationInProgress:(bool)arg1 ;
-(void)setNotificationsEnabled:(bool)arg1 ;
-(bool)notificationsEnabled;
-(void)openAuthenticationURL:(id)arg1 forAccount:(id)arg2 shouldConfirm:(bool)arg3 completion:(/*^block*/ id)arg4 ;
-(id)_save;
-(void)setClient:(id)arg1 ;
-(id)client;
-(id)filter;
-(id)initWithClient:(id)arg1 ;
-(id)accountTypeWithIdentifier:(id)arg1 ;
@end

