/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:02:03 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <PassKitCore/PassKitCore-Structs.h>
@interface PKImageResizingConstraints : NSObject {

	int _constraintType;
	double _fixedDimension;
	CGSize _size;
	double _minAspectRatio;
	double _maxAspectRatio;
	bool _respectAspectRatioRange;
	bool _outputMirrored;
	double _outputScale;
	double _outputBorderTrim;

}

@property (assign,nonatomic) double outputScale;                   //@synthesize outputScale=_outputScale - In the implementation block
@property (assign,nonatomic) double outputBorderTrim;              //@synthesize outputBorderTrim=_outputBorderTrim - In the implementation block
@property (assign,nonatomic) bool outputMirrored;                  //@synthesize outputMirrored=_outputMirrored - In the implementation block
+(id)constraintsWithFixedWidth:(double)arg1 minAspectRatio:(double)arg2 maxAspectRatio:(double)arg3 ;
+(id)constraintsWithFixedHeight:(double)arg1 minAspectRatio:(double)arg2 maxAspectRatio:(double)arg3 ;
+(id)constraintsWithFixedLargeDimenstion:(double)arg1 minAspectRatio:(double)arg2 maxAspectRatio:(double)arg3 ;
+(id)constraintsWithFixedSmallDimenstion:(double)arg1 minAspectRatio:(double)arg2 maxAspectRatio:(double)arg3 ;
+(id)constraintsWithMaxSize:(CGSize)arg1 minAspectRatio:(double)arg2 maxAspectRatio:(double)arg3 ;
+(id)constraintsWithMinSize:(CGSize)arg1 minAspectRatio:(double)arg2 maxAspectRatio:(double)arg3 ;
+(id)constraintsWithMaxSize:(CGSize)arg1 ;
+(id)constraintsWithMinSize:(CGSize)arg1 ;
+(id)constraintsWithFixedSize:(CGSize)arg1 ;
-(id)init;
-(bool)getPixelCropRect:(CGRect*)arg1 pixelOutputSize:(CGSize*)arg2 forImage:(id)arg3 ;
-(double)outputScale;
-(bool)outputMirrored;
-(id)resizedImage:(id)arg1 ;
-(bool)_getPixelCropRect:(CGRect*)arg1 pixelOutputSize:(CGSize*)arg2 forImageSize:(CGSize)arg3 scale:(double)arg4 ;
-(id)_flippedConstraints;
-(void)setOutputScale:(double)arg1 ;
-(bool)_reasonable;
-(double)outputBorderTrim;
-(void)setOutputBorderTrim:(double)arg1 ;
-(void)setOutputMirrored:(bool)arg1 ;
@end

