/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:02:03 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PassKitCore/PKPassLibraryDelegate.h>

@protocol PKGroupsControllerDelegate;
@class PKPassLibrary, NSMutableArray, NSMutableDictionary, PKCatalog, NSArray;

@interface PKGroupsController : NSObject <PKPassLibraryDelegate> {

	PKPassLibrary* _passLibrary;
	NSMutableArray* _groups;
	NSMutableDictionary* _passesByUniqueID;
	NSMutableDictionary* _groupsByGroupID;
	NSMutableDictionary* _indicesByGroupID;
	NSMutableDictionary* _groupIDsByPassUniqueID;
	bool _suppressRemoteUpdates;
	bool _enqueueRemoteUpdates;
	PKCatalog* _catalogBeforeReordering;
	NSMutableArray* _enqueuedUpdates;
	NSArray* _localPasses;
	bool _limitedMode;
	<PKGroupsControllerDelegate>* _delegate;

}

@property (assign,nonatomic) <PKGroupsControllerDelegate> * delegate;              //@synthesize delegate=_delegate - In the implementation block
-(unsigned long long)indexOfGroup:(id)arg1 ;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(id)delegate;
-(id)groupAtIndex:(unsigned long long)arg1 ;
-(void)passLibrary:(id)arg1 receivedUpdatedCatalog:(id)arg2 passes:(id)arg3 ;
-(void)handleUserPassDelete:(id)arg1 ;
-(void)_updateStateWithCatalog:(id)arg1 passes:(id)arg2 notify:(bool)arg3 ;
-(void)reloadGroupsWithCompletion:(/*^block*/ id)arg1 ;
-(unsigned long long)_indexOfGroupID:(id)arg1 ;
-(void)_removeGroup:(id)arg1 notify:(bool)arg2 ;
-(id)_copyRemoteCatalog;
-(void)_moveGroup:(id)arg1 fromIndex:(unsigned long long)arg2 toIndex:(unsigned long long)arg3 notify:(bool)arg4 ;
-(void)_performEnqueuedUpdates;
-(void)_insertGroup:(id)arg1 atIndex:(unsigned long long)arg2 notify:(bool)arg3 ;
-(void)reloadGroupsAndNotify:(bool)arg1 completion:(/*^block*/ id)arg2 ;
-(void)_performOrEnqueueUpdate:(/*^block*/ id)arg1 ;
-(unsigned long long)groupCount;
-(void)_fixIndex:(unsigned long long)arg1 ;
-(void)_insertLocalGroupsIntoCatalog:(id)arg1 ;
-(id)_updateAndCreateGroupsWithCatalog:(id)arg1 passes:(id)arg2 notify:(bool)arg3 ;
-(bool)_groupIDIsNew:(id)arg1 ;
-(void)_placeGroup:(id)arg1 atIndex:(unsigned long long)arg2 notify:(bool)arg3 ;
-(unsigned long long)_destinationIndexForGroupID:(id)arg1 catalogGroups:(id)arg2 skippingNewGroupsAfterIndex:(unsigned long long)arg3 ;
-(id)_passesDictionaryFromSet:(id)arg1 ;
-(void)_fixIndicesFrom:(unsigned long long)arg1 ;
-(void)_fixIndicesFrom:(unsigned long long)arg1 through:(unsigned long long)arg2 ;
-(id)initLimited;
-(void)loadGroupsWithCompletion:(/*^block*/ id)arg1 ;
-(void)loadGroupsSynchronously;
-(void)reloadGroups;
-(unsigned long long)groupIndexForPassUniqueID:(id)arg1 ;
-(void)handleUserPassIngestionWithData:(id)arg1 completion:(/*^block*/ id)arg2 ;
-(void)suppressRemoteUpdates:(bool)arg1 ;
-(void)moveGroupAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2 ;
-(void)enableRemoteUpdates;
-(void)addLocalPasses:(id)arg1 ;
@end

