/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:02:19 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/Preferences.framework/Preferences
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Preferences/Preferences-Structs.h>
#import <Preferences/PSEditingPane.h>
#import <UIKit/UIKeyInput.h>

@protocol PINEntryView;
@class UITransitionView, UIView, UIKeyboard;

@interface DevicePINPane : PSEditingPane <UIKeyInput> {

	UITransitionView* _transitionView;
	bool _transitioning;
	UIView<PINEntryView>* _pinView;
	CGRect _pinViewFrame;
	UIKeyboard* _keypad;
	CGRect _keypadFrame;
	bool _keypadActive;
	long long _autocapitalizationType;
	long long _autocorrectionType;
	long long _keyboardType;
	long long _keyboardAppearance;
	bool _playSound;
	bool _isBlocked;
	bool _simplePIN;

}

@property (assign,nonatomic) long long autocapitalizationType;                           //@synthesize autocapitalizationType=_autocapitalizationType - In the implementation block
@property (assign,nonatomic) long long autocorrectionType;                               //@synthesize autocorrectionType=_autocorrectionType - In the implementation block
@property (assign,nonatomic) long long spellCheckingType; 
@property (assign,nonatomic) long long keyboardType;                                     //@synthesize keyboardType=_keyboardType - In the implementation block
@property (assign,nonatomic) long long keyboardAppearance;                               //@synthesize keyboardAppearance=_keyboardAppearance - In the implementation block
@property (assign,nonatomic) long long returnKeyType; 
@property (assign,nonatomic) bool enablesReturnKeyAutomatically; 
@property (assign,getter=isSecureTextEntry,nonatomic) bool secureTextEntry; 
-(id)password;
-(void)clearPassword;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)dealloc;
-(void)layoutSubviews;
-(void)setTitle:(id)arg1 ;
-(bool)resignFirstResponder;
-(bool)becomeFirstResponder;
-(id)text;
-(void)setText:(id)arg1 ;
-(bool)canBecomeFirstResponder;
-(void)transitionViewDidComplete:(id)arg1 ;
-(long long)keyboardAppearance;
-(bool)hasText;
-(void)insertText:(id)arg1 ;
-(void)deleteBackward;
-(bool)isSecureTextEntry;
-(long long)autocapitalizationType;
-(void)setAutocapitalizationType:(long long)arg1 ;
-(long long)autocorrectionType;
-(void)setAutocorrectionType:(long long)arg1 ;
-(long long)keyboardType;
-(void)setKeyboardType:(long long)arg1 ;
-(void)setKeyboardAppearance:(long long)arg1 ;
-(bool)requiresKeyboard;
-(id)specifierLabel;
-(void)deactivateKeypadView;
-(void)dismissKeypad;
-(void)showFailedAttempts:(int)arg1 ;
-(void)showError:(id)arg1 error:(id)arg2 isBlocked:(bool)arg3 animate:(bool)arg4 ;
-(void)hideFailedAttempts;
-(void)hideError;
-(void)setPINPolicyString:(id)arg1 visible:(bool)arg2 ;
-(bool)simplePIN;
-(void)okButtonPressed;
-(void)slideToNewPasscodeField:(bool)arg1 withKeyboard:(bool)arg2 ;
-(void)setSimplePIN:(bool)arg1 requiresKeyboard:(bool)arg2 ;
-(void)adjustButtonsNow;
-(void)pinView:(id)arg1 pinEntered:(id)arg2 ;
-(void)_setPlaysKeyboardClicks:(bool)arg1 ;
-(void)_setKeypadState:(bool)arg1 animated:(bool)arg2 ;
-(void)activateKeypadView;
@end

