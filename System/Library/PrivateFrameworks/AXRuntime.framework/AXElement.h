/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:00:31 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/AXRuntime.framework/AXRuntime
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AXRuntime/AXRuntime-Structs.h>
#import <AXRuntime/AXGroupable.h>

@class AXElementGroup, AXUIElement, NSArray, NSString;

@interface AXElement : NSObject <AXGroupable> {

	bool _representsScannerGroup;
	AXUIElement* _uiElement;
	AXElementGroup* _parentGroup;

}

@property (nonatomic,retain) AXUIElement * uiElement;                                                            //@synthesize uiElement=_uiElement - In the implementation block
@property (nonatomic,readonly) AXUIElementRef elementRef; 
@property (nonatomic,readonly) bool isSystemWideElement; 
@property (assign,getter=isPassivelyListeningForEvents,nonatomic) bool passivelyListeningForEvents; 
@property (nonatomic,readonly) AXElement * currentApplication; 
@property (nonatomic,readonly) AXElement * springBoardApplication; 
@property (nonatomic,readonly) bool isScreenLocked; 
@property (nonatomic,readonly) NSArray * visibleElements; 
@property (nonatomic,readonly) AXElement * firstResponder; 
@property (nonatomic,readonly) AXElement * firstElementInApplication; 
@property (nonatomic,readonly) AXElement * firstElementInApplicationForFocus; 
@property (nonatomic,readonly) NSString * bundleId; 
@property (nonatomic,readonly) bool isSpringBoard; 
@property (nonatomic,readonly) bool isAccessibleElement; 
@property (nonatomic,readonly) bool isVisible; 
@property (nonatomic,readonly) NSString * label; 
@property (nonatomic,readonly) NSString * hint; 
@property (nonatomic,readonly) NSString * value; 
@property (nonatomic,readonly) CGPathRef path; 
@property (nonatomic,readonly) NSString * language; 
@property (nonatomic,readonly) NSString * identifier; 
@property (nonatomic,readonly) unsigned long long traits; 
@property (nonatomic,readonly) CGRect visibleFrame; 
@property (nonatomic,readonly) CGRect textCursorFrame; 
@property (nonatomic,readonly) CGPoint centerPoint; 
@property (nonatomic,readonly) CGPoint visiblePoint; 
@property (nonatomic,readonly) bool isValid; 
@property (nonatomic,readonly) AXElement * touchContainer; 
@property (nonatomic,readonly) bool isKeyboardKey; 
@property (nonatomic,readonly) bool isTouchContainer; 
@property (nonatomic,readonly) bool hasWebContent; 
@property (nonatomic,readonly) bool hasTextEntry; 
@property (nonatomic,readonly) bool isMathEquation; 
@property (nonatomic,readonly) unsigned windowContextId; 
@property (nonatomic,readonly) NSArray * variantKeys; 
@property (nonatomic,readonly) bool hasVariantKeys; 
@property (nonatomic,readonly) NSArray * textOperations; 
@property (nonatomic,readonly) NSArray * typingCandidates; 
@property (assign,nonatomic) NSRange selectedTextRange; 
@property (nonatomic,readonly) bool canPerformEscape; 
@property (nonatomic,readonly) bool canPerformZoom; 
@property (nonatomic,readonly) NSArray * supportedGestures; 
@property (nonatomic,readonly) bool isScannerElement; 
@property (nonatomic,readonly) bool representsScannerGroup;                                                      //@synthesize representsScannerGroup=_representsScannerGroup - In the implementation block
@property (nonatomic,readonly) NSArray * scannerRootGroup; 
@property (nonatomic,retain) AXElement * autoscrollTarget; 
@property (nonatomic,readonly) bool isAutoscrolling; 
@property (nonatomic,readonly) CGRect frame; 
@property (assign,nonatomic) AXElementGroup * parentGroup;                                                       //@synthesize parentGroup=_parentGroup - In the implementation block
+(id)elementWithUIElement:(id)arg1 ;
+(id)elementWithAXUIElement:(AXUIElementRef)arg1 ;
+(id)systemWideElement;
+(id)elementAtCoordinate:(CGPoint)arg1 withVisualPadding:(bool)arg2 ;
-(bool)performAction:(int)arg1 ;
-(void)setParentGroup:(id)arg1 ;
-(id)parentGroup;
-(id)bundleId;
-(void)dealloc;
-(CGRect)frame;
-(bool)isEqual:(id)arg1 ;
-(id)description;
-(id)firstResponder;
-(bool)isValid;
-(CGPathRef)path;
-(id)value;
-(id)label;
-(void)setSelectedTextRange:(NSRange)arg1 ;
-(NSRange)selectedTextRange;
-(id)identifier;
-(unsigned long long)traits;
-(bool)isVisible;
-(CGRect)visibleFrame;
-(bool)isGroup;
-(id)language;
-(id)nextElementsWithCount:(unsigned long long)arg1 ;
-(id)previousElementsWithCount:(unsigned long long)arg1 ;
-(id)initWithAXUIElement:(AXUIElementRef)arg1 ;
-(id)initWithUIElement:(id)arg1 ;
-(id)uiElement;
-(bool)isSystemWideElement;
-(id)elementForAttribute:(int)arg1 ;
-(id)_axElementsForAXUIElements:(id)arg1 ;
-(unsigned)windowContextId;
-(CGRect)convertRect:(CGRect)arg1 fromContextId:(unsigned long long)arg2 ;
-(bool)hasAllTraits:(unsigned long long)arg1 ;
-(bool)hasAnyTraits:(unsigned long long)arg1 ;
-(id)touchContainer;
-(double)distanceToPoint:(CGPoint)arg1 ;
-(bool)hasWebContent;
-(bool)hasTextEntry;
-(bool)isKeyboardKey;
-(bool)isMathEquation;
-(bool)canPerformActivate;
-(bool)canPerformEscape;
-(bool)canPerformZoom;
-(bool)press;
-(CGPoint)visiblePoint;
-(CGPoint)centerPoint;
-(bool)performAction:(int)arg1 withValue:(id)arg2 ;
-(id)currentApplication;
-(id)highestAncestorGroup;
-(AXUIElementRef)elementRef;
-(bool)isPassivelyListeningForEvents;
-(void)setPassivelyListeningForEvents:(bool)arg1 ;
-(id)springBoardApplication;
-(id)visibleElements;
-(id)firstElementInApplication;
-(id)firstElementInApplicationForFocus;
-(bool)isSpringBoard;
-(id)elementsMatchingText:(id)arg1 ;
-(bool)isAccessibleElement;
-(id)hint;
-(CGRect)textCursorFrame;
-(bool)isTouchContainer;
-(id)variantKeys;
-(bool)hasVariantKeys;
-(id)textOperations;
-(id)typingCandidates;
-(bool)hasOnlyTraits:(unsigned long long)arg1 ;
-(double)distanceToElement:(id)arg1 ;
-(void)scrollToVisible;
-(bool)canScrollInAtLeastOneDirection;
-(bool)supportsAction:(int)arg1 ;
-(id)supportedGestures;
-(bool)longPress;
-(bool)zoomIn;
-(bool)zoomOut;
-(bool)isScannerElement;
-(id)scannerRootGroup;
-(id)autoscrollTarget;
-(void)setAutoscrollTarget:(id)arg1 ;
-(void)autoscrollInDirection:(int)arg1 ;
-(void)pauseAutoscrolling;
-(void)increaseAutoscrollSpeed;
-(void)decreaseAutoscrollSpeed;
-(void)scrollToBottom;
-(void)setUiElement:(id)arg1 ;
-(bool)representsScannerGroup;
-(bool)isScreenLocked;
-(void)scrollToTop;
-(bool)isAutoscrolling;
-(bool)isMap;
@end

