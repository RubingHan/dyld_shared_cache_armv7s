/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:01:18 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/IDS.framework/IDS
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <IDS/IDS-Structs.h>
#import <IDS/IDSDaemonProtocol.h>

@protocol IDSDaemonProtocol, OS_dispatch_queue;
@class IMRemoteObject, IMLocalObject, IDSDaemonListener, NSProtocolChecker, NSString, NSMutableDictionary, NSSet, NSObject, NSLock;

@interface IDSDaemonController : NSObject <IDSDaemonProtocol> {

	id _delegate;
	IMRemoteObject<IDSDaemonProtocol>* _remoteObject;
	IMLocalObject* _localObject;
	IDSDaemonListener* _daemonListener;
	NSProtocolChecker* _protocol;
	NSString* _listenerID;
	NSMutableDictionary* _listenerServices;
	NSSet* _services;
	NSSet* _cachedServices;
	NSObject<OS_dispatch_queue>* _servicesLockQueue;
	NSMutableDictionary* _listenerCommands;
	NSSet* _commands;
	NSSet* _cachedCommands;
	NSObject<OS_dispatch_queue>* _commandsLockQueue;
	NSMutableDictionary* _listenerCapabilities;
	unsigned _cachedCapabilities;
	unsigned _lastUpdateCaps;
	NSObject<OS_dispatch_queue>* _capLockQueue;
	NSLock* _connectionLock;
	NSObject<OS_dispatch_queue>* _listenerLockQueue;
	NSObject<OS_dispatch_queue>* _remoteDaemonLockQueue;
	NSObject<OS_dispatch_queue>* _remoteMessageQueue;
	NSObject<OS_dispatch_queue>* _localObjectLockQueue;
	CFRunLoopSourceRef _runLoopSource;
	bool _hasCheckedForDaemon;
	bool _preventReconnect;
	bool _acquiringDaemonConnection;
	bool _autoReconnect;
	bool _hasBeenSuspended;

}

@property (nonatomic,readonly) IDSDaemonListener * listener;                                   //@synthesize daemonListener=_daemonListener - In the implementation block
@property (setter=_setAutoReconnect:) bool _autoReconnect;                                     //@synthesize autoReconnect=_autoReconnect - In the implementation block
@property (nonatomic,readonly) NSObject<OS_dispatch_queue> * _remoteMessageQueue;              //@synthesize remoteMessageQueue=_remoteMessageQueue - In the implementation block
@property (setter=_setListenerID:,nonatomic,retain) NSString * _listenerID;                    //@synthesize listenerID=_listenerID - In the implementation block
@property (assign,nonatomic) id delegate;                                                      //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) bool isConnecting; 
+(id)sharedInstance;
+(void)_blockUntilSendQueueIsEmpty;
+(bool)_applicationWillTerminate;
+(void)_setApplicationWillTerminate;
-(bool)isConnected;
-(bool)isConnecting;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(id)delegate;
-(id)methodSignatureForSelector:(SEL)arg1 ;
-(void)forwardInvocation:(id)arg1 ;
-(bool)connectToDaemon;
-(id)commands;
-(id)listener;
-(void)_setServices:(id)arg1 ;
-(void)_setCommands:(id)arg1 ;
-(void)_connectToDaemonWithLaunch:(bool)arg1 services:(id)arg2 commands:(id)arg3 capabilities:(unsigned)arg4 ;
-(bool)connectToDaemonWithLaunch:(bool)arg1 services:(id)arg2 commands:(id)arg3 capabilities:(unsigned)arg4 ;
-(bool)setServices:(id)arg1 forListenerID:(id)arg2 ;
-(bool)setCommands:(id)arg1 forListenerID:(id)arg2 ;
-(bool)addListenerID:(id)arg1 services:(id)arg2 commands:(id)arg3 ;
-(id)servicesForListenerID:(id)arg1 ;
-(id)commandsForListenerID:(id)arg1 ;
-(bool)addListenerID:(id)arg1 services:(id)arg2 ;
-(void)systemApplicationDidEnterBackground;
-(void)systemApplicationWillEnterForeground;
-(void)systemApplicationDidSuspend;
-(void)systemApplicationDidResume;
-(id)services;
-(bool)connectToDaemonWithLaunch:(bool)arg1 ;
-(void)_setCapabilities:(unsigned)arg1 ;
-(unsigned)capabilitiesForListenerID:(id)arg1 ;
-(void)_noteSetupComplete;
-(void)_setAutoReconnect:(bool)arg1 ;
-(void)_localObjectCleanup;
-(void)_remoteObjectCleanup;
-(void)disconnectFromDaemonWithForce:(bool)arg1 ;
-(bool)__isLocalObjectValidOnQueue:(id)arg1 ;
-(bool)__isRemoteObjectValidOnQueue:(id)arg1 ;
-(bool)remoteObjectExists;
-(void)remoteObjectDiedNotification:(id)arg1 ;
-(void)localObjectDiedNotification:(id)arg1 ;
-(void)_blockUntilSendQueueIsEmpty;
-(bool)localObjectExists;
-(bool)_autoReconnect;
-(bool)_makeConnectionWithLaunch:(bool)arg1 completionBlock:(/*^block*/ id)arg2 ;
-(void)disconnectFromDaemon;
-(bool)hasListenerForID:(id)arg1 ;
-(bool)setCapabilities:(unsigned)arg1 forListenerID:(id)arg2 ;
-(void)_listenerSetUpdated;
-(void)_agentDidLaunchNotification:(id)arg1 ;
-(void)_handleDaemonException:(id)arg1 ;
-(bool)removeListenerID:(id)arg1 ;
-(id)_remoteObject;
-(bool)_acquiringDaemonConnection;
-(id)_listenerID;
-(void)_setListenerID:(id)arg1 ;
-(id)_remoteMessageQueue;
-(id)localObject;
-(unsigned)capabilities;
@end

