/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:00:40 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_queue, BKSWorkspaceDelegate, OS_xpc_object;
@class BKSSignal, NSObject, NSString, NSMutableArray, NSMutableDictionary, BKSWorkspaceActivationTokenFactory, BKSApplicationActivationAssertion;

@interface BKSWorkspace : NSObject {

	BKSSignal* _invalidationSignal;
	NSObject<OS_dispatch_queue>* _queue;
	NSObject<OS_dispatch_queue>* _connectionQueue;
	NSObject<OS_dispatch_queue>* _applicationInfoQueue;
	<BKSWorkspaceDelegate>* _delegate;
	NSObject<OS_xpc_object>* _serverEndpoint;
	NSObject<OS_xpc_object>* _serverConnection;
	NSString* _topApplicationBundleID;
	NSMutableArray* _runningApplicationInfo;
	NSMutableArray* _activatingApplications;
	NSMutableDictionary* _activationTokens;
	unsigned _serverPort;
	bool _suspended;
	bool _locked;
	bool _workspaceOwner;
	BKSWorkspaceActivationTokenFactory* _activationTokenFactory;
	BKSApplicationActivationAssertion* _topApplicationAssertion;

}

@property (assign,nonatomic) <BKSWorkspaceDelegate> * delegate;                                        //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) unsigned serverPort;                                                    //@synthesize serverPort=_serverPort - In the implementation block
@property (nonatomic,readonly) bool suspended;                                                         //@synthesize suspended=_suspended - In the implementation block
@property (nonatomic,retain) BKSWorkspaceActivationTokenFactory * activationTokenFactory;              //@synthesize activationTokenFactory=_activationTokenFactory - In the implementation block
-(unsigned)serverPort;
-(bool)suspended;
-(id)initWithQueue:(id)arg1 ;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(id)description;
-(id)delegate;
-(void)invalidate;
-(bool)isLocked;
-(void)setLocked:(bool)arg1 ;
-(void)_registerWithServer;
-(id)initWithQueue:(id)arg1 endpoint:(id)arg2 delegate:(id)arg3 connectImmediately:(bool)arg4 ;
-(void)_makeInitialConnection;
-(void)_sendClientBundleIdentifier:(id)arg1 ;
-(void)_reregister;
-(id)topApplication;
-(id)activatingApplications;
-(void)_clearActivationStateForBundleID:(id)arg1 ;
-(id)runningApplications;
-(void)_sendActivate:(id)arg1 withActivation:(id)arg2 withDeactivation:(id)arg3 token:(id)arg4 ;
-(void)_setupForActivationForBundleID:(id)arg1 activationSettings:(id)arg2 withResult:(/*^block*/ id)arg3 ;
-(void)_noteWillActivateBundleIdentifier:(id)arg1 suspended:(bool)arg2 activationToken:(id)arg3 ;
-(void)_sendSuspend:(id)arg1 ;
-(void)activate:(id)arg1 withActivation:(id)arg2 ;
-(void)_sendLocked:(bool)arg1 ;
-(void)_sendShutdown:(bool)arg1 ;
-(id)_infoForBundleIdentifier:(id)arg1 ;
-(void)_sendApplication:(id)arg1 setRecordingAudio:(bool)arg2 ;
-(void)_sendMessage:(long long)arg1 withMessagePacker:(/*^block*/ id)arg2 replyHandler:(/*^block*/ id)arg3 ;
-(void)_sendMessage:(long long)arg1 withMessagePacker:(/*^block*/ id)arg2 replyHandler:(/*^block*/ id)arg3 replyQueue:(id)arg4 ;
-(void)_sendApplication:(id)arg1 setIsConnectionToEA:(bool)arg2 ;
-(void)_sendApplication:(id)arg1 setTaskPort:(id)arg2 ;
-(void)_sendApplication:(id)arg1 setNowPlayingAudio:(bool)arg2 ;
-(void)_sendApplication:(id)arg1 simpleGSEvent:(int)arg2 ;
-(void)_sendApplication:(id)arg1 simpleGSEvent:(int)arg2 withSubtype:(int)arg3 ;
-(void)application:(id)arg1 sendSimpleGSEvent:(int)arg2 withSubtype:(int)arg3 ;
-(id)newActivationAssertionForApplication:(id)arg1 named:(id)arg2 ;
-(void)_sendAcquireApplicationActivationAssertion:(id)arg1 uniqueID:(id)arg2 name:(id)arg3 ;
-(void)_sendReleaseApplicationActivationAssertion:(id)arg1 ;
-(void)_receiveWillBecomeReceiver:(id)arg1 ;
-(void)_receiveDidBecomeReceiver:(id)arg1 ;
-(void)_receiveHandleStatusBarReturnActionFromApplication:(id)arg1 ;
-(void)_receiveApplicationLaunchBegan:(id)arg1 ;
-(void)_receiveApplicationDidActivate:(id)arg1 ;
-(void)_receiveApplicationExited:(id)arg1 ;
-(void)_receiveApplicationSuspended:(id)arg1 ;
-(void)_receiveApplicationSuspensionSettingsUpdated:(id)arg1 ;
-(void)_receiveApplicationFinishedBackgroundContentFetching:(id)arg1 ;
-(void)_receiveWorkspaceIsSuspended:(id)arg1 ;
-(void)_receiveWorkspaceActivationResponse:(id)arg1 ;
-(void)_receiveApplicationIsBeingDebuggedStateChanged:(id)arg1 ;
-(void)_receiveCanActivateApplication:(id)arg1 ;
-(void)_receiveHandleOpenApplicationRequest:(id)arg1 ;
-(void)_receiveHandleOpenURLRequest:(id)arg1 ;
-(void)_sendMessage:(long long)arg1 withMessagePacker:(/*^block*/ id)arg2 ;
-(id)_handleWillBecomeReceiverFrom:(id)arg1 to:(id)arg2 activationToken:(id)arg3 ;
-(void)_handleDidBecomeReceiverFrom:(id)arg1 to:(id)arg2 workspaceWillResume:(bool)arg3 ;
-(id)_activationTokenForBundleID:(id)arg1 ;
-(bool)_isServerBeingDebugged;
-(id)topActivatingApplication;
-(id)_activationTokens;
-(id)runningBundleIDForPID:(int)arg1 ;
-(void)killall:(bool)arg1 ;
-(void)kill:(id)arg1 ;
-(void)kill:(id)arg1 withReason:(int)arg2 description:(id)arg3 ;
-(void)suspend:(id)arg1 ;
-(void)shutdown:(bool)arg1 ;
-(void)application:(id)arg1 setRecordingAudio:(bool)arg2 ;
-(bool)isApplicationRecordingAudio:(id)arg1 ;
-(void)elapsedCPUTimesForApplications:(id)arg1 completion:(/*^block*/ id)arg2 ;
-(bool)isBeingDebugged:(id)arg1 ;
-(double)backgroundTimeRemaining:(id)arg1 ;
-(void)application:(id)arg1 setIsConnectedToExternalAccessory:(bool)arg2 ;
-(bool)isApplicationConnectedToExternalAccessory:(id)arg1 ;
-(void)application:(id)arg1 setTaskPort:(id)arg2 ;
-(void)application:(id)arg1 setNowPlayingWithAudio:(bool)arg2 ;
-(void)application:(id)arg1 sendSimpleGSEvent:(int)arg2 ;
-(void)application:(id)arg1 resignActiveForReason:(int)arg2 ;
-(void)application:(id)arg1 resumeActiveForReason:(int)arg2 ;
-(void)_acquireApplicationActivationAssertion:(id)arg1 uniqueID:(id)arg2 name:(id)arg3 ;
-(void)_releaseApplicationActivationAssertion:(id)arg1 ;
-(void)_sendResume:(id)arg1 ;
-(void)_addApplicationAsPending:(id)arg1 ;
-(id)activationTokenFactory;
-(void)setActivationTokenFactory:(id)arg1 ;
-(void)_invalidateConnection;
-(bool)isBusy;
-(void)resume:(id)arg1 ;
-(void)_handleMessage:(id)arg1 ;
@end

