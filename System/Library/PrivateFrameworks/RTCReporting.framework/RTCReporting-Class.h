/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:02:23 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/RTCReporting.framework/RTCReporting
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_queue, OS_dispatch_source;
#import <RTCReporting/RTCReporting-Structs.h>
@class NSObject, NSDictionary, NSArray, NSMutableDictionary;

@interface RTCReporting : NSObject {

	/*^block*/ id _logMsgHandler;
	NSObject<OS_dispatch_queue>* _reportingQueue;
	int _interval;
	int _frequency;
	NSObject<OS_dispatch_source>* _timer;
	NSDictionary* _sessionInfoDict;
	NSDictionary* _userInfoDict;
	unsigned char _udid[41];
	NSArray* _frameworkList;
	NSMutableDictionary* _backendDict;
	NSMutableDictionary* _periodicServiceDict;
	timeval _startTimestamp;
	/*^block*/ id _complHandler;

}

@property (copy) id logMsgHandler;              //@synthesize logMsgHandler=_logMsgHandler - In the implementation block
+(bool)sendMsgToServer:(int)arg1 serverStoreBagName:(id)arg2 defaultSvrIP:(id)arg3 defaultSvrPort:(unsigned short)arg4 componentType:(int)arg5 version:(unsigned short)arg6 sessionID:(unsigned)arg7 eventID:(unsigned short)arg8 method:(unsigned short)arg9 respCode:(unsigned short)arg10 dict:(id)arg11 ;
+(bool)sendMsgToServer:(id)arg1 sessionInfo:(id)arg2 userInfo:(id)arg3 eventMethod:(unsigned short)arg4 eventStatus:(unsigned short)arg5 eventPayload:(id)arg6 ;
-(void)internSendMsgOfType:(int)arg1 timestamp:(const timeval*)arg2 method:(unsigned short)arg3 respCode:(unsigned short)arg4 dict:(id)arg5 ;
-(void)sendClientURLInfo:(/*^block*/ id)arg1 ;
-(void)addFrameworkStatusToReportingDictionary:(id)arg1 ;
-(bool)areBackendStatesAvailable:(unsigned*)arg1 ;
-(void)MyPeriodicTask:(unsigned short)arg1 status:(unsigned short)arg2 ;
-(id)initWithSessionInfo:(id)arg1 userInfo:(id)arg2 frameworksToCheck:(id)arg3 ;
-(bool)setReportToServer:(id)arg1 completionHandler:(/*^block*/ id)arg2 ;
-(void)flushMessages;
-(void)sendMsgWithMethod:(unsigned short)arg1 respCode:(unsigned short)arg2 dict:(id)arg3 ;
-(void)dealloc;
-(id)initWithSessionInfo:(int)arg1 version:(unsigned short)arg2 sessionID:(unsigned)arg3 frameworksToCheck:(id)arg4 ;
-(bool)setReportToServer:(int)arg1 serverStoreBagName:(id)arg2 defaultSvrIP:(id)arg3 defaultSvrPort:(unsigned short)arg4 msgBlock:(/*^block*/ id)arg5 ;
-(bool)registerPeriodicTask:(id)arg1 needToUpDate:(bool)arg2 needToReport:(bool)arg3 service_block:(/*^block*/ id)arg4 ;
-(bool)unregisterPeriodTask:(id)arg1 unservice_block:(/*^block*/ id)arg2 ;
-(bool)startLogTimerWithInterval:(int)arg1 reportingFrequency:(int)arg2 reportingMethod:(unsigned short)arg3 reportingStatus:(unsigned short)arg4 ;
-(bool)stopLogTimerForSession;
-(int)getUploadflag;
-(bool)uploadFileWithName:(id)arg1 ;
-(void)setUserInfoDict:(id)arg1 ;
-(void)setLogMsgHandler:(/*^block*/ id)arg1 ;
-(id)initWithSessionInfo:(int)arg1 version:(unsigned short)arg2 sessionID:(unsigned)arg3 ;
-(/*^block*/ id)logMsgHandler;
@end

