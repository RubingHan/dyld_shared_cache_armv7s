/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:01:29 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/Message.framework/Message
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Message/Message-Structs.h>
#import <MIME/MFMessageStore.h>

@class MFMailboxUid, MailAccount, MFActivityMonitor;

@interface MFMailMessageStore : MFMessageStore {

	unsigned long long _state;
	struct {
		unsigned isReadOnly : 1;
		unsigned hasUnsavedChangesToMessageData : 1;
		unsigned haveOpenLockFile : 1;
		unsigned compacting : 1;
		unsigned cancelInvalidation : 1;
		unsigned forceInvalidation : 1;
		unsigned isWritingChangesToDisk : 1;
		unsigned isTryingToClose : 1;
		unsigned compactOnClose : 1;
		unsigned reserved : 23;
	}  _flags;
	MFMailboxUid* _mailboxUid;
	MailAccount* _account;
	unsigned long long _deletedMessagesSize;
	unsigned long long _deletedMessageCount;
	unsigned long long _unreadMessageCount;
	unsigned long long _generationNumber;
	unsigned long long _lastFetchCount;
	MFActivityMonitor* _openMonitor;

}
+(bool)createEmptyStoreForPath:(id)arg1 ;
+(bool)createEmptyStoreIfNeededForPath:(id)arg1 ;
+(bool)storeAtPathIsWritable:(id)arg1 ;
+(unsigned long long)copyMessages:(id)arg1 toMailbox:(id)arg2 markAsRead:(bool)arg3 deleteOriginals:(bool)arg4 isDeletion:(bool)arg5 unsuccessfulOnes:(id)arg6 newMessages:(id)arg7 ;
+(Class)classForMimePart;
+(unsigned long long)copyMessages:(id)arg1 toMailbox:(id)arg2 markAsRead:(bool)arg3 deleteOriginals:(bool)arg4 isDeletion:(bool)arg5 unsuccessfulOnes:(id)arg6 ;
+(Class)headersClass;
-(void)dealloc;
-(id)description;
-(void)close;
-(id)displayName;
-(id)status;
-(id)account;
-(void)openSynchronously;
-(void)updateUserInfoToLatestValues;
-(void)messagesWereAdded:(id)arg1 earliestReceivedDate:(id)arg2 ;
-(id)mailboxUid;
-(unsigned long long)totalCount;
-(unsigned long long)unreadCount;
-(unsigned long long)serverUnreadOnlyOnServerCount;
-(unsigned long long)serverMessageCount;
-(unsigned long long)nonDeletedCountIncludingServerSearch:(bool)arg1 andThreadSearch:(bool)arg2 ;
-(bool)hasMoreFetchableMessages;
-(unsigned long long)fetchWindow;
-(id)copyOfAllMessagesWithOptions:(unsigned)arg1 ;
-(id)copyOfAllMessages;
-(id)copyMessagesMatchingText:(id)arg1 options:(unsigned)arg2 ;
-(id)_defaultRouterDestination;
-(unsigned long long)appendMessages:(id)arg1 unsuccessfulOnes:(id)arg2 ;
-(void)deleteMessages:(id)arg1 moveToTrash:(bool)arg2 ;
-(id)setFlagsFromDictionary:(id)arg1 forMessages:(id)arg2 ;
-(void)setFlag:(id)arg1 state:(bool)arg2 forMessages:(id)arg3 ;
-(unsigned long long)appendMessages:(id)arg1 unsuccessfulOnes:(id)arg2 newMessageIDs:(id)arg3 newMessages:(id)arg4 flagsToSet:(id)arg5 ;
-(unsigned long long)appendMessages:(id)arg1 unsuccessfulOnes:(id)arg2 newMessageIDs:(id)arg3 newMessages:(id)arg4 ;
-(unsigned long long)appendMessages:(id)arg1 unsuccessfulOnes:(id)arg2 newMessageIDs:(id)arg3 ;
-(id)messageForMessageID:(id)arg1 options:(unsigned)arg2 ;
-(id)lastViewedMessageDate;
-(id)_fetchHeaderDataForMessage:(id)arg1 downloadIfNecessary:(bool)arg2 ;
-(bool)_updateFlagForMessage:(id)arg1 key:(id)arg2 value:(bool)arg3 ;
-(void)setFlagsForAllMessagesFromDictionary:(id)arg1 ;
-(void)setNumberOfAttachments:(unsigned)arg1 isSigned:(bool)arg2 isEncrypted:(bool)arg3 forMessage:(id)arg4 ;
-(long long)fetchNumMessages:(unsigned long long)arg1 preservingUID:(id)arg2 options:(unsigned long long)arg3 ;
-(long long)fetchMobileSynchronously:(unsigned long long)arg1 preservingUID:(id)arg2 options:(unsigned long long)arg3 ;
-(void)messageFlagsDidChange:(id)arg1 flags:(id)arg2 ;
-(void)_flushAllMessageData;
-(bool)supportsArchiving;
-(id)_setOrGetBody:(id)arg1 forMessage:(id)arg2 updateFlags:(bool)arg3 ;
-(void)updateBodyFlagsForMessage:(id)arg1 body:(id)arg2 ;
-(void)_setFlagsForMessages:(id)arg1 ;
-(bool)_shouldChangeComponentMessageFlagsForMessage:(id)arg1 ;
-(bool)_shouldChangeComponentMessageFlags;
-(id)initWithMailboxUid:(id)arg1 readOnly:(bool)arg2 ;
-(void)openAsynchronously;
-(void)didOpen;
-(void)cancelOpen;
-(void)writeUpdatedMessageDataToDisk;
-(bool)isOpened;
-(id)storePathRelativeToAccount;
-(bool)isDrafts;
-(void)allMessageFlagsDidChange:(id)arg1 ;
-(void)structureDidChange;
-(void)messagesWereAdded:(id)arg1 ;
-(void)messagesWereCompacted:(id)arg1 ;
-(void)messagesWillBeCompacted:(id)arg1 ;
-(void)deletedCount:(unsigned long long*)arg1 andSize:(unsigned long long*)arg2 ;
-(unsigned long long)serverUnreadCount;
-(bool)shouldGrowFetchWindow;
-(void)invalidateFetchWindow;
-(unsigned long long)growFetchWindow;
-(void)purgeMessagesBeyondLimit:(unsigned long long)arg1 keepingMessage:(id)arg2 ;
-(unsigned long long)unreadCountMatchingCriterion:(id)arg1 ;
-(bool)hasMessageForAccount:(id)arg1 ;
-(unsigned long long)indexOfMessage:(id)arg1 ;
-(id)copyOfMessagesInRange:(NSRange)arg1 ;
-(id)mutableCopyOfAllMessages;
-(id)copyOfAllMessagesForBodyLoadingFromRowID:(unsigned)arg1 limit:(unsigned)arg2 ;
-(id)copyMessagesMatchingText:(id)arg1 ;
-(id)copyMessagesMatchingCriterion:(id)arg1 options:(unsigned)arg2 ;
-(id)copyMessagesWithRemoteIDs:(id)arg1 options:(unsigned)arg2 ;
-(bool)canFetchSearchResults;
-(long long)fetchMessagesMatchingCriterion:(id)arg1 limit:(unsigned)arg2 ;
-(id)remoteIDsMatchingCriterion:(id)arg1 limit:(unsigned)arg2 error:(id*)arg3 ;
-(id)remoteIDsFromUniqueRemoteIDs:(id)arg1 ;
-(bool)canFetchMessageIDs;
-(long long)fetchMessagesWithMessageIDs:(id)arg1 andSetFlags:(unsigned long long)arg2 ;
-(long long)fetchMessagesWithRemoteIDs:(id)arg1 andSetFlags:(unsigned long long)arg2 ;
-(id)finishRoutingMessages:(id)arg1 routed:(id)arg2 ;
-(bool)canCompact;
-(void)doCompact;
-(void)deleteMessagesOlderThanNumberOfDays:(int)arg1 compact:(bool)arg2 ;
-(void)undeleteMessages:(id)arg1 ;
-(void)messagesWereDeleted:(id)arg1 ;
-(bool)allowsAppend;
-(id)messageForRemoteID:(id)arg1 ;
-(id)lastViewedMessageWithOptions:(unsigned)arg1 ;
-(id)uniqueRemoteIDsForMessages:(id)arg1 ;
-(id)headerDataForMessage:(id)arg1 downloadIfNecessary:(bool)arg2 ;
-(bool)hasCachedDataForMimePart:(id)arg1 ;
-(id)setFlagsLocallyFromDictionary:(id)arg1 forMessages:(id)arg2 ;
-(id)willSetFlagsFromDictionary:(id)arg1 forMessages:(id)arg2 ;
-(void)setFlagsCancelled:(id)arg1 forMessages:(id)arg2 ;
-(void)setFlagForAllMessages:(id)arg1 state:(bool)arg2 ;
-(long long)fetchMobileSynchronously:(unsigned long long)arg1 ;
-(bool)setPreferredEncoding:(unsigned)arg1 forMessage:(id)arg2 ;
-(id)storeData:(id)arg1 forMimePart:(id)arg2 isComplete:(bool)arg3 ;
-(bool)shouldDownloadBodyDataForMessage:(id)arg1 ;
-(id)loadMeetingExternalIDForMessage:(id)arg1 ;
-(id)loadMeetingDataForMessage:(id)arg1 ;
-(id)loadMeetingMetadataForMessage:(id)arg1 ;
-(bool)shouldSetSummaryForMessage:(id)arg1 ;
-(bool)canDeleteMessage:(id)arg1 ;
-(bool)shouldDeleteInPlace;
-(bool)shouldArchive;
-(int)archiveDestination;
-(void)_rebuildTableOfContentsSynchronously;
-(void)updateMessages:(id)arg1 updateNumberOfAttachments:(bool)arg2 ;
-(void)setLibrary:(id)arg1 ;
-(bool)isReadOnly;
@end

