/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:01:30 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/Message.framework/Message
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Message/Message-Structs.h>
#import <Message/MFMessageLibrary.h>
#import <Message/MFLibraryContentIndexDataSource.h>
#import <Message/MFSQLiteConnectionPoolDelegate.h>
#import <Message/MFContentProtectionObserver.h>

@protocol OS_dispatch_queue, MFMailboxPathProvider, MFMailMessageLibraryDelegate;
@class MFSQLiteConnectionPool, MFLibraryContentIndex, MFWeakObjectCache, NSObject, MFMailMessageLibraryMigrator, NSString, MFDbJournal, NSMutableSet, MFAttachmentLibraryDataProvider;

@interface MFMailMessageLibrary : MFMessageLibrary <MFLibraryContentIndexDataSource, MFSQLiteConnectionPoolDelegate, MFContentProtectionObserver> {

	MFSQLiteConnectionPool* _connectionPool;
	MFLibraryContentIndex* _contentIndex;
	MFWeakObjectCache* _libraryMessageCache;
	CFDictionaryRef _mailboxCache;
	NSObject<OS_dispatch_queue>* _metadataQueue;
	<MFMailboxPathProvider>* _mailboxPathProvider;
	MFMailMessageLibraryMigrator* _migrator;
	NSString* _threadLocalHandleKey;
	NSString* _activeAccountClause;
	int _protectedDataAvailability;
	MFDbJournal* _protectedJournal;
	NSObject<OS_dispatch_queue>* _keyBagQueue;
	NSMutableSet* _messagesToThreadAtUnlock;
	<MFMailMessageLibraryDelegate>* _delegate;
	MFAttachmentLibraryDataProvider* _attachmentDataProvider;

}

@property (assign,nonatomic) <MFMailMessageLibraryDelegate> * delegate; 
@property (nonatomic,readonly) int protectedDataAvailability; 
+(id)defaultInstance;
+(id)defaultPath;
+(void)_removeLibrary:(bool)arg1 atPath:(id)arg2 ;
+(void)removeLibraryAtPath:(id)arg1 ;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)delegate;
-(id)initWithPath:(id)arg1 ;
-(id)dataProvider;
-(id)setFlagsFromDictionary:(id)arg1 forMessages:(id)arg2 ;
-(void)setNumberOfAttachments:(unsigned)arg1 isSigned:(bool)arg2 isEncrypted:(bool)arg3 forMessage:(id)arg4 ;
-(bool)shouldCancel;
-(id)loadMeetingExternalIDForMessage:(id)arg1 ;
-(id)loadMeetingDataForMessage:(id)arg1 ;
-(id)loadMeetingMetadataForMessage:(id)arg1 ;
-(id)_newConnection;
-(void)deleteMailboxes:(id)arg1 ;
-(void)deleteAccount:(id)arg1 ;
-(bool)renameMailboxes:(id)arg1 to:(id)arg2 ;
-(long long)libraryIDForAccount:(id)arg1 ;
-(long long)createLibraryIDForAccount:(id)arg1 ;
-(unsigned long long)serverUnreadOnlyOnServerCountForMailbox:(id)arg1 ;
-(unsigned)unreadCountForMailbox:(id)arg1 ;
-(unsigned)unreadCountForMailbox:(id)arg1 matchingCriterion:(id)arg2 ;
-(unsigned)nonDeletedCountForMailbox:(id)arg1 ;
-(unsigned)mailboxIDForURLString:(id)arg1 ;
-(id)urlForMailboxID:(unsigned)arg1 ;
-(id)mailboxUidForMessage:(id)arg1 ;
-(void)setMessage:(id)arg1 isPartial:(bool)arg2 ;
-(bool)isMessageContentsLocallyAvailable:(id)arg1 ;
-(void)setFlags:(unsigned long long)arg1 forMessage:(id)arg2 ;
-(void)setSummary:(id)arg1 forMessage:(id)arg2 ;
-(id)dataPathForMessage:(id)arg1 ;
-(id)dataPathForMessage:(id)arg1 part:(id)arg2 ;
-(id)accountForMessage:(id)arg1 ;
-(void)setData:(id)arg1 forMessage:(id)arg2 isPartial:(bool)arg3 ;
-(id)dataConsumerForMessage:(id)arg1 part:(id)arg2 ;
-(void)updateMessage:(id)arg1 withMetadata:(/*^block*/ id)arg2 ;
-(id)metadataForMessage:(id)arg1 key:(id)arg2 ;
-(unsigned)totalCountForMailbox:(id)arg1 ;
-(unsigned)nonDeletedCountForMailbox:(id)arg1 includeServerSearchResults:(bool)arg2 includeThreadSearchResults:(bool)arg3 ;
-(id)messageWithLibraryID:(unsigned)arg1 options:(unsigned)arg2 inMailbox:(id)arg3 ;
-(id)messagesWithSummariesForMailbox:(id)arg1 range:(NSRange)arg2 ;
-(id)messagesMatchingCriterion:(id)arg1 options:(unsigned)arg2 range:(NSRange)arg3 ;
-(id)copyMessageInfosForMailbox:(id)arg1 ;
-(id)copyMessageInfosMatchingCriterion:(id)arg1 ;
-(id)copyMessageInfosForConversationsContainingMessagesMatchingCriterion:(id)arg1 forMailbox:(id)arg2 ;
-(id)messagesWithoutSummariesForMailbox:(id)arg1 fromRowID:(unsigned)arg2 limit:(unsigned)arg3 ;
-(id)messagesMatchingCriterion:(id)arg1 options:(unsigned)arg2 ;
-(id)copyMessagesWithRemoteIDs:(id)arg1 options:(unsigned)arg2 inRemoteMailbox:(id)arg3 ;
-(CFDictionaryRef)copySendersByLibraryIDForConversation:(long long)arg1 mailbox:(id)arg2 limit:(long long)arg3 ;
-(long long)oldestKnownConversationInMailbox:(id)arg1 ;
-(id)serverSearchResultMessagesForMailbox:(id)arg1 ;
-(id)dateOfOldestNonSearchResultMessageInMailbox:(id)arg1 ;
-(id)filterContiguousMessages:(id)arg1 forCriterion:(id)arg2 options:(unsigned)arg3 ;
-(id)messageWithMessageID:(id)arg1 options:(unsigned)arg2 inMailbox:(id)arg3 ;
-(id)headerDataForMessage:(id)arg1 ;
-(id)dataForMimePart:(id)arg1 isComplete:(bool*)arg2 ;
-(id)dataConsumerForMessage:(id)arg1 part:(id)arg2 incomplete:(bool)arg3 ;
-(id)fullBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id*)arg2 ;
-(id)bodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id*)arg2 isComplete:(bool*)arg3 ;
-(id)messagesForMailbox:(id)arg1 olderThanNumberOfDays:(int)arg2 ;
-(void)setFlagsFromDictionary:(id)arg1 forMessagesInMailboxURLString:(id)arg2 ;
-(id)addMessages:(id)arg1 withMailbox:(id)arg2 fetchBodies:(bool)arg3 newMessagesByOldMessage:(id)arg4 remoteIDs:(id)arg5 setFlags:(unsigned long long)arg6 clearFlags:(unsigned long long)arg7 messageFlagsForMessages:(id)arg8 copyFiles:(bool)arg9 addPOPUIDs:(bool)arg10 dataSectionsByMessage:(id)arg11 ;
-(void)compactMailbox:(id)arg1 ;
-(bool)hasCompleteDataForMimePart:(id)arg1 ;
-(sqlite3_stmtRef)preparedStatement:(sqlite3Ref)arg1 pattern:(id)arg2 ;
-(void)performReadTransaction:(/*^block*/ id)arg1 ;
-(void)performWriteTransaction:(/*^block*/ id)arg1 ;
-(void)compactMessages:(id)arg1 permanently:(bool)arg2 ;
-(void)setFlagsForMessages:(id)arg1 mask:(unsigned long long)arg2 ;
-(void)updateRecipientsForMessage:(id)arg1 fromHeaders:(id)arg2 ;
-(void)updateThreadingInfoForMessage:(id)arg1 fromHeaders:(id)arg2 ;
-(id)messagesNeedingSyncConfirmationForMailbox:(id)arg1 ;
-(id)messagesWithoutSummariesForMailbox:(id)arg1 ;
-(id)messagesWithSummariesForMailbox:(id)arg1 fromRowID:(unsigned)arg2 limit:(unsigned)arg3 ;
-(id)orderedBatchOfMessagesEndingAtRowId:(unsigned)arg1 limit:(unsigned)arg2 success:(bool*)arg3 ;
-(unsigned)deletedCountForMailbox:(id)arg1 ;
-(void)setServerUnreadOnlyOnServerCount:(unsigned long long)arg1 forMailbox:(id)arg2 ;
-(id)oldestMessageInMailbox:(id)arg1 ;
-(id)messageWithRemoteID:(id)arg1 inRemoteMailbox:(id)arg2 ;
-(unsigned)maximumRemoteIDForMailbox:(id)arg1 ;
-(unsigned)minimumRemoteIDForMailbox:(id)arg1 ;
-(id)sequenceIdentifierForMailbox:(id)arg1 ;
-(void)setSequenceIdentifier:(id)arg1 forMailbox:(id)arg2 ;
-(id)sequenceIdentifierForMessagesWithRemoteIDs:(id)arg1 inMailbox:(id)arg2 ;
-(void)setSequenceIdentifier:(id)arg1 forMessageWithLibraryID:(unsigned)arg2 ;
-(void)setSequenceIdentifier:(id)arg1 forMessagesWithRemoteIDs:(id)arg2 inMailbox:(id)arg3 ;
-(id)getDetailsForMessagesWithRemoteIDInRange:(NSRange)arg1 fromMailbox:(id)arg2 ;
-(id)getDetailsForAllMessagesFromMailbox:(id)arg1 ;
-(id)getDetailsForMessages:(unsigned long long)arg1 absoluteBottom:(unsigned long long)arg2 topOfDesiredRange:(unsigned long long)arg3 range:(NSRange*)arg4 fromMailbox:(id)arg5 ;
-(id)messagesWithMessageIDHeader:(id)arg1 ;
-(void)removeAllMessagesFromMailbox:(id)arg1 removeMailbox:(bool)arg2 andNotify:(bool)arg3 ;
-(id)messageWithMessageID:(id)arg1 inMailbox:(id)arg2 ;
-(id)dataConsumerForMessage:(id)arg1 isPartial:(bool)arg2 ;
-(id)dataConsumerForMessage:(id)arg1 ;
-(id)metadataForMessage:(id)arg1 ;
-(id)bodyDataForMessage:(id)arg1 ;
-(void)sendMessagesMatchingCriterion:(id)arg1 to:(id)arg2 options:(unsigned)arg3 range:(NSRange)arg4 ;
-(void)sendMessagesMatchingCriterion:(id)arg1 to:(id)arg2 options:(unsigned)arg3 ;
-(id)messagesMatchingCriterion:(id)arg1 options:(unsigned)arg2 success:(bool*)arg3 ;
-(id)messagesMatchingCriterion:(id)arg1 options:(unsigned)arg2 range:(NSRange)arg3 success:(bool*)arg4 ;
-(void)closeDatabaseConnections;
-(void)deletePOPUID:(id)arg1 inMailbox:(id)arg2 ;
-(id)UIDsToDeleteInMailbox:(id)arg1 ;
-(id)deletedUIDsInMailbox:(id)arg1 ;
-(id)allUIDsInMailbox:(id)arg1 ;
-(id)hiddenPOPUIDsInMailbox:(id)arg1 ;
-(void)appendOfflineCacheOperation:(id)arg1 forAccount:(long long)arg2 lastTemporaryID:(unsigned)arg3 ;
-(void)markOfflineCacheOperationAsComplete:(id)arg1 ;
-(id)offlineCacheOperationsForAccount:(long long)arg1 lastTemporaryID:(unsigned*)arg2 ;
-(void)appendOfflineCacheReplayData:(id)arg1 forAccountID:(long long)arg2 ;
-(void)consumeOfflineCacheReplayDataForAccount:(long long)arg1 usingBlock:(/*^block*/ id)arg2 ;
-(void)deleteOfflineCacheDataForAccount:(long long)arg1 ;
-(void)updateFlagsForMessagesInPlace:(id)arg1 success:(bool*)arg2 ;
-(id)remoteStoreForMessage:(id)arg1 ;
-(id)storedIntegerPropertyWithName:(id)arg1 ;
-(void)setStoredIntegerPropertyWithName:(id)arg1 value:(id)arg2 ;
-(void)_removeCachedLibraryMessageWithLibraryID:(unsigned)arg1 ;
-(void)_setProtectedDataAvailabilityState:(int)arg1 ;
-(void)_reconcileAfterKeybagUnlock;
-(void)invalidateAndWait;
-(sqlite3Ref)getWriterDB;
-(void)unlockDB:(sqlite3Ref)arg1 ;
-(int)beginTransaction:(sqlite3Ref)arg1 withType:(int)arg2 ;
-(bool)isProtectedDataAvailable:(sqlite3Ref)arg1 ;
-(void)_addMessageToThreadAtUnlock:(unsigned)arg1 ;
-(id)addThreadingInfoBySubjectForMessageID:(unsigned)arg1 nonPrefixedSubject:(id)arg2 messageIDsBySubject:(id)arg3 usingDatabase:(sqlite3Ref)arg4 toReferences:(id)arg5 withinMailbox:(int)arg6 ;
-(id)conversationIDsOfMessagesInSameThreadAsMessageWithLibraryID:(unsigned)arg1 messageIDHash:(long long)arg2 ;
-(void)notifyConversation:(long long)arg1 hasMergedIntoConversation:(long long)arg2 ;
-(int)handleSqliteError:(sqlite3Ref)arg1 format:(id)arg2 ;
-(id)referencesFromHeaders:(id)arg1 ;
-(long long)addReferencesForMessage:(id)arg1 libraryID:(unsigned)arg2 messageIDHash:(long long)arg3 withSubject:(id)arg4 withReferences:(id)arg5 usingDatabase:(sqlite3Ref)arg6 otherSubjectIDMappings:(id)arg7 usingMailbox:(int)arg8 notify:(bool)arg9 ;
-(bool)_writeEmlxFile:(id)arg1 withBodyData:(id)arg2 protectionClass:(int)arg3 ;
-(id)_libraryMessageWithLibraryID:(unsigned)arg1 wasCached:(bool*)arg2 ;
-(int)rollbackTransaction:(sqlite3Ref)arg1 ;
-(int)commitTransaction:(sqlite3Ref)arg1 ;
-(void)iterateStatement:(sqlite3_stmtRef)arg1 db:(sqlite3Ref)arg2 withProgressMonitor:(id)arg3 andRowHandler:(/*function pointer*/ void*)arg4 context:(void*)arg5 ;
-(void)sendMessagesForStatement:(sqlite3_stmtRef)arg1 db:(sqlite3Ref)arg2 to:(id)arg3 options:(unsigned)arg4 timestamp:(unsigned long long)arg5 ;
-(void)sendMessagesMatchingCriterion:(id)arg1 to:(id)arg2 options:(unsigned)arg3 baseTable:(unsigned)arg4 ;
-(sqlite3Ref)getReaderDB;
-(id)queryForCriterion:(id)arg1 db:(sqlite3Ref)arg2 options:(unsigned)arg3 ;
-(id)queryForCriterion:(id)arg1 db:(sqlite3Ref)arg2 options:(unsigned)arg3 baseTable:(unsigned)arg4 ;
-(unsigned)integerForQuery:(id)arg1 withTextArgument:(id)arg2 ;
-(unsigned)flaggedCountForMailbox:(id)arg1 ;
-(unsigned)attachmentCountForMailbox:(id)arg1 ;
-(unsigned)includesMeCountForMailbox:(id)arg1 ;
-(unsigned)countOfRelatedMessagesMatchingCriterion:(id)arg1 forConversationsContainingMessagesMatchingCriterion:(id)arg2 forMailbox:(id)arg3 ;
-(id)_messageForStatement:(sqlite3_stmtRef)arg1 options:(unsigned)arg2 timestamp:(unsigned long long)arg3 isProtectedDataAvailable:(bool)arg4 ;
-(bool)_canSelectMessagesWithOptions:(unsigned)arg1 db:(sqlite3Ref)arg2 ;
-(CFDictionaryRef)_copyReferenceHashesWithoutMessagesForMessageWithConversation:(id)arg1 ;
-(id)_getReferencesForHashesWithOwners:(CFDictionaryRef)arg1 ;
-(id)stringForQuery:(id)arg1 monitor:(id)arg2 ;
-(id)pathForMailboxURL:(id)arg1 ;
-(id)mailboxURLForMessage:(id)arg1 ;
-(void)_notifyDidCompact:(bool)arg1 messages:(id)arg2 mailboxes:(id)arg3 ;
-(bool)cleanupProtectedTables:(sqlite3Ref)arg1 checkForInconsistencies:(bool)arg2 ;
-(id)dataPathForMessage:(id)arg1 type:(int)arg2 ;
-(bool)_setMessageData:(id)arg1 libraryID:(unsigned)arg2 part:(id)arg3 partial:(bool)arg4 complete:(bool)arg5 ;
-(void)_setMessageDataString:(id)arg1 forKey:(id)arg2 forMessage:(id)arg3 ;
-(void)_assignTransactionIdentifier:(unsigned)arg1 forLibraryIDs:(id)arg2 ;
-(id)loadData:(id)arg1 forMessage:(id)arg2 usingBlock:(/*^block*/ id)arg3 ;
-(id)bodyDataAtPath:(id)arg1 headerData:(id*)arg2 ;
-(id)headerDataAtPath:(id)arg1 ;
-(id)equalToMailboxIDsFromCriterion:(id)arg1 ;
-(id)_activeAccountsClause;
-(id)queryForCriterion:(id)arg1 db:(sqlite3Ref)arg2 options:(unsigned)arg3 baseTable:(unsigned)arg4 isSubquery:(bool)arg5 range:(NSRange)arg6 ;
-(id)queryForCriterion:(id)arg1 db:(sqlite3Ref)arg2 options:(unsigned)arg3 baseTable:(unsigned)arg4 isSubquery:(bool)arg5 ;
-(void)sendMessagesMatchingQuery:(const char*)arg1 db:(sqlite3Ref)arg2 to:(id)arg3 options:(unsigned)arg4 ;
-(void)sendMessagesMatchingCriterion:(id)arg1 to:(id)arg2 options:(unsigned)arg3 baseTable:(unsigned)arg4 range:(NSRange)arg5 success:(bool*)arg6 ;
-(id)_indexSetOfMessagesDeleted;
-(void)_handleCorruptDatabase;
-(id)_activeConnectionWithDB:(sqlite3Ref)arg1 ;
-(void)_handleSQLiteErrorCode:(int)arg1 db:(sqlite3Ref)arg2 ;
-(void)_reconcileJournal:(sqlite3Ref)arg1 ;
-(bool)isKeyBagUnlocked;
-(void)_performTransaction:(/*^block*/ id)arg1 forWriting:(bool)arg2 ;
-(id)_connectionForWriting:(bool)arg1 ;
-(id)_activeConnectionWrapper;
-(id)_setActiveConnection:(id)arg1 forWriting:(bool)arg2 ;
-(id)_activeConnection;
-(void)_handleFullDatabase;
-(void)_handleProtectedDataIOError;
-(void)_handleIOError;
-(void)_handleBusyError;
-(void)renameOrRemoveDatabase;
-(id)itemsRequiringIndexingForContentIndex:(id)arg1 limit:(unsigned long long)arg2 ;
-(void)contentIndex:(id)arg1 assignTransactionIdentifier:(unsigned)arg2 forDocumentIdentifiers:(id)arg3 ;
-(void)contentIndex:(id)arg1 invalidateItemsGreaterThanTransactionId:(unsigned)arg2 ;
-(id)newConnectionForConnectionPool:(id)arg1 ;
-(void)contentProtectionStateChanged:(int)arg1 previousState:(int)arg2 ;
-(long long)mailboxLocationOfMessageID:(unsigned)arg1 usingDatabase:(sqlite3Ref)arg2 ;
-(long long)countOfMessagesMissingFromThreadContainingMessage:(id)arg1 ;
-(long long)loadMoreMessagesForThreadContainingMessage:(id)arg1 hasNoMoreMessages:(bool*)arg2 ;
-(id)stringForQuery:(id)arg1 ;
-(void)vacuumDataForObsoleteAccountURLString:(id)arg1 ;
-(id)attachmentsDirectoryForLibraryID:(unsigned)arg1 mailboxID:(unsigned)arg2 ;
-(id)queryForCriterion:(id)arg1 db:(sqlite3Ref)arg2 options:(unsigned)arg3 range:(NSRange)arg4 ;
-(void)sendMessagesMatchingCriterion:(id)arg1 to:(id)arg2 options:(unsigned)arg3 baseTable:(unsigned)arg4 range:(NSRange)arg5 ;
-(void)iterateMessagesMatchingCriterion:(id)arg1 withResultHandler:(id)arg2 options:(unsigned)arg3 withMonitor:(id)arg4 ;
-(void)rebuildActiveAccountsClauseWithAccounts:(id)arg1 ;
-(int)protectedDataAvailability;
-(int)attachProtectedDatabase:(sqlite3Ref)arg1 ;
-(bool)migrate;
-(void)setMailboxPathProvider:(id)arg1 ;
-(id)allMailboxURLStrings;
-(id)_libraryMessageCache;
@end

