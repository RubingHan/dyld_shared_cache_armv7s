/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:01:32 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/Message.framework/Message
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <QuickLook/QLPreviewItem.h>

@protocol MFDataConsumer;
@class NSURL, NSString, NSMutableDictionary, MFAttachmentManager, MFMimePart;

@interface MFAttachment : NSObject <QLPreviewItem> {

	NSMutableDictionary* _metadata;
	MFAttachmentManager* _attachmentManager;
	bool _isDataAvailableLocally;
	bool _isUserFacing;
	NSURL* _url;
	MFMimePart* _part;
	NSString* _path;
	NSString* _mimeType;
	NSString* _disposition;
	unsigned long long _decodedFileSize;
	unsigned long long _encodedFileSize;
	unsigned long long _progressInterval;
	double _progressTimeInterval;
	/*^block*/ id _fetchCompletionBlock;
	/*^block*/ id _fetchProgressBlock;
	<MFDataConsumer>* _customConsumer;
	unsigned long long _lastProgressBytes;
	double _lastProgressTime;

}

@property (nonatomic,retain) NSString * eventID; 
@property (nonatomic,retain) NSString * meetingStorePersistentID; 
@property (nonatomic,retain) NSString * icsRepresentation; 
@property (nonatomic,copy) NSURL * url;                                            //@synthesize url=_url - In the implementation block
@property (nonatomic,retain) MFMimePart * part;                                    //@synthesize part=_part - In the implementation block
@property (readonly) NSString * contentID; 
@property (nonatomic,retain) NSString * fileName; 
@property (nonatomic,copy) NSString * path;                                        //@synthesize path=_path - In the implementation block
@property (nonatomic,copy) NSString * mimeType;                                    //@synthesize mimeType=_mimeType - In the implementation block
@property (nonatomic,copy) NSString * disposition;                                 //@synthesize disposition=_disposition - In the implementation block
@property (assign,nonatomic) unsigned long long decodedFileSize;                   //@synthesize decodedFileSize=_decodedFileSize - In the implementation block
@property (assign,nonatomic) unsigned long long encodedFileSize;                   //@synthesize encodedFileSize=_encodedFileSize - In the implementation block
@property (readonly) bool isDataAvailableLocally; 
@property (readonly) bool shouldAutoDownload; 
@property (assign,nonatomic) unsigned long long progressInterval;                  //@synthesize progressInterval=_progressInterval - In the implementation block
@property (assign,nonatomic) double progressTimeInterval;                          //@synthesize progressTimeInterval=_progressTimeInterval - In the implementation block
@property (nonatomic,copy) id fetchCompletionBlock;                                //@synthesize fetchCompletionBlock=_fetchCompletionBlock - In the implementation block
@property (copy) id fetchProgressBlock;                                            //@synthesize fetchProgressBlock=_fetchProgressBlock - In the implementation block
@property (nonatomic,retain) <MFDataConsumer> * customConsumer;                    //@synthesize customConsumer=_customConsumer - In the implementation block
@property (assign,nonatomic) bool isUserFacing;                                    //@synthesize isUserFacing=_isUserFacing - In the implementation block
@property (assign,nonatomic) MFAttachmentManager * attachmentManager;              //@synthesize attachmentManager=_attachmentManager - In the implementation block
@property (readonly) bool isContainedInRFC822; 
@property (assign,nonatomic) unsigned long long lastProgressBytes;                 //@synthesize lastProgressBytes=_lastProgressBytes - In the implementation block
@property (assign,nonatomic) double lastProgressTime;                              //@synthesize lastProgressTime=_lastProgressTime - In the implementation block
@property (readonly) NSURL * previewItemURL; 
@property (readonly) NSString * previewItemTitle; 
-(bool)isPass;
-(id)pass;
-(void)setEventID:(id)arg1 ;
-(id)eventID;
-(bool)isDisplayableInline;
-(id)_contentTypeByStrippingZipIfNeeded:(bool)arg1 ;
-(bool)isMedia;
-(bool)isContentOpenable;
-(bool)isDisplayableImage;
-(bool)isDisplayableByWebKit;
-(bool)isDisplayableInsidePlugin;
-(bool)isRFC822;
-(bool)isCalendarFile;
-(void)setIcsRepresentation:(id)arg1 ;
-(void)setMeetingStorePersistentID:(id)arg1 ;
-(id)filenameStrippingZipIfNeededUseApplications:(bool)arg1 ;
-(bool)isContentTypeDisplayableByMobileMail;
-(bool)isPDFFile;
-(bool)isRestrictedMIMEType;
-(bool)isDisplayableInlineWithData:(id)arg1 ;
-(id)icsRepresentation;
-(bool)isDisplayableInsidePluginWithData:(id)arg1 ;
-(void)writeToDiskWithData:(id)arg1 ;
-(bool)hasCalendarMetadata;
-(bool)isImageFile;
-(id)meetingStorePersistentID;
-(id)fileAttributes;
-(id)contentType;
-(void)dealloc;
-(id)description;
-(id)path;
-(void)cancel;
-(void)setPath:(id)arg1 ;
-(id)mimeType;
-(id)url;
-(void)setUrl:(id)arg1 ;
-(id)previewItemURL;
-(id)previewItemTitle;
-(id)disposition;
-(void)setContentID:(id)arg1 ;
-(id)contentID;
-(void)setDisposition:(id)arg1 ;
-(id)textEncodingNameForData:(id)arg1 mimeType:(id)arg2 ;
-(void)setFetchCompletionBlock:(/*^block*/ id)arg1 ;
-(void)fetchData;
-(id)attachmentManager;
-(void)setAttachmentManager:(id)arg1 ;
-(id)metadataValueForKey:(id)arg1 ;
-(bool)isDataAvailableLocally;
-(void)setIsUserFacing:(bool)arg1 ;
-(bool)isContainedInRFC822;
-(/*^block*/ id)fetchCompletionBlock;
-(void)fetchDataSynchronously;
-(unsigned long long)encodedFileSize;
-(id)textEncodingGuessWithData:(id)arg1 ;
-(id)initWithURL:(id)arg1 attachmentManager:(id)arg2 ;
-(id)decodeFilterWithDataConsumer:(id)arg1 ;
-(id)fetchDataSynchronously:(id*)arg1 ;
-(bool)shouldAutoDownload;
-(id)storageLocationWithMessage:(id)arg1 ;
-(void)setMimeType:(id)arg1 ;
-(unsigned long long)decodedFileSize;
-(void)setDecodedFileSize:(unsigned long long)arg1 ;
-(void)setEncodedFileSize:(unsigned long long)arg1 ;
-(unsigned long long)progressInterval;
-(void)setProgressInterval:(unsigned long long)arg1 ;
-(double)progressTimeInterval;
-(void)setProgressTimeInterval:(double)arg1 ;
-(/*^block*/ id)fetchProgressBlock;
-(void)setFetchProgressBlock:(/*^block*/ id)arg1 ;
-(id)customConsumer;
-(void)setCustomConsumer:(id)arg1 ;
-(bool)isUserFacing;
-(unsigned long long)lastProgressBytes;
-(void)setLastProgressBytes:(unsigned long long)arg1 ;
-(double)lastProgressTime;
-(void)setLastProgressTime:(double)arg1 ;
-(id)fileName;
-(void)setPart:(id)arg1 ;
-(id)part;
-(void)setMetadataValue:(id)arg1 forKey:(id)arg2 ;
-(void)setFileName:(id)arg1 ;
@end

