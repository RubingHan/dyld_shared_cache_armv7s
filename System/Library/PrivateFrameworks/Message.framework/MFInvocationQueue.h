/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:01:31 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/Message.framework/Message
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <Message/Message-Structs.h>
@class NSConditionLock, NSMutableArray;

@interface MFInvocationQueue : NSObject {

	NSConditionLock* _lock;
	NSMutableArray* _items;
	unsigned long long _numThreads;
	unsigned long long _maxThreads;
	int _threadPriorityTrigger;
	double _threadRecycleTimeout;
	CFSetRef _lowPriorityThreads;
	bool _isForeground;

}

@property (assign,nonatomic) unsigned long long maxThreadCount; 
@property (assign,nonatomic) int threadPriorityTrigger;                         //@synthesize threadPriorityTrigger=_threadPriorityTrigger - In the implementation block
@property (assign,nonatomic) double threadRecycleTimeout;                       //@synthesize threadRecycleTimeout=_threadRecycleTimeout - In the implementation block
@property (nonatomic,readonly) unsigned long long invocationCount; 
@property (nonatomic,readonly) unsigned long long threadCount;                  //@synthesize numThreads=_numThreads - In the implementation block
+(id)sharedInvocationQueue;
+(unsigned long long)totalInvocationCount;
+(void)flushAllInvocationQueues;
-(void)removeAllItems;
-(void)dealloc;
-(id)init;
-(void)applicationWillSuspend;
-(void)setMaxThreadCount:(unsigned long long)arg1 ;
-(void)addInvocation:(id)arg1 ;
-(id)copyDiagnosticInformation;
-(void)setThreadRecycleTimeout:(double)arg1 ;
-(void)didCancel:(id)arg1 ;
-(id)initWithMaxThreadCount:(unsigned long long)arg1 ;
-(void)_drainQueue:(id)arg1 ;
-(void)_processInvocation:(id)arg1 ;
-(void)_adjustThreadPrioritiesIsForeground:(bool)arg1 ;
-(unsigned long long)maxThreadCount;
-(unsigned long long)invocationCount;
-(void)applicationWillResume;
-(unsigned long long)threadCount;
-(int)threadPriorityTrigger;
-(void)setThreadPriorityTrigger:(int)arg1 ;
-(double)threadRecycleTimeout;
@end

