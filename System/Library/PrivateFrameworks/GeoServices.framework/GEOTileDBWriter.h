/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:01:12 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
#import <GeoServices/GeoServices-Structs.h>
@class NSString, NSMutableArray, NSMutableSet, NSLock, NSObject, GEOTileDBMRU;

@interface GEOTileDBWriter : NSObject {

	NSString* _path;
	sqlite3Ref _db;
	sqlite3_stmtRef _versionQuery;
	sqlite3_stmtRef _versionInsert;
	sqlite3_stmtRef _editionQuery;
	sqlite3_stmtRef _editionDelete;
	sqlite3_stmtRef _editionUpdate;
	sqlite3_stmtRef _tileInsert;
	sqlite3_stmtRef _tileDelete;
	sqlite3_stmtRef _tileSize;
	sqlite3_stmtRef _sizeQuery;
	long long _lastRowID;
	unsigned long long _databaseSize;
	unsigned long long _maxDatabaseSize;
	bool _closed;
	bool _defunct;
	NSMutableArray* _writeList;
	NSMutableSet* _uncommitedWriteSet;
	unsigned long long _pendingWriteBytes;
	NSLock* _writeListLock;
	NSObject<OS_dispatch_queue>* _writeQueue;
	void* _editionMap;
	long long _evictionRowsThreshold;
	GEOTileDBMRU* _tileDBMRU;
	SCD_Struct_GE46* _expirationRecords;
	unsigned long long _expirationRecordCount;
	bool _preloading;
	double _lastCheckedGeneralExpiration;

}

@property (nonatomic,readonly) NSString * path;                               //@synthesize path=_path - In the implementation block
@property (assign) bool closed; 
@property (nonatomic,retain) GEOTileDBMRU * tileDBMRU;                        //@synthesize tileDBMRU=_tileDBMRU - In the implementation block
@property (nonatomic,readonly) unsigned long long databaseSize;               //@synthesize databaseSize=_databaseSize - In the implementation block
@property (assign,nonatomic) unsigned long long maxDatabaseSize;              //@synthesize maxDatabaseSize=_maxDatabaseSize - In the implementation block
-(void)dealloc;
-(id)path;
-(void)_updateSize;
-(id)initWithPath:(id)arg1 ;
-(void)beginPreloadSessionOfSize:(unsigned long long)arg1 ;
-(void)endPreloadSession;
-(void)_closeDB;
-(bool)closed;
-(void)setClosed:(bool)arg1 ;
-(void)setExpirationRecords:(SCD_Struct_GE46*)arg1 count:(unsigned long long)arg2 ;
-(id)tileDBMRU;
-(void)setTileDBMRU:(id)arg1 ;
-(void)_deviceLocked;
-(void)_editionUpdate:(id)arg1 ;
-(void)_openDBForceRecreate:(bool)arg1 ;
-(void)_performWrites:(bool)arg1 ;
-(void)_openIfNecessary;
-(void)_updateEdition:(unsigned)arg1 forTileset:(unsigned)arg2 provider:(unsigned)arg3 ;
-(void)_createTables;
-(void)_prepareStatements;
-(void)_writeVersion;
-(bool)_readEditions;
-(void)_evict;
-(void)_assertDatabaseSize;
-(unsigned long long)_dbFileSize;
-(void)_shrinkToUnderSize:(unsigned long long)arg1 vacuum:(bool)arg2 ;
-(bool)_tileSetExpires:(unsigned)arg1 ;
-(void)_deleteKey:(GEOTileKey)arg1 ;
-(void)_dropWritesOnFloor:(id)arg1 ;
-(void)_writeEntry:(id)arg1 ;
-(void)flushPendingWrites;
-(void)_printDBStatus:(const char*)arg1 ;
-(void)shrinkToSize:(unsigned long long)arg1 finished:(/*^block*/ id)arg2 ;
-(void)addTile:(id)arg1 forKey:(GEOTileKey*)arg2 edition:(unsigned)arg3 tileSet:(unsigned)arg4 ;
-(id)pendingWriteForKey:(GEOTileKey*)arg1 ;
-(void)pendingWritesForKeys:(id)arg1 handler:(/*^block*/ id)arg2 ;
-(void)deleteTile:(const GEOTileKey*)arg1 ;
-(unsigned long long)databaseSize;
-(unsigned long long)maxDatabaseSize;
-(void)setMaxDatabaseSize:(unsigned long long)arg1 ;
-(void)_localeChanged:(id)arg1 ;
@end

