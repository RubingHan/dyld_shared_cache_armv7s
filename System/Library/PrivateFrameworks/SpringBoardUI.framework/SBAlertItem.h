/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:02:43 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/SpringBoardUI.framework/SpringBoardUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIKit/UIAlertViewDelegate.h>

@class UIAlertView, NSArray;

@interface SBAlertItem : NSObject <UIAlertViewDelegate> {

	UIAlertView* _alertSheet;
	bool _orderOverSBAlert;
	bool _preventLockOver;
	bool _didEverActivate;
	bool _ignoreIfAlreadyDisplaying;
	bool _didPlayPresentationSound;
	bool _allowInSetup;
	bool _pendInSetupIfNotAllowed;
	bool _pendWhileKeyBagLocked;
	NSArray* _allowedBundleIDs;
	bool _allowInCar;
	bool _allowMessageInCar;

}

@property (assign,nonatomic) bool ignoreIfAlreadyDisplaying;              //@synthesize ignoreIfAlreadyDisplaying=_ignoreIfAlreadyDisplaying - In the implementation block
@property (assign,nonatomic) bool allowInSetup;                           //@synthesize allowInSetup=_allowInSetup - In the implementation block
@property (assign,nonatomic) bool pendInSetupIfNotAllowed;                //@synthesize pendInSetupIfNotAllowed=_pendInSetupIfNotAllowed - In the implementation block
@property (assign,nonatomic) bool pendWhileKeyBagLocked;                  //@synthesize pendWhileKeyBagLocked=_pendWhileKeyBagLocked - In the implementation block
@property (nonatomic,retain) NSArray * allowedBundleIDs;                  //@synthesize allowedBundleIDs=_allowedBundleIDs - In the implementation block
@property (assign,nonatomic) bool allowInCar;                             //@synthesize allowInCar=_allowInCar - In the implementation block
@property (assign,nonatomic) bool allowMessageInCar;                      //@synthesize allowMessageInCar=_allowMessageInCar - In the implementation block
+(id)_alertItemsController;
+(void)activateAlertItem:(id)arg1 ;
-(void)setAllowInSetup:(bool)arg1 ;
-(bool)shouldShowInLockScreen;
-(bool)shouldShowInEmergencyCall;
-(bool)allowMenuButtonDismissal;
-(bool)unlocksScreen;
-(bool)forcesModalAlertAppearance;
-(bool)allowInSetup;
-(bool)ignoreIfAlreadyDisplaying;
-(void)dealloc;
-(id)init;
-(void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2 ;
-(void)dismiss;
-(id)sound;
-(Class)alertSheetClass;
-(void)setPendInSetupIfNotAllowed:(bool)arg1 ;
-(void)setAllowMessageInCar:(bool)arg1 ;
-(bool)didPlayPresentationSound;
-(void)_playPresentationSound;
-(bool)hasActiveKeyboardOnScreen;
-(void)cleanPreviousConfiguration;
-(bool)allowAutoUnlock;
-(bool)undimsScreen;
-(int)unlockSource;
-(bool)togglesMediaControls;
-(bool)dismissOnModalDisplayActivation;
-(bool)isCriticalAlert;
-(void)playPresentationSound;
-(double)autoDismissInterval;
-(void)setOrderOverSBAlert:(bool)arg1 ;
-(bool)preventLockOver;
-(void)setPreventLockOver:(bool)arg1 ;
-(bool)_didEverActivate;
-(void)willActivate;
-(void)didActivate;
-(void)willRelockForButtonPress:(bool)arg1 ;
-(void)screenWillUndim;
-(void)didFailToActivate;
-(void)willDeactivateForReason:(int)arg1 ;
-(void)didDeactivateForReason:(int)arg1 ;
-(void)noteVolumeOrLockPressed;
-(int)alertItemNotificationType;
-(id)alertItemNotificationDate;
-(id)alertItemNotificationSender;
-(bool)behavesSuperModally;
-(bool)reappearsAfterLock;
-(bool)reappearsAfterUnlock;
-(bool)preventInterruption;
-(int)alertPriority;
-(bool)displayActionButtonOnLockScreen;
-(id)prepareNewAlertSheetWithLockedState:(bool)arg1 requirePasscodeForActions:(bool)arg2 ;
-(void)setIgnoreIfAlreadyDisplaying:(bool)arg1 ;
-(bool)pendInSetupIfNotAllowed;
-(bool)pendWhileKeyBagLocked;
-(void)setPendWhileKeyBagLocked:(bool)arg1 ;
-(id)allowedBundleIDs;
-(void)setAllowedBundleIDs:(id)arg1 ;
-(bool)allowInCar;
-(void)setAllowInCar:(bool)arg1 ;
-(bool)allowMessageInCar;
-(bool)dismissOnLock;
-(void)dismiss:(int)arg1 ;
-(id)lockLabel;
-(id)shortLockLabel;
-(id)alertSheet;
-(void)buttonDismissed;
-(void)configure:(bool)arg1 requirePasscodeForActions:(bool)arg2 ;
-(void)performUnlockAction;
@end

