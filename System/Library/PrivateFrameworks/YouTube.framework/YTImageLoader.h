/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:03:26 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/YouTube.framework/YouTube
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <YouTube/YouTube-Structs.h>
@class NSLock, NSMutableArray, NSMutableSet, NSMutableDictionary, NSNotificationCenter, NSTimer;

@interface YTImageLoader : NSObject {

	NSLock* _queueLock;
	NSMutableArray* _loadQueue;
	NSMutableSet* _loadsInProgress;
	NSLock* _cacheLock;
	NSMutableDictionary* _imageCache;
	NSMutableDictionary* _roundedThumbnailImageCache;
	NSMutableDictionary* _largeThumbnailImageCache;
	NSMutableDictionary* _pluginImageCache;
	NSMutableArray* _imageCacheLRU;
	CFRunLoopRef _loaderRunLoop;
	CFRunLoopSourceRef _loaderSource;
	NSNotificationCenter* _notificationCenter;
	NSTimer* _loadStatusNotificationTimer;
	opaque_pthread_mutex_t _startupLock;
	opaque_pthread_cond_t _startupCondition;

}
+(id)sharedImageLoader;
-(void)_imageLoadFinished:(id)arg1 ;
-(void)_setImageData:(id)arg1 videoID:(id)arg2 forURL:(id)arg3 cacheLocked:(bool)arg4 ;
-(void)_startLoader;
-(void)_loadImageURL:(id)arg1 videoID:(id)arg2 ;
-(id)_locked_saveImageCache:(id)arg1 ;
-(id)_locked_loadImageCache:(id)arg1 ;
-(void)_mainThread_postLoadingStatusChanged;
-(void)_postLoadingStatusChanged;
-(bool)_locked_URLIsLoading:(id)arg1 ;
-(void)_locked_loadImageForURL:(id)arg1 videoID:(id)arg2 ;
-(void)_postImageLoadedNotification:(id)arg1 ;
-(void)_loadingStatusChanged;
-(void)_locked_imageLoadStarted:(id)arg1 ;
-(id)init;
-(id)notificationCenter;
-(void)saveCache:(id)arg1 ;
-(CGImageRef)createRoundedThumbnailWithImage:(CGImageRef)arg1 ;
-(bool)isLoadingImages;
-(CGImageRef)_largeThumbnailOverlay;
-(CGImageRef)createSheenedThumbnailWithImage:(CGImageRef)arg1 overlay:(CGImageRef)arg2 width:(int)arg3 height:(int)arg4 ;
-(CGImageRef)imageForURL:(id)arg1 rounded:(bool)arg2 videoID:(id)arg3 loadIfAbsent:(bool)arg4 ;
-(CGImageRef)largeImageForURL:(id)arg1 videoID:(id)arg2 loadIfAbsent:(bool)arg3 ;
-(CGImageRef)pluginImageForURL:(id)arg1 videoID:(id)arg2 loadIfAbsent:(bool)arg3 ;
-(void)loadCache:(id)arg1 ;
@end

