/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:03:08 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <VectorKit/VKModelObject.h>
#import <VectorKit/VKAnnotationModelDelegate.h>
#import <VectorKit/VKOverlayContainerDelegate.h>
#import <VectorKit/VKLabelModelDelegate.h>
#import <GeoServices/GEOResourceManifestTileGroupObserver.h>
#import <VectorKit/VKTileProviderClient.h>

@protocol VKMapModelDelegate, VKRoutePreloadSession, VKMapModeObserver;
@class VKTileProvider, NSMapTable, VKTrafficTileSource, VKOverlayTileSource, VKRasterOverlayTileSource, VKGridModel, VKSkyModel, VKLabelModel, VKRasterMapModel, VKHybridRasterMapModel, VKGroundCoverMapModel, VKRoadMapModel, VKRasterTrafficMapModel, VKPolygonMapModel, VKRoadTrafficMapModel, VKRealisticMapModel, VKBuildingFootprintMapModel, VKAnnotationModel, VKOverlayContainerModel, VKRasterOverlayMapModel, VKDebugModel, NSMutableArray, VKStylesheet, VKMapRasterizer, NSMutableSet, VKAnimation, VKMercatorTerrainHeightCache, VKLabelMarker, NSArray, VKAnnotationMarker, NSSet, VKPolylineOverlayPainter;

@interface VKMapModel : VKModelObject <VKAnnotationModelDelegate, VKOverlayContainerDelegate, VKLabelModelDelegate, GEOResourceManifestTileGroupObserver, VKTileProviderClient> {

	unsigned long long _mapPurpose;
	long long _tileSize;
	VKTileProvider* _tileProviders[3];
	VKTileProvider* _rasterOverlayProvider[2];
	long long _mapMode;
	long long _desiredMapMode;
	bool _transitioningToNav;
	bool _activeMapLayers[3][29];
	NSMapTable* _layerToSourceMaps[3];
	VKTrafficTileSource* _trafficSource;
	VKOverlayTileSource* _overlayTileSource;
	VKOverlayTileSource* _realisticOverlayTileSource;
	VKRasterOverlayTileSource* _rasterOverlayTileSource[2];
	VKGridModel* _gridModel;
	VKSkyModel* _skyModel;
	VKLabelModel* _labelModel;
	VKRasterMapModel* _rasterModel;
	VKHybridRasterMapModel* _hybridRasterModel;
	VKRasterMapModel* _standardRasterModel;
	VKGroundCoverMapModel* _groundCoverModel;
	VKRoadMapModel* _riverLineModel;
	VKRasterTrafficMapModel* _rasterTrafficModel;
	VKPolygonMapModel* _polygonModel;
	VKRoadMapModel* _roadModel;
	VKRoadMapModel* _hybridRoadModel;
	VKRoadTrafficMapModel* _roadTrafficModel;
	VKRealisticMapModel* _realisticModel;
	VKBuildingFootprintMapModel* _buildingFootprintModel;
	VKAnnotationModel* _annotationModel;
	VKOverlayContainerModel* _overlayContainerModel;
	VKRasterOverlayMapModel* _rasterOverlayModel[2];
	VKDebugModel* _debugModel;
	NSMapTable* _tileSources;
	NSMutableArray* _drawOrder;
	NSMutableArray* _mapLayerSubmodels;
	NSMutableArray* _mapTileSubmodels;
	VKStylesheet* _activeStylesheet;
	VKStylesheet* _defaultStylesheet;
	VKStylesheet* _hybridStylesheet;
	VKStylesheet* _satelliteStylesheet;
	double _zoomLevel;
	long long _mapType;
	<VKMapModelDelegate>* _delegate;
	<VKRoutePreloadSession>* _routePreloadSession;
	bool _dynamicMapModesEnabled;
	bool _debugDynamicMapModesEnabled;
	bool _buildingsAreVisible;
	bool _showsBuildings;
	bool _fullyDrawn;
	bool _shouldNotifyFullyDrawn;
	bool _hasFailedTile;
	bool _trafficEnabled;
	bool _shouldRasterize;
	long long _loadingCount;
	double _contentScale;
	long long _targetDisplay;
	double _lodBias;
	bool _disableRoads;
	bool _disableLabels;
	bool _disablePolygons;
	bool _disableBuildingFootprints;
	bool _disableRasters;
	bool _enableBlackRoadLines;
	bool _disableGrid;
	VGLColor _clearColor;
	VKMapRasterizer* _rasterizer;
	VKRasterMapModel* _rasterViewer;
	int _annotationMarkerStyle;
	bool _limitingNavCameraHeight;
	NSMutableSet* _blockingStylesheetObservers;
	double _styleTransitionProgress;
	NSMutableArray* _externalAnchors;
	double _forcedMaxZoomLevel;
	VKAnimation* _modeTransitionAnimation;
	bool _disableRoadClass[9];
	<VKMapModeObserver>* _mapModeObserver;
	float _navigationPuckSize;

}

@property (nonatomic,retain) VKStylesheet * stylesheet;                                                      //@synthesize activeStylesheet=_activeStylesheet - In the implementation block
@property (assign,nonatomic) long long mapType;                                                              //@synthesize mapType=_mapType - In the implementation block
@property (assign,nonatomic) bool shouldLoadFallbackTiles; 
@property (assign,nonatomic) unsigned long long neighborMode; 
@property (assign,nonatomic) long long shieldSize; 
@property (assign,nonatomic) long long navigationShieldSize; 
@property (assign,nonatomic) long long shieldIdiom; 
@property (assign,nonatomic) bool showsPointsOfInterest; 
@property (assign,nonatomic) bool showsBuildings;                                                            //@synthesize showsBuildings=_showsBuildings - In the implementation block
@property (assign,nonatomic) double lodBias; 
@property (assign,nonatomic) bool dynamicMapModesEnabled;                                                    //@synthesize dynamicMapModesEnabled=_dynamicMapModesEnabled - In the implementation block
@property (nonatomic,readonly) long long currentMapMode;                                                     //@synthesize mapMode=_mapMode - In the implementation block
@property (assign,nonatomic) bool limitingNavCameraHeight;                                                   //@synthesize limitingNavCameraHeight=_limitingNavCameraHeight - In the implementation block
@property (nonatomic,readonly) VKMercatorTerrainHeightCache * terrainHeightCache; 
@property (assign,getter=isTrafficEnabled,nonatomic) bool trafficEnabled;                                    //@synthesize trafficEnabled=_trafficEnabled - In the implementation block
@property (assign,nonatomic) bool localizeLabels; 
@property (assign,nonatomic) long long labelScaleFactor; 
@property (assign,nonatomic) double contentScale;                                                            //@synthesize contentScale=_contentScale - In the implementation block
@property (assign,nonatomic) long long targetDisplay; 
@property (assign,nonatomic) <VKMapModelDelegate> * delegate;                                                //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) VKBuildingFootprintMapModel * buildingFootprintModel;                         //@synthesize buildingFootprintModel=_buildingFootprintModel - In the implementation block
@property (nonatomic,readonly) bool buildingsAreVisible;                                                     //@synthesize buildingsAreVisible=_buildingsAreVisible - In the implementation block
@property (nonatomic,readonly) bool isFullyDrawn; 
@property (nonatomic,readonly) VKTileProvider * tileProvider; 
@property (nonatomic,readonly) VKLabelMarker * selectedLabelMarker; 
@property (assign,nonatomic) bool labelMarkerSelectionEnabled; 
@property (assign,nonatomic) PolylineCoordinate routeUserOffset; 
@property (nonatomic,retain) NSArray * externalTrafficIncidents; 
@property (nonatomic,readonly) VKAnnotationMarker * selectedAnnotationMarker; 
@property (nonatomic,readonly) NSArray * overlays; 
@property (nonatomic,readonly) NSSet * persistentOverlays; 
@property (nonatomic,retain) VKPolylineOverlayPainter * focusedLabelsPolylinePainter; 
@property (assign,nonatomic) bool debugDynamicMapModesEnabled;                                               //@synthesize debugDynamicMapModesEnabled=_debugDynamicMapModesEnabled - In the implementation block
@property (assign,nonatomic) bool disableRoads;                                                              //@synthesize disableRoads=_disableRoads - In the implementation block
@property (assign,nonatomic) bool disableLabels;                                                             //@synthesize disableLabels=_disableLabels - In the implementation block
@property (assign,nonatomic) bool disablePolygons;                                                           //@synthesize disablePolygons=_disablePolygons - In the implementation block
@property (assign,nonatomic) bool disableBuildingFootprints;                                                 //@synthesize disableBuildingFootprints=_disableBuildingFootprints - In the implementation block
@property (assign,nonatomic) bool disableRasters;                                                            //@synthesize disableRasters=_disableRasters - In the implementation block
@property (assign,nonatomic) bool enableBlackRoadLines;                                                      //@synthesize enableBlackRoadLines=_enableBlackRoadLines - In the implementation block
@property (assign,nonatomic) bool disableRealisticRoads; 
@property (assign,nonatomic) bool disableRealisticLand; 
@property (assign,nonatomic) bool disableGrid;                                                               //@synthesize disableGrid=_disableGrid - In the implementation block
@property (assign,nonatomic) VGLColor clearColor;                                                            //@synthesize clearColor=_clearColor - In the implementation block
@property (nonatomic,retain) <VKRoutePreloadSession> * routePreloadSession; 
@property (assign,nonatomic) <VKRouteMatchedAnnotationPresentation> * routeLineSplitAnnotation; 
@property (nonatomic,readonly) NSArray * visibleTileSets; 
@property (assign,nonatomic) float navigationPuckSize;                                                       //@synthesize navigationPuckSize=_navigationPuckSize - In the implementation block
+(const char*)nameForRoadClass:(int)arg1 ;
+(unsigned long long)numberOfRoadClasses;
-(void)_setMaximumZoomLevel:(double)arg1 ;
-(void)_resetMaximumZoomLevel;
-(void)dealloc;
-(VGLColor)clearColor;
-(void)setDelegate:(id)arg1 ;
-(id)delegate;
-(void)didReceiveMemoryWarning;
-(id).cxx_construct;
-(long long)tileSize;
-(void)setContentScale:(double)arg1 ;
-(double)contentScale;
-(void)_localeChanged:(id)arg1 ;
-(bool)labelMarkerSelectionEnabled;
-(void)setLabelMarkerSelectionEnabled:(bool)arg1 ;
-(long long)mapType;
-(id)visibleTileSets;
-(id)attributionsForCurrentRegion;
-(bool)isShowingNoDataPlaceholders;
-(id)stylesheet;
-(void)setStylesheet:(id)arg1 ;
-(long long)targetDisplay;
-(void)setTargetDisplay:(long long)arg1 ;
-(void)setTrafficEnabled:(bool)arg1 ;
-(bool)localizeLabels;
-(void)setLocalizeLabels:(bool)arg1 ;
-(long long)labelScaleFactor;
-(void)setLabelScaleFactor:(long long)arg1 ;
-(void)clearScene;
-(void)setShouldLoadFallbackTiles:(bool)arg1 ;
-(bool)shouldLoadFallbackTiles;
-(id)detailedDescription;
-(long long)shieldSize;
-(void)setShieldSize:(long long)arg1 ;
-(long long)navigationShieldSize;
-(void)setNavigationShieldSize:(long long)arg1 ;
-(long long)shieldIdiom;
-(void)setShieldIdiom:(long long)arg1 ;
-(bool)showsPointsOfInterest;
-(void)setShowsPointsOfInterest:(bool)arg1 ;
-(bool)showsBuildings;
-(void)setShowsBuildings:(bool)arg1 ;
-(void)setDesiredMapMode:(long long)arg1 immediate:(bool)arg2 ;
-(bool)dynamicMapModesEnabled;
-(void)setDynamicMapModesEnabled:(bool)arg1 ;
-(PolylineCoordinate)routeUserOffset;
-(void)setRouteUserOffset:(PolylineCoordinate)arg1 ;
-(id)externalTrafficIncidents;
-(void)setExternalTrafficIncidents:(id)arg1 ;
-(/*^block*/ id)annotationMarkerDeselectionCallback;
-(void)setAnnotationMarkerDeselectionCallback:(/*^block*/ id)arg1 ;
-(id)selectedAnnotationMarker;
-(id)annotationMarkers;
-(void)removeAnnotationMarker:(id)arg1 ;
-(void)addAnnotationMarker:(id)arg1 allowAnimation:(bool)arg2 ;
-(void)selectAnnotationMarker:(id)arg1 ;
-(id)persistentOverlays;
-(void)removePersistentOverlay:(id)arg1 ;
-(void)addPersistentOverlay:(id)arg1 ;
-(id)overlays;
-(void)removeOverlay:(id)arg1 ;
-(void)addOverlay:(id)arg1 ;
-(id)routeLineSplitAnnotation;
-(void)setRouteLineSplitAnnotation:(id)arg1 ;
-(void)deselectLabelMarker;
-(id)externalAnchors;
-(void)removeExternalAnchor:(id)arg1 ;
-(void)addExternalAnchor:(id)arg1 ;
-(bool)disableLabels;
-(void)setDisableLabels:(bool)arg1 ;
-(bool)disableRoads;
-(void)setDisableRoads:(bool)arg1 ;
-(void)setMapType:(long long)arg1 ;
-(void)stylesheetAnimationDidEnd:(bool)arg1 ;
-(void)resetTileContainers;
-(void)stylesheetAnimationWillStartFromStyle:(long long)arg1 toStyle:(long long)arg2 ;
-(void)stylesheetAnimationDidProgress:(float)arg1 ;
-(void)requestStylesheetAnimation:(id)arg1 targetMapDisplayStyle:(long long)arg2 setupHandler:(/*^block*/ id)arg3 ;
-(double)_styleTransitionProgress;
-(void)_setStyleTransitionProgress:(double)arg1 targetStyle:(long long)arg2 step:(long long)arg3 ;
-(void)setRoutePreloadSession:(id)arg1 ;
-(id)routePreloadSession;
-(id)labelMarkerForSelectionAtPoint:(CGPoint)arg1 selectableLabelsOnly:(bool)arg2 ;
-(void)selectLabelMarker:(id)arg1 ;
-(void)deselectAnnotationMarker:(id)arg1 ;
-(/*^block*/ id)annotationRectTest;
-(/*^block*/ id)annotationCoordinateTest;
-(id)selectedLabelMarker;
-(id)labelMarkers;
-(void)addRasterOverlay:(id)arg1 ;
-(void)removeRasterOverlay:(id)arg1 ;
-(void)insertRasterOverlay:(id)arg1 aboveOverlay:(id)arg2 ;
-(void)insertRasterOverlay:(id)arg1 belowOverlay:(id)arg2 ;
-(void)setCurrentLocationText:(id)arg1 ;
-(id)focusedLabelsPolylinePainter;
-(void)setFocusedLabelsPolylinePainter:(id)arg1 ;
-(void)forceMapType:(long long)arg1 ;
-(void)setDisablePolygons:(bool)arg1 ;
-(void)setDisableBuildingFootprints:(bool)arg1 ;
-(void)setEnableBlackRoadLines:(bool)arg1 ;
-(void)setDisableRasters:(bool)arg1 ;
-(void)disableRoadClass:(bool)arg1 withRoadClass:(int)arg2 ;
-(void)setDisableRealisticRoads:(bool)arg1 ;
-(void)setDisableRealisticLand:(bool)arg1 ;
-(void)setDisableGrid:(bool)arg1 ;
-(bool)isRoadClassDisabled:(int)arg1 ;
-(bool)isFullyDrawn;
-(bool)disablePolygons;
-(bool)disableBuildingFootprints;
-(bool)disableRasters;
-(bool)disableRealisticRoads;
-(bool)disableRealisticLand;
-(bool)disableGrid;
-(bool)debugDynamicMapModesEnabled;
-(void)setDebugDynamicMapModesEnabled:(bool)arg1 ;
-(bool)isTrafficEnabled;
-(unsigned long long)neighborMode;
-(void)setNeighborMode:(unsigned long long)arg1 ;
-(id)initShouldRasterize:(bool)arg1 mapPurpose:(unsigned long long)arg2 contentScale:(double)arg3 ;
-(void)addSubmodel:(id)arg1 ;
-(id)terrainHeightCache;
-(void)flushCaches;
-(long long)currentMapMode;
-(void)layoutScene:(id)arg1 withContext:(id)arg2 ;
-(double)heightAtPoint:(VKPoint)arg1 ;
-(void)didEndNavigation;
-(void)didBeginTransitionToNavigation;
-(void)setLimitingNavCameraHeight:(bool)arg1 ;
-(id)navTileSource;
-(void)preloadNavigationSceneResourcesWithContext:(id)arg1 ;
-(void)preloadNavigationSceneAnimationResourcesForDisplayStyle:(long long)arg1 context:(id)arg2 ;
-(id)annotationMarkerForSelectionAtPoint:(VKPoint)arg1 avoidCurrent:(bool)arg2 canvasSize:(CGSize)arg3 ;
-(void)setNavigationPuckSize:(float)arg1 ;
-(void)debugHighlightLabelAtScreenPoint:(CGPoint)arg1 viewTransform:(id)arg2 ;
-(unsigned)supportedRenderPasses;
-(void)layoutSceneIfNeeded:(id)arg1 withContext:(id)arg2 ;
-(void)recursiveDrawScene:(id)arg1 withContext:(id)arg2 pass:(unsigned)arg3 ;
-(void)drawScene:(id)arg1 withContext:(id)arg2 ;
-(void)_transitionFromMode:(long long)arg1 toMode:(long long)arg2 animated:(bool)arg3 ;
-(void)_activateModel:(id)arg1 ;
-(void)_deactivateModel:(id)arg1 ;
-(void)configureTileSources;
-(int)tileStyleForMapLayer:(unsigned long long)arg1 ;
-(id)createSourceForLayer:(unsigned long long)arg1 tileSet:(id)arg2 mode:(long long)arg3 ;
-(id)sourceForLayer:(unsigned long long)arg1 mode:(long long)arg2 ;
-(void)createTrafficTileSourceIfNecessary;
-(void)_mapConfigurationDidChange;
-(void)_setStylesheetFromMapType:(long long)arg1 ;
-(void)performStylesheetWillTransitionToDisplayStyle:(long long)arg1 ;
-(void)performStylesheetDidChange;
-(void)performStylesheetDoneChanging;
-(void)_updateRegularTileProviderMode;
-(void)_updateOverlayTileSource;
-(void)_forceLayout;
-(float)ppi;
-(void)setLodBias:(double)arg1 ;
-(void)_reloadStylesheet;
-(double)lodBias;
-(void)shouldFlushCaches:(id)arg1 ;
-(void)willTapZoom;
-(void)didTapZoom;
-(void)foreachActiveLayer:(/*^block*/ id)arg1 ;
-(double)maxTileHeightAtPoint:(VKPoint)arg1 ;
-(void)_updateZoomLevel:(id)arg1 ;
-(void)_tryTransitionAndPreloadIfNecessary:(id)arg1 ;
-(id)tileProvider;
-(void)setClearColor:(VGLColor)arg1 ;
-(id)_rasterOverlayTileSourceForLevel:(unsigned long long)arg1 ;
-(void)_updateTileExclusionAreas;
-(id)labelDebugString;
-(void)annotationModel:(id)arg1 willAnimateInAnnotationMarkers:(id)arg2 ;
-(void)annotationModel:(id)arg1 didAnimateInAnnotationMarkers:(id)arg2 ;
-(void)annotationModel:(id)arg1 didFinishAddingAnnotationMarkers:(id)arg2 ;
-(id)overlayContainer:(id)arg1 painterForOverlay:(id)arg2 ;
-(id)overlayContainer:(id)arg1 roadTileForTile:(id)arg2 ;
-(bool)overlayContainerIsInRealisticMode:(id)arg1 ;
-(void)overlayContainer:(id)arg1 showingRouteInStandardModeDidChange:(bool)arg2 ;
-(id)labelModel:(id)arg1 mapTileForTile:(id)arg2 layer:(unsigned long long)arg3 ;
-(void)labelModel:(id)arg1 selectedLabelMarkerWillDisappear:(id)arg2 ;
-(void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1 ;
-(void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1 ;
-(bool)tileProviderMayUseNetwork:(id)arg1 ;
-(void)tileProviderNeedsUpdate:(id)arg1 ;
-(void)willStartLoadingTiles;
-(void)didStopLoadingTilesWithError:(id)arg1 ;
-(long long)minimumZoomLevelInView:(id)arg1 ;
-(long long)maximumZoomLevelInView:(id)arg1 ;
-(bool)enableBlackRoadLines;
-(id)buildingFootprintModel;
-(bool)buildingsAreVisible;
-(float)navigationPuckSize;
-(bool)limitingNavCameraHeight;
@end

