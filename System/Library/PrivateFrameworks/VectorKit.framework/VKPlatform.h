/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:03:11 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@interface VKPlatform : NSObject {

	unsigned long long _memSize;
	int _numCPUs;
	bool _proceduralRoadAlpha;
	bool _useCheapTrafficShader;
	bool _shouldUseTrafficAlphaHack;
	bool _supportsBuildingStrokes;
	bool _supports3DBuildingStrokes;

}

@property (nonatomic,readonly) bool roadsWithSimpleLineMeshesAvailable; 
@property (nonatomic,readonly) bool shouldUseTrafficAlphaHack;                       //@synthesize shouldUseTrafficAlphaHack=_shouldUseTrafficAlphaHack - In the implementation block
@property (nonatomic,readonly) unsigned long long tileMaximumLimit; 
@property (nonatomic,readonly) bool supportsHiResRTT; 
@property (nonatomic,readonly) bool isPad; 
@property (nonatomic,readonly) bool shouldDrawWhenReady; 
@property (nonatomic,readonly) bool shouldStyleLabelsInParallel; 
@property (nonatomic,readonly) bool canMakeSharingThumbnails; 
@property (nonatomic,readonly) double mainScreenScale; 
@property (nonatomic,readonly) double mainScreenPPI; 
@property (nonatomic,readonly) bool supportsBuildingStrokes;                         //@synthesize supportsBuildingStrokes=_supportsBuildingStrokes - In the implementation block
@property (nonatomic,readonly) bool supports3DBuildingStrokes;                       //@synthesize supports3DBuildingStrokes=_supports3DBuildingStrokes - In the implementation block
@property (nonatomic,readonly) bool supportsHiResBuildings; 
@property (nonatomic,readonly) bool supportsDepthDependentBuildings; 
@property (nonatomic,readonly) bool proceduralRoadAlpha;                             //@synthesize proceduralRoadAlpha=_proceduralRoadAlpha - In the implementation block
@property (nonatomic,readonly) bool useCheapTrafficShader;                           //@synthesize useCheapTrafficShader=_useCheapTrafficShader - In the implementation block
@property (nonatomic,readonly) unsigned long long memorySize;                        //@synthesize memSize=_memSize - In the implementation block
+(id)sharedPlatform;
-(void)dealloc;
-(id)init;
-(double)mainScreenScale;
-(double)mainScreenPPI;
-(bool)shouldDrawWhenReady;
-(bool)supportsHiResRTT;
-(bool)isPad;
-(bool)roadsWithSimpleLineMeshesAvailable;
-(bool)supportsDepthDependentBuildings;
-(bool)supportsHiResBuildings;
-(bool)supportsBuildingStrokes;
-(bool)supports3DBuildingStrokes;
-(void)_determineHardware;
-(unsigned long long)_calculateMemSize;
-(unsigned long long)tileReserveLimit:(bool)arg1 ;
-(unsigned long long)tileMaximumLimit;
-(bool)canMakeSharingThumbnails;
-(bool)shouldStyleLabelsInParallel;
-(unsigned long long)memorySize;
-(bool)proceduralRoadAlpha;
-(bool)useCheapTrafficShader;
-(bool)shouldUseTrafficAlphaHack;
@end

