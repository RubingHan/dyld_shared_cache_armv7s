/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:03:12 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <VectorKit/VectorKit-Structs.h>
@class VKViewVolume;

@interface VKViewTransform : NSObject {

	shared_ptr<vk::ViewTransform>* _viewTransform;

}

@property (nonatomic,readonly) bool isMercator; 
@property (nonatomic,readonly) bool isGeocentric; 
@property (nonatomic,readonly) int coordinateSpace; 
@property (nonatomic,readonly) CGSize screenSizeInPoints; 
@property (nonatomic,readonly) CGSize screenSizeInPixels; 
@property (nonatomic,readonly) float contentScale; 
@property (nonatomic,readonly) VKPoint translation; 
@property (nonatomic,readonly) VKPoint translationInMercator; 
@property (nonatomic,readonly) Vec3Imp<double> upVector; 
@property (nonatomic,readonly) Vec3Imp<double> rightVector; 
@property (nonatomic,readonly) Vec3Imp<double> forwardVector; 
@property (nonatomic,readonly) float heading; 
@property (nonatomic,readonly) float degreesFromPlumb; 
@property (nonatomic,readonly) double widthOverDepth; 
@property (nonatomic,readonly) const SCD_Struct_VK42* viewProjectionMatrix; 
@property (nonatomic,readonly) double nearPlaneDistance; 
@property (nonatomic,readonly) double farPlaneDistance; 
@property (nonatomic,readonly) VKViewVolume * viewVolume; 
@property (nonatomic,readonly) double focusDistance; 
@property (nonatomic,readonly) VKPoint focusPoint; 
@property (assign,nonatomic) const SCD_Struct_VK42* scaledViewProjectionMatrix; 
-(id)init;
-(id).cxx_construct;
-(float)contentScale;
-(void).cxx_destruct;
-(Vec3Imp<double>)forwardVector;
-(Vec3Imp<double>)rightVector;
-(const SCD_Struct_VK42*)viewProjectionMatrix;
-(id)viewVolume;
-(Vec3Imp<double>)upVector;
-(VKPoint)groundPointFromScreenPoint:(CGPoint)arg1 ;
-(shared_ptr<vk::ViewTransform>*)viewTransform;
-(void)setCoordinateSpace:(int)arg1 screenSizeInPixels:(CGSize)arg2 contentScale:(float)arg3 frustum:(SCD_Struct_VK43)arg4 position:(VKPoint)arg5 orientation:(const SCD_Struct_VK42*)arg6 horizontalOffset:(float)arg7 ;
-(void)setScaledViewProjectionMatrix:(const SCD_Struct_VK42*)arg1 ;
-(bool)isMercator;
-(bool)isGeocentric;
-(VKPoint)translation;
-(SCD_Struct_VK42)orientationMatrixAtWorldPoint:(VKPoint)arg1 ;
-(const SCD_Struct_VK42*)scaledViewProjectionMatrix;
-(float)degreesFromPlumb;
-(double)widthOverDepth;
-(VKPoint)focusPoint;
-(CGSize)screenSizeInPoints;
-(CGSize)screenSizeInPixels;
-(int)coordinateSpace;
-(VKPoint)translationInMercator;
-(double)nearPlaneDistance;
-(double)farPlaneDistance;
-(double)focusDistance;
-(VKPoint)groundPointFromPixel:(Vec2Imp<float>)arg1 ;
-(float)heading;
@end

