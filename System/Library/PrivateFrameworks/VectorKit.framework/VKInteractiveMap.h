/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:03:08 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol VKInteractiveMap <NSObject>
@property (assign,nonatomic) <VKInteractiveMapDelegate> * delegate; 
@property (assign,nonatomic) bool trafficEnabled; 
@property (assign,nonatomic) bool staysCenteredDuringPinch; 
@property (assign,nonatomic) bool staysCenteredDuringRotation; 
@property (assign,nonatomic) bool isPitchable; 
@property (getter=isPitched,nonatomic,readonly) bool pitched; 
@property (getter=isFullyPitched,nonatomic,readonly) bool fullyPitched; 
@property (assign,nonatomic) long long mapType; 
@property (assign,nonatomic) long long shieldSize; 
@property (assign,nonatomic) long long navigationShieldSize; 
@property (assign,nonatomic) long long shieldIdiom; 
@property (assign,nonatomic) bool showsPointsOfInterest; 
@property (assign,nonatomic) bool showsBuildings; 
@property (assign,nonatomic) PolylineCoordinate routeUserOffset; 
@property (nonatomic,retain) NSArray * externalTrafficIncidents; 
@property (nonatomic,readonly) double minimumZoomLevel; 
@property (nonatomic,readonly) double maximumZoomLevel; 
@property (assign,nonatomic) bool labelMarkerSelectionEnabled; 
@property (assign,nonatomic) bool localizeLabels; 
@property (assign,nonatomic) long long labelScaleFactor; 
@property (nonatomic,retain) GEOMapRegion * mapRegion; 
@property (nonatomic,readonly) GEOMapRegion * mapRegionOfInterest; 
@property (nonatomic,readonly) double yaw; 
@property (nonatomic,readonly) double presentationYaw; 
@property (nonatomic,readonly) double pitch; 
@property (nonatomic,readonly) double altitude; 
@property (assign,nonatomic) long long annotationTrackingZoomStyle; 
@property (assign,nonatomic) <VKRouteMatchedAnnotationPresentation> * routeLineSplitAnnotation; 
@property (getter=isAnimatingToTrackAnnotation,nonatomic,readonly) bool animatingToTrackAnnotation; 
@property (nonatomic,readonly) <VKTrackableAnnotation> * trackingAnnotation; 
@property (getter=isTrackingHeading,nonatomic,readonly) bool trackingHeading; 
@property (nonatomic,readonly) NSArray * visibleTileSets; 
@property (getter=isFullyDrawn,nonatomic,readonly) bool fullyDrawn; 
@property (nonatomic,readonly) VKAnchorWrapper * externalAnchors; 
@required
+(bool)supportsMapType:(long long)arg1 scale:(int)arg2;
-(void)setDelegate:(id)arg1;
-(id)delegate;
-(double)altitude;
-(bool)labelMarkerSelectionEnabled;
-(void)setLabelMarkerSelectionEnabled:(bool)arg1;
-(long long)mapType;
-(id)visibleTileSets;
-(id)attributionsForCurrentRegion;
-(bool)isShowingNoDataPlaceholders;
-(bool)trafficEnabled;
-(void)setTrafficEnabled:(bool)arg1;
-(bool)currentZoomLevelAllowsRotation;
-(void)setStaysCenteredDuringPinch:(bool)arg1;
-(bool)localizeLabels;
-(void)setLocalizeLabels:(bool)arg1;
-(long long)labelScaleFactor;
-(void)setLabelScaleFactor:(long long)arg1;
-(bool)staysCenteredDuringPinch;
-(void)setStaysCenteredDuringRotation:(bool)arg1;
-(bool)staysCenteredDuringRotation;
-(void)setIsPitchable:(bool)arg1;
-(bool)isPitchable;
-(void)debugHighlightLabelAtPoint:(CGPoint)arg1;
-(id)detailedDescription;
-(bool)canZoomInForTileSize:(long long)arg1;
-(bool)canZoomOutForTileSize:(long long)arg1;
-(double)minimumZoomLevel;
-(double)minimumZoomLevelForTileSize:(long long)arg1;
-(double)topDownMinimumZoomLevelForTileSize:(long long)arg1;
-(double)maximumZoomLevel;
-(double)maximumZoomLevelForTileSize:(long long)arg1;
-(double)currentZoomLevel;
-(double)currentZoomLevelForTileSize:(long long)arg1;
-(double)zoomLevelAdjustmentForTileSize:(long long)arg1;
-(long long)shieldSize;
-(void)setShieldSize:(long long)arg1;
-(long long)navigationShieldSize;
-(void)setNavigationShieldSize:(long long)arg1;
-(long long)shieldIdiom;
-(void)setShieldIdiom:(long long)arg1;
-(bool)showsPointsOfInterest;
-(void)setShowsPointsOfInterest:(bool)arg1;
-(bool)showsBuildings;
-(void)setShowsBuildings:(bool)arg1;
-(long long)annotationTrackingZoomStyle;
-(void)setAnnotationTrackingZoomStyle:(long long)arg1;
-(PolylineCoordinate*)routeUserOffset;
-(void)setRouteUserOffset:(PolylineCoordinate)arg1;
-(id)externalTrafficIncidents;
-(void)setExternalTrafficIncidents:(id)arg1;
-(/*^block*/ id)annotationMarkerDeselectionCallback;
-(void)setAnnotationMarkerDeselectionCallback:(/*^block*/ id)arg1;
-(id)selectedAnnotationMarker;
-(id)annotationMarkers;
-(void)removeAnnotationMarker:(id)arg1;
-(void)addAnnotationMarker:(id)arg1 allowAnimation:(bool)arg2;
-(void)selectAnnotationMarker:(id)arg1;
-(id)persistentOverlays;
-(void)removePersistentOverlay:(id)arg1;
-(void)addPersistentOverlay:(id)arg1;
-(id)overlays;
-(void)removeOverlay:(id)arg1;
-(void)addOverlay:(id)arg1;
-(id)routeLineSplitAnnotation;
-(void)setRouteLineSplitAnnotation:(id)arg1;
-(void)deselectLabelMarker;
-(id)trackingAnnotation;
-(bool)isTrackingHeading;
-(void)stopTrackingAnnotation;
-(void)startTrackingAnnotation:(id)arg1 trackHeading:(bool)arg2 animated:(bool)arg3;
-(id)externalAnchors;
-(void)removeExternalAnchor:(id)arg1;
-(void)addExternalAnchor:(id)arg1;
-(void)setMapType:(long long)arg1;
-(void)stylesheetAnimationDidEnd:(bool)arg1;
-(bool)canEnter3DMode;
-(void)stylesheetAnimationWillStartFromStyle:(long long)arg1 toStyle:(long long)arg2;
-(void)stylesheetAnimationDidProgress:(float)arg1;
-(void)requestStylesheetAnimation:(id)arg1 targetMapDisplayStyle:(long long)arg2 setupHandler:(/*^block*/ id)arg3;
-(double)_styleTransitionProgress;
-(void)_setStyleTransitionProgress:(double)arg1 targetStyle:(long long)arg2 step:(long long)arg3;
-(double)presentationYaw;
-(void)setMapRegion:(id)arg1 animated:(bool)arg2;
-(id)mapRegion;
-(id)mapRegionOfInterest;
-(id)consoleString:(bool)arg1;
-(VKPoint*)centerCoordinate;
-(void)setCenterCoordinate:(CGPoint)arg1 altitude:(double)arg2 yaw:(double)arg3 pitch:(double)arg4 duration:(double)arg5 timingCurve:(/*^block*/ id)arg6 completion:(/*^block*/ id)arg7;
-(void)setYaw:(double)arg1 animated:(bool)arg2;
-(void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 animated:(bool)arg4;
-(void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 animated:(bool)arg4 completion:(/*^block*/ id)arg5;
-(void)animateToMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 completion:(/*^block*/ id)arg5;
-(double)durationToAnimateToMapRegion:(id)arg1;
-(CGPoint*)convertPoint:(CGPoint)arg1 toCoordinateFromLayer:(id)arg2;
-(CGPoint*)convertPoint:(CGPoint)arg1 toMapPointFromLayer:(id)arg2;
-(CGPoint*)convertMapPoint:(CGPoint)arg1 toPointToLayer:(id)arg2;
-(CGPoint*)convertCoordinate:(CGPoint)arg1 toPointToLayer:(id)arg2;
-(CGPoint*)convertCoordinate:(CGPoint)arg1 toCameraModelPointToLayer:(id)arg2;
-(id)annotationMarkerForSelectionAtPoint:(CGPoint)arg1 avoidCurrent:(bool)arg2;
-(id)labelMarkerForSelectionAtPoint:(CGPoint)arg1 selectableLabelsOnly:(bool)arg2;
-(void)selectLabelMarker:(id)arg1;
-(void)enter3DMode;
-(void)exit3DMode;
-(bool)isPitched;
-(bool)isFullyPitched;
-(void)panWithOffset:(CGPoint)arg1 relativeToScreenPoint:(CGPoint)arg2 animated:(bool)arg3 duration:(double)arg4 completionHandler:(/*^block*/ id)arg5;
-(void)deselectAnnotationMarker:(id)arg1;
-(/*^block*/ id)annotationRectTest;
-(/*^block*/ id)annotationCoordinateTest;
-(bool)shouldHideOffscreenSelectedAnnotation;
-(id)selectedLabelMarker;
-(id)labelMarkers;
-(bool)isAnimatingToTrackAnnotation;
-(id)viewportInfo;
-(bool)restoreViewportFromInfo:(id)arg1;
-(void)zoomToLevel:(double)arg1 withFocusPoint:(CGPoint)arg2;
-(void)zoom:(double)arg1 withFocusPoint:(CGPoint)arg2 completionHandler:(/*^block*/ id)arg3;
-(void)startPinchingWithFocusPoint:(CGPoint)arg1;
-(void)updatePinchWithFocusPoint:(CGPoint)arg1 oldFactor:(double)arg2 newFactor:(double)arg3;
-(void)stopPinchingWithFocusPoint:(CGPoint)arg1;
-(void)startPanningAtPoint:(CGPoint)arg1;
-(void)updatePanWithTranslation:(CGPoint)arg1;
-(void)stopPanningAtPoint:(CGPoint)arg1;
-(void)didStartPanningDeceleration;
-(void)startRotatingWithFocusPoint:(CGPoint)arg1;
-(void)updateRotationWithFocusPoint:(CGPoint)arg1 newValue:(double)arg2;
-(void)stopRotatingWithFocusPoint:(CGPoint)arg1;
-(void)startPitchingWithFocusPoint:(CGPoint)arg1;
-(void)updatePitchWithFocusPoint:(CGPoint)arg1 translation:(double)arg2;
-(void)stopPitchingWithFocusPoint:(CGPoint)arg1;
-(bool)isPointValidForGesturing:(CGPoint)arg1;
-(void)stopSnappingAnimations;
-(bool)isFullyDrawn;
-(void)setMapRegion:(id)arg1;
-(VKPoint*)screenPointForPoint:(CGPoint)arg1;
-(double)pitch;
-(double)yaw;
@end

