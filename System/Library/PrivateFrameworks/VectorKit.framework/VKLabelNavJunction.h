/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:03:13 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <VectorKit/VKLabelNavFeature.h>

@class VKLabelTile, NSMutableArray, VKLabelNavRoad, NSString, VKLabelNavRoadLabel, NSArray;

@interface VKLabelNavJunction : NSObject <VKLabelNavFeature> {

	VKLabelTile* _tile;
	Vec2Imp<float> _tileCoordinate;
	SCD_Struct_VK217* _geoJunction;
	PolylineCoordinate _routeOffset;
	NSMutableArray* _roads;
	VKLabelNavRoad* _incomingRoad;
	VKLabelNavRoad* _outgoingRoad;
	float _distanceFromPreviousShieldLabel;
	int _preferredLabelPlacement;
	bool _isOnDualCarriageway;
	bool _hasSharedRouteDirection;
	Vec2Imp<float> _sharedRouteDirection;
	bool _foundRoads;
	bool _isOverpass;
	bool _isRouteOverpass;
	int _largestRoadClass;
	SCD_Struct_VK244* _labelFeature;
	NSString* _name;
	VKLabelNavRoadLabel* _junctionSign;
	bool _areLabelsDisabled;
	unsigned long long _depthFromRoute;
	double _worldUnitsPerMeter;
	VKLabelNavJunction* _overpassJunction;
	VKPoint _worldCoordinate;
	double _sortValue;
	bool _isRouteRefineJunction;

}

@property (nonatomic,readonly) VKLabelTile * tile;                               //@synthesize tile=_tile - In the implementation block
@property (nonatomic,readonly) const SCD_Struct_VK217* geoJunction;              //@synthesize geoJunction=_geoJunction - In the implementation block
@property (nonatomic,readonly) Vec2Imp<float> tileCoordinate;                    //@synthesize tileCoordinate=_tileCoordinate - In the implementation block
@property (assign,nonatomic) PolylineCoordinate routeOffset;                     //@synthesize routeOffset=_routeOffset - In the implementation block
@property (nonatomic,readonly) NSArray * roads;                                  //@synthesize roads=_roads - In the implementation block
@property (nonatomic,readonly) VKLabelNavRoad * outgoingRoad;                    //@synthesize outgoingRoad=_outgoingRoad - In the implementation block
@property (nonatomic,readonly) VKLabelNavRoad * incomingRoad;                    //@synthesize incomingRoad=_incomingRoad - In the implementation block
@property (assign,nonatomic) float distanceFromPreviousShieldLabel;              //@synthesize distanceFromPreviousShieldLabel=_distanceFromPreviousShieldLabel - In the implementation block
@property (assign,nonatomic) bool isOnDualCarriageway;                           //@synthesize isOnDualCarriageway=_isOnDualCarriageway - In the implementation block
@property (nonatomic,readonly) bool hasSharedRouteDirection;                     //@synthesize hasSharedRouteDirection=_hasSharedRouteDirection - In the implementation block
@property (assign,nonatomic) Vec2Imp<float> sharedRouteDirection;                //@synthesize sharedRouteDirection=_sharedRouteDirection - In the implementation block
@property (nonatomic,readonly) bool isOnRoute; 
@property (nonatomic,readonly) bool isIntraRamp; 
@property (nonatomic,readonly) bool isTileEdgeJunction; 
@property (assign,nonatomic) bool isRouteRefineJunction;                         //@synthesize isRouteRefineJunction=_isRouteRefineJunction - In the implementation block
@property (nonatomic,readonly) bool isRoadTerminus; 
@property (nonatomic,readonly) bool isIntersection; 
@property (nonatomic,readonly) bool isMultiRoadIntersection; 
@property (nonatomic,readonly) bool isAwayFromRoute; 
@property (nonatomic,readonly) bool isOffRouteGraph; 
@property (nonatomic,readonly) bool isOverpass;                                  //@synthesize isOverpass=_isOverpass - In the implementation block
@property (assign,nonatomic) bool isRouteOverpass;                               //@synthesize isRouteOverpass=_isRouteOverpass - In the implementation block
@property (nonatomic,readonly) int largestRoadClass; 
@property (assign,nonatomic) unsigned long long depthFromRoute;                  //@synthesize depthFromRoute=_depthFromRoute - In the implementation block
@property (assign,nonatomic) VKLabelNavJunction * overpassJunction;              //@synthesize overpassJunction=_overpassJunction - In the implementation block
@property (nonatomic,readonly) double worldUnitsPerMeter;                        //@synthesize worldUnitsPerMeter=_worldUnitsPerMeter - In the implementation block
@property (nonatomic,readonly) NSString * name;                                  //@synthesize name=_name - In the implementation block
@property (nonatomic,readonly) VKLabelNavRoadLabel * junctionSign;               //@synthesize junctionSign=_junctionSign - In the implementation block
@property (nonatomic,readonly) int requiredLabelPlacement; 
@property (assign,nonatomic) int preferredLabelPlacement;                        //@synthesize preferredLabelPlacement=_preferredLabelPlacement - In the implementation block
@property (nonatomic,readonly) bool isRamp; 
@property (nonatomic,readonly) NSString * shieldDisplayGroup; 
@property (nonatomic,readonly) bool isStartOfRoadName; 
@property (nonatomic,readonly) bool isInGuidance; 
@property (nonatomic,readonly) long long intraRoadPriority; 
@property (nonatomic,readonly) bool isGuidanceStepStart; 
-(void)dealloc;
-(id)description;
-(id)name;
-(id).cxx_construct;
-(PolylineCoordinate)routeOffset;
-(id)tile;
-(void)setRouteOffset:(PolylineCoordinate)arg1 ;
-(bool)isRamp;
-(bool)isAwayFromRoute;
-(double)worldUnitsPerMeter;
-(bool)isMultiRoadIntersection;
-(bool)isOnRoute;
-(id)outgoingRoad;
-(id)incomingRoad;
-(id)shieldDisplayGroup;
-(bool)isStartOfRoadName;
-(bool)isInGuidance;
-(long long)intraRoadPriority;
-(bool)isGuidanceStepStart;
-(void)createLabelWithNavContext:(NavContext*)arg1 isDrivingSideRight:(bool)arg2 ;
-(id)junctionSign;
-(id)roads;
-(void)evaluateCrossStreets;
-(void)setDepthFromRoute:(unsigned long long)arg1 ;
-(bool)isOverpass;
-(bool)isIntraRamp;
-(void)setIsRouteOverpass:(bool)arg1 ;
-(void)evaluateCrossStreetsUsingRouteJunction:(id)arg1 ;
-(bool)isOnDualCarriageway;
-(int)requiredLabelPlacement;
-(void)setPreferredLabelPlacement:(int)arg1 ;
-(Vec2Imp<float>)tileCoordinate;
-(void)findRoads;
-(bool)isIntersection;
-(long long)_signOrientationWithDrivingSide:(bool)arg1 ;
-(VKPoint)_anchorCoordinateForSignOrientation:(long long)arg1 ;
-(id)initWithGEOJunction:(SCD_Struct_VK217*)arg1 routeOffset:(PolylineCoordinate)arg2 tile:(id)arg3 ;
-(id)initWithRoadEdge:(const SCD_Struct_VK220*)arg1 atA:(bool)arg2 routeOffset:(PolylineCoordinate)arg3 tile:(id)arg4 ;
-(bool)matchesLocationForJunction:(id)arg1 ;
-(bool)isTileEdgeJunction;
-(bool)isRoadTerminus;
-(bool)isOffRouteGraph;
-(int)largestRoadClass;
-(void)addRouteEdge:(const VKLabelNavRouteRoadEdge*)arg1 atA:(bool)arg2 ;
-(void)setSharedRouteDirection:(Vec2Imp<float>)arg1 ;
-(const SCD_Struct_VK217*)geoJunction;
-(int)preferredLabelPlacement;
-(float)distanceFromPreviousShieldLabel;
-(void)setDistanceFromPreviousShieldLabel:(float)arg1 ;
-(void)setIsOnDualCarriageway:(bool)arg1 ;
-(bool)hasSharedRouteDirection;
-(Vec2Imp<float>)sharedRouteDirection;
-(unsigned long long)depthFromRoute;
-(id)overpassJunction;
-(void)setOverpassJunction:(id)arg1 ;
-(bool)isRouteOverpass;
-(bool)isRouteRefineJunction;
-(void)setIsRouteRefineJunction:(bool)arg1 ;
@end

