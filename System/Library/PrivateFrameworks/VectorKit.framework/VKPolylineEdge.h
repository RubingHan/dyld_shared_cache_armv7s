/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:03:11 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <VectorKit/VectorKit-Structs.h>
@interface VKPolylineEdge : NSObject {

	VKEdgeInsets _localBounds;
	shared_ptr<geo::MapEdge>* _mapEdge;
	vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float> > >* _points;
	vector<geo::PolylineCoordinate, vk_allocator<geo::PolylineCoordinate> >* _routeOffsets;
	unsigned long long _mapEdgeOffset;
	bool _clippedFront;
	bool _clippedBack;

}

@property (nonatomic,readonly) shared_ptr<geo::MapEdge>* mapEdge;              //@synthesize mapEdge=_mapEdge - In the implementation block
@property (nonatomic,readonly) SCD_Struct_VK108* feature; 
@property (nonatomic,readonly) Vec2Imp<float>* points; 
@property (nonatomic,readonly) unsigned long long pointCount; 
@property (nonatomic,readonly) PolylineCoordinate routeOffsetA; 
@property (nonatomic,readonly) PolylineCoordinate routeOffsetB; 
@property (nonatomic,readonly) PolylineCoordinate* routeOffsets; 
@property (nonatomic,readonly) unsigned long long mapEdgeOffset;               //@synthesize mapEdgeOffset=_mapEdgeOffset - In the implementation block
@property (nonatomic,readonly) bool clippedFront;                              //@synthesize clippedFront=_clippedFront - In the implementation block
@property (nonatomic,readonly) bool clippedBack;                               //@synthesize clippedBack=_clippedBack - In the implementation block
-(void)dealloc;
-(id)description;
-(id).cxx_construct;
-(void).cxx_destruct;
-(unsigned long long)pointCount;
-(Vec2Imp<float>*)points;
-(SCD_Struct_VK108*)feature;
-(PolylineCoordinate)routeOffsetA;
-(PolylineCoordinate)routeOffsetB;
-(id)initWithRoadPath:(const RoadPathElement<std::__1::shared_ptr<geo::MapEdge> >*)arg1 sectionRect:(const VKEdgeInsets*)arg2 ;
-(void)calculateRouteOffsetsBetweenA:(PolylineCoordinate)arg1 andB:(PolylineCoordinate)arg2 overLength:(float)arg3 onRoute:(id)arg4 ;
-(PolylineCoordinate*)routeOffsets;
-(shared_ptr<geo::MapEdge>*)mapEdge;
-(unsigned long long)mapEdgeOffset;
-(bool)clippedFront;
-(bool)clippedBack;
@end

