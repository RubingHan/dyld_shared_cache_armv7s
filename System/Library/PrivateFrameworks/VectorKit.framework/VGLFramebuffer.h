/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:03:12 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@class VGLContext, VGLScreenCanvas, VGLTexture;

@interface VGLFramebuffer : NSObject {

	VGLContext* _context;
	VGLScreenCanvas* _canvas;
	unsigned _framebuffer;
	unsigned _renderbuffer;
	unsigned _depthbuffer;
	unsigned _multisampleFramebuffer;
	unsigned _multisampleRenderbuffer;
	unsigned _multisampleDepthbuffer;
	int _width;
	int _height;
	bool _createdWithDepth;
	bool _createdWithStencil;
	bool _isPresentable;
	bool _multisampleModeCurrent;
	bool _multisampleModeNext;
	VGLTexture* _texture;
	bool _usingMagicFramebuffer;
	int _magicFramebufferToken;

}

@property (nonatomic,readonly) bool isPresentable;                  //@synthesize isPresentable=_isPresentable - In the implementation block
@property (nonatomic,readonly) int width;                           //@synthesize width=_width - In the implementation block
@property (nonatomic,readonly) int height;                          //@synthesize height=_height - In the implementation block
@property (assign,nonatomic) bool useMultisampling; 
@property (assign,nonatomic) VGLContext * context;                  //@synthesize context=_context - In the implementation block
@property (assign,nonatomic) VGLScreenCanvas * canvas;              //@synthesize canvas=_canvas - In the implementation block
@property (nonatomic,readonly) unsigned framebuffer;                //@synthesize framebuffer=_framebuffer - In the implementation block
-(void)dealloc;
-(id)context;
-(void)setContext:(id)arg1 ;
-(int)width;
-(int)height;
-(id)canvas;
-(void)setUseMultisampling:(bool)arg1 ;
-(void)deleteUnusedFramebuffers;
-(void)preloadMultisampleFramebuffer;
-(id)initWithContext:(id)arg1 canvas:(id)arg2 depth:(bool)arg3 stencil:(bool)arg4 multisampling:(bool)arg5 ;
-(void)setCanvas:(id)arg1 ;
-(void)deleteResolveFramebuffers;
-(bool)useMultisampling;
-(bool)isPresentable;
-(void)makeTarget;
-(bool)_createResolveFramebuffer;
-(bool)_createSecondaryFramebufferWithDepth:(bool)arg1 stencil:(bool)arg2 ;
-(id)initWithContext:(id)arg1 canvas:(id)arg2 ;
-(void)_deallocResolveFramebuffer;
-(void)_deallocSecondaryFramebuffer;
-(void)_deallocMultisampleFramebuffer;
-(bool)_createMultisampleFramebufferWithDepth:(bool)arg1 stencil:(bool)arg2 ;
-(void)_bindFramebuffers;
-(id)initWithContext:(id)arg1 texture:(id)arg2 depth:(bool)arg3 stencil:(bool)arg4 ;
-(void)deleteFramebuffers;
-(unsigned)framebuffer;
-(void)finalize;
@end

