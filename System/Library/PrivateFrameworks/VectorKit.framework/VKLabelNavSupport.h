/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:03:13 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <VectorKit/VectorKit-Structs.h>
@class VKPolylineOverlayPainter, NSString, NSMutableSet, NSMutableArray, VKLabelNavRoadGraph, NSMutableDictionary;

@interface VKLabelNavSupport : NSObject {

	bool _needsLayout;
	bool _drawRoadSigns;
	VKPolylineOverlayPainter* _route;
	NSString* _currentLocationText;
	bool _isOnRoute;
	PolylineCoordinate _routeUserOffset;
	unsigned long long _stepIndex;
	bool _checkOnRouteLabelsAlignment;
	bool _disableTileParseForOneLayout;
	NSMutableSet* _tiles;
	NSMutableSet* _pendingTiles;
	NSMutableArray* _junctions;
	VKLabelNavRoadGraph* _roadGraph;
	vector<std::__1::shared_ptr<vk::NavLabel>, vk_allocator<std::__1::shared_ptr<vk::NavLabel> > >* _activeSigns;
	NSMutableArray* _fadingLabels;
	NSMutableDictionary* _visibleLabelsByName;
	NSMutableArray* _visibleLabels;
	unsigned long long _countVisibleRoadSigns;
	unsigned long long _countVisibleOnRouteRoadSigns;
	unsigned long long _maxVisibleRoadSigns;
	unsigned long long _minVisibleOnRouteRoadSigns;
	unsigned long long _maxOnRoadGraphRoadSigns;
	unsigned long long _minVisibleRoadSigns;
	unsigned long long _minVisibleProceedToRouteRoadSigns;
	bool _preferRightSideLabelPlacement;
	float _minSignOffsetDistance;
	NSMutableSet* _roadNamesInGuidance;
	NSMutableArray* _guidanceStepInfos;
	NSMutableArray* _routeRoadInfos;
	NSString* _currentRoadName;
	long long _currentRoadNameIndex;
	NSString* _currentShieldGroup;
	bool _checkIfRouteSubrangeChanged;
	bool _useRouteSubrange;
	PolylineCoordinate _routeSubrangeStart;
	PolylineCoordinate _routeSubrangeEnd;

}

@property (assign,nonatomic) bool drawRoadSigns;                                                          //@synthesize drawRoadSigns=_drawRoadSigns - In the implementation block
@property (nonatomic,retain) VKPolylineOverlayPainter * route;                                            //@synthesize route=_route - In the implementation block
@property (nonatomic,retain) NSString * currentLocationText;                                              //@synthesize currentLocationText=_currentLocationText - In the implementation block
@property (nonatomic,retain) NSString * currentRoadName;                                                  //@synthesize currentRoadName=_currentRoadName - In the implementation block
@property (nonatomic,retain) NSString * currentShieldGroup;                                               //@synthesize currentShieldGroup=_currentShieldGroup - In the implementation block
@property (assign,nonatomic) PolylineCoordinate routeUserOffset;                                          //@synthesize routeUserOffset=_routeUserOffset - In the implementation block
@property (nonatomic,readonly) const vector<std::__1::shared_ptr<vk::NavLabel>* activeSigns;              //@synthesize activeSigns=_activeSigns - In the implementation block
@property (nonatomic,readonly) bool needsLayout;                                                          //@synthesize needsLayout=_needsLayout - In the implementation block
-(void)setRoute:(id)arg1 ;
-(id)route;
-(void)dealloc;
-(id)init;
-(bool)needsLayout;
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)setStylesheet:(id)arg1 ;
-(PolylineCoordinate)routeUserOffset;
-(void)setRouteUserOffset:(PolylineCoordinate)arg1 ;
-(void)setCurrentLocationText:(id)arg1 ;
-(void)clearSceneIsMemoryWarning:(bool)arg1 ;
-(void)grabTilesFromScene:(id)arg1 ;
-(void)layoutWithNavContext:(NavContext*)arg1 ;
-(const vector<std::__1::shared_ptr<vk::NavLabel>, vk_allocator<std::__1::shared_ptr<vk::NavLabel> > >*)activeSigns;
-(unsigned char)computeRoutePositionMaskForPOIAtPixel:(const Vec2Imp<float>*)arg1 currentPositionMask:(unsigned char)arg2 context:(NavContext*)arg3 ;
-(void)_refreshGuidanceRoadNames;
-(void)_updateRoadsInGuidance;
-(void)_updateCurrentRoadInfo;
-(void)setCurrentRoadName:(id)arg1 ;
-(void)setCurrentShieldGroup:(id)arg1 ;
-(void)_tryAddLabel:(id)arg1 navContext:(NavContext*)arg2 labelCollisionEnabled:(bool)arg3 ;
-(void)_createOrUpdateLabelForRoad:(id)arg1 isShield:(bool)arg2 navContext:(NavContext*)arg3 ;
-(bool)_collideLabel:(id)arg1 activeLabel:(id)arg2 labelsToRemove:(id)arg3 ;
-(bool)_updateActiveRouteRange;
-(void)_reloadRouteJunctions;
-(bool)_addJunctionsForTile:(id)arg1 ;
-(void)_addLabelsAtJunctions:(id)arg1 withContext:(NavContext*)arg2 maxVisibleLabels:(unsigned long long)arg3 minOnRouteVisibleLabels:(unsigned long long)arg4 ;
-(void)_addLabelsForJunctions:(id)arg1 withContext:(NavContext*)arg2 maxVisibleLabels:(unsigned long long)arg3 minOnRouteVisibleLabels:(unsigned long long)arg4 useAllJunctions:(bool)arg5 placeShieldsFrontToBack:(bool)arg6 ;
-(void)_tryAddRoadSignForJunction:(id)arg1 navContext:(NavContext*)arg2 labelCollisionEnabled:(bool)arg3 ;
-(void)_tryAddRoadSignForRoad:(id)arg1 isShield:(bool)arg2 navContext:(NavContext*)arg3 labelCollisionEnabled:(bool)arg4 ;
-(void)_updateRoadStarts;
-(void)_updatePreferredLabelPlacements;
-(void)_initalizeCurrentRoadInfo;
-(void)_updateUniqueOffRouteRoads;
-(id)currentRoadName;
-(bool)_findRouteOverlappingJunctionFrom:(long long)arg1 routeJunctions:(vector<RouteJunctionInfo, vk_allocator<RouteJunctionInfo> >*)arg2 lookBackward:(bool)arg3 firstOverlap:(long long*)arg4 secondOverlap:(long long*)arg5 ;
-(bool)isNavMode;
-(bool)drawRoadSigns;
-(void)setDrawRoadSigns:(bool)arg1 ;
-(id)currentLocationText;
-(id)currentShieldGroup;
@end

