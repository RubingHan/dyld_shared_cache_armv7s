/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:03:14 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <VectorKit/VectorKit-Structs.h>
@class NSMutableSet, NSMutableDictionary, NSMutableArray;

@interface VKLabelNavRoadGraph : NSObject {

	NSMutableSet* _tiles;
	NSMutableSet* _duplicateTiles;
	NSMutableDictionary* _tileDatasByIndex;
	NSMutableArray* _junctions;
	NSMutableArray* _intersections;
	bool _oppositeCarriagewayJunctionsValid;
	NSMutableArray* _oppositeCarriagewayJunctions;
	Vec2Imp<float> _unitHeading;
	bool _offRouteJunctionsValid;
	BRectImp<double> _offRouteJunctionSelectRect;
	NSMutableArray* _offRouteJunctions;
	PolylineCoordinate _routeUserOffset;
	bool _routeFeatureMapValid;
	unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, vk_allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature> > > >* _routeFeatureMap;
	bool _simplifiedRouteValid;
	vector<geo::Vec2Imp<double>, vk_allocator<geo::Vec2Imp<double> > >* _simplifiedRoutePoints;
	unsigned long long _currentRoadStartSimplifiedPointIndex;
	bool _screenRouteValid;
	vector<RouteSegment, vk_allocator<RouteSegment> >* _screenRouteSegments;
	unsigned long long _firstPOIAligningRouteSegment;

}

@property (nonatomic,retain) NSMutableArray * junctions;              //@synthesize junctions=_junctions - In the implementation block
-(unsigned char)computeRoutePositionMaskForPOIAtPixel:(const Vec2Imp<float>*)arg1 currentPositionMask:(unsigned char)arg2 context:(NavContext*)arg3 ;
-(bool)isPriorRouteCollinearWithRoad:(id)arg1 distance:(float)arg2 ;
-(bool)collideRouteWithLabel:(id)arg1 routeCrossProduct:(float*)arg2 context:(NavContext*)arg3 ;
-(bool)isOnScreenRouteBackwardsAtJunction:(id)arg1 navContext:(NavContext*)arg2 ;
-(bool)prepareOppositeCarriagewayJunctions;
-(id)oppositeCarriagewayJunctions;
-(unsigned long long)countReadyJunctionLists;
-(id)junctionListForDepth:(unsigned long long)arg1 ;
-(id)offRouteGraphJunctionsWithNavContext:(NavContext*)arg1 maxJunctions:(unsigned long long)arg2 isOnRoute:(bool)arg3 ;
-(void)addRouteRoadEdge:(const VKLabelNavRouteRoadEdge*)arg1 atA:(bool)arg2 isRouteRefineJunction:(bool)arg3 tile:(id)arg4 junctionList:(id)arg5 ;
-(id)overpassJunctionForJunction:(id)arg1 ;
-(void)evaluateDualCarriagewayForJunction:(id)arg1 outputJunctionList:(id)arg2 ;
-(bool)_checkIfDualCarriageWayConnectorRoad:(id)arg1 fromJunction:(id)arg2 toJunction:(id)arg3 checkShields:(bool)arg4 ;
-(void)_updateIntersectionsForDepth:(unsigned long long)arg1 ;
-(void)_findOffRouteJunctions;
-(void)_updateSimplifiedRoute;
-(void)_transformRouteToScreenWithContext:(NavContext*)arg1 ;
-(void)dealloc;
-(id).cxx_construct;
-(void)reset;
-(void).cxx_destruct;
-(id)nextRoadSegmentForRoad:(id)arg1 ;
-(id)junctionForRoad:(id)arg1 nearJunction:(bool)arg2 crossTileEdge:(bool)arg3 ;
-(id)initWithJunctions:(id)arg1 ;
-(void)setTiles:(id)arg1 ;
-(void)routeJunctionsHaveChanged;
-(void)startingLabelLayoutWithContext:(NavContext*)arg1 routeUserOffset:(PolylineCoordinate)arg2 ;
-(id)junctions;
-(id)_junctionForRoadEdge:(const SCD_Struct_VK220*)arg1 atA:(bool)arg2 routeOffset:(PolylineCoordinate)arg3 tile:(id)arg4 ;
-(id)_findInterTileJunctionForJunction:(id)arg1 ;
-(id)_nextIntersectionForRoad:(id)arg1 ;
-(void)setJunctions:(id)arg1 ;
@end

