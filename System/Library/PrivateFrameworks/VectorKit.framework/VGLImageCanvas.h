/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:03:12 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <VectorKit/VGLCanvas.h>

@class VGLContext, VGLFramebuffer, VGLTexture;

@interface VGLImageCanvas : NSObject <VGLCanvas> {

	VGLContext* _targetContext;
	VGLFramebuffer* _targetFramebuffer;
	VGLTexture* _targetTexture;
	CGSize _size;
	double _contentScale;
	bool _useDepthBuffer;
	bool _useStencilBuffer;
	VGLColor _glClearColor;
	bool _canMakeImage;
	bool _recreateFramebuffer;

}

@property (assign,nonatomic) bool useDepthBuffer;                    //@synthesize useDepthBuffer=_useDepthBuffer - In the implementation block
@property (assign,nonatomic) bool useStencilBuffer;                  //@synthesize useStencilBuffer=_useStencilBuffer - In the implementation block
@property (assign,nonatomic) bool useMultisampling; 
@property (assign,nonatomic) VGLColor glClearColor;                  //@synthesize glClearColor=_glClearColor - In the implementation block
@property (assign,nonatomic) CGSize size;                            //@synthesize size=_size - In the implementation block
@property (assign,nonatomic) double contentScale;                    //@synthesize contentScale=_contentScale - In the implementation block
@property (nonatomic,readonly) CGSize sizeInPixels; 
@property (nonatomic,readonly) VGLContext * vglContext;              //@synthesize targetContext=_targetContext - In the implementation block
+(Class)contextClass;
+(void*)bitmapData:(unsigned long long*)arg1 fromTexture:(id)arg2 ;
+(CGImageRef)newImageFromTargetTexture:(id)arg1 ;
-(void)dealloc;
-(CGSize)size;
-(void)setSize:(CGSize)arg1 ;
-(id).cxx_construct;
-(void)setContentScale:(double)arg1 ;
-(double)contentScale;
-(void)_destroyFramebuffer;
-(void)setUseMultisampling:(bool)arg1 ;
-(id)vglContext;
-(void)_createFramebuffer;
-(void)willDrawView;
-(void)didDrawView;
-(CGSize)sizeInPixels;
-(void)setGlClearColor:(VGLColor)arg1 ;
-(bool)useMultisampling;
-(bool)useDepthBuffer;
-(void)setUseDepthBuffer:(bool)arg1 ;
-(bool)useStencilBuffer;
-(void)setUseStencilBuffer:(bool)arg1 ;
-(VGLColor)glClearColor;
-(CGImageRef)newImage;
-(id)initWithSize:(CGSize)arg1 scale:(double)arg2 context:(id)arg3 ;
-(void*)bitmapData:(unsigned long long*)arg1 ;
@end

