/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:03:08 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <QuartzCore/CALayer.h>
#import <VectorKit/VKInteractiveMapDelegate.h>

@protocol VKMapViewDelegate;
@class VKMapCanvas, VKClassicGlobeCanvas, NSString, VKAnimation, CADisplay, GEOMapRegion, VKLabelMarker, NSArray, VKPolylineOverlayPainter;

@interface VKMapView : CALayer <VKInteractiveMapDelegate> {

	long long _mapType;
	VKMapCanvas* _canvas;
	VKClassicGlobeCanvas* _globe;
	<VKMapViewDelegate>* _mapDelegate;
	bool _loaderOpen;
	NSString* _tileLoaderClientID;
	long long _mapDisplayStyle;
	VKAnimation* _mapDisplayStyleAnimation;
	VKAnimation* _edgeInsetAnimation;
	VKEdgeInsets _animatingToEdgeInsets;
	bool _isChangingMapType;

}

@property (nonatomic,readonly) VKMapCanvas * mapCanvas; 
@property (assign,nonatomic) bool shouldLoadFallbackTiles; 
@property (assign,nonatomic) bool shouldLoadMapMargin; 
@property (assign,nonatomic) <VKMapViewDelegate> * mapDelegate;                                                  //@synthesize mapDelegate=_mapDelegate - In the implementation block
@property (assign,nonatomic) bool staysCenteredDuringPinch; 
@property (assign,nonatomic) bool staysCenteredDuringRotation; 
@property (assign,nonatomic) bool useTimerDisplayLink; 
@property (nonatomic,retain) CADisplay * hostDisplay; 
@property (assign,nonatomic) bool isPitchable; 
@property (getter=isPitched,nonatomic,readonly) bool pitched; 
@property (getter=isFullyPitched,nonatomic,readonly) bool fullyPitched; 
@property (nonatomic,readonly) bool canEnter3DMode; 
@property (getter=isShowingFlyover,nonatomic,readonly) bool showingFlyover; 
@property (nonatomic,readonly) bool canShowFlyover; 
@property (assign,nonatomic) bool trafficEnabled; 
@property (assign,nonatomic) long long displayRate; 
@property (assign,nonatomic) bool localizeLabels; 
@property (assign,nonatomic) long long labelScaleFactor; 
@property (assign,nonatomic) bool dynamicMapModesEnabled; 
@property (assign,nonatomic) long long mapType; 
@property (assign,nonatomic) long long mapDisplayStyle; 
@property (nonatomic,readonly) double minimumZoomLevel; 
@property (nonatomic,readonly) double maximumZoomLevel; 
@property (nonatomic,readonly) double currentZoomLevel; 
@property (assign,nonatomic) long long targetDisplay; 
@property (assign,getter=isLabelMarkerSelectionEnabled,nonatomic) bool labelMarkerSelectionEnabled; 
@property (assign,nonatomic) long long shieldSize; 
@property (assign,nonatomic) long long navigationShieldSize; 
@property (assign,nonatomic) long long shieldIdiom; 
@property (assign,nonatomic) bool showsPointsOfInterest; 
@property (assign,nonatomic) bool showsBuildings; 
@property (assign,nonatomic) VKEdgeInsets edgeInsets; 
@property (assign,nonatomic) VKEdgeInsets fullyOccludedEdgeInsets; 
@property (assign,nonatomic) VKEdgeInsets labelEdgeInsets; 
@property (nonatomic,retain) GEOMapRegion * mapRegion; 
@property (nonatomic,readonly) GEOMapRegion * mapRegionOfInterest; 
@property (nonatomic,readonly) double yaw; 
@property (nonatomic,readonly) double presentationYaw; 
@property (nonatomic,readonly) double pitch; 
@property (nonatomic,readonly) double altitude; 
@property (assign,nonatomic) VKPoint centerCoordinate; 
@property (assign,nonatomic) bool allowDatelineWraparound; 
@property (assign,getter=isGesturing,nonatomic) bool gesturing; 
@property (assign,nonatomic) bool iconsShouldAlignToPixels; 
@property (getter=isFullyDrawn,nonatomic,readonly) bool fullyDrawn; 
@property (assign,nonatomic) int trackingCameraPanStyle; 
@property (assign,nonatomic) double trackingZoomScale; 
@property (assign,nonatomic) long long annotationTrackingZoomStyle; 
@property (getter=isAnimatingToTrackAnnotation,nonatomic,readonly) bool animatingToTrackAnnotation; 
@property (nonatomic,readonly) bool canShowAnimationForPlaceCard; 
@property (nonatomic,readonly) VKLabelMarker * selectedLabelMarker; 
@property (nonatomic,readonly) NSArray * annotationMarkers; 
@property (nonatomic,readonly) NSArray * labelMarkers; 
@property (nonatomic,retain) VKPolylineOverlayPainter * focusedLabelsPolylinePainter; 
@property (nonatomic,retain) NSArray * externalTrafficIncidents; 
@property (nonatomic,retain) <VKRoutePreloadSession> * routePreloadSession; 
@property (assign,nonatomic) bool rendersInBackground; 
@property (assign,nonatomic) bool debugPaintFrameRateGraph; 
@property (assign,nonatomic) bool debugDrawContinuously; 
@property (assign,nonatomic) bool debugLayoutContinuously; 
@property (assign,nonatomic) bool debugEnableMultisampling; 
@property (nonatomic,readonly) float debugFramesPerSecond; 
@property (nonatomic,readonly) bool enableDebugLabelHighlighting; 
@property (nonatomic,readonly) NSArray * visibleTileSets; 
@property (nonatomic,readonly) bool isMotionControlActive; 
@property (assign,nonatomic) double userZoomFocusStyleGroundspanMeters; 
@property (assign,nonatomic) double userZoomFocusStyleMinGroundspanMeters; 
@property (assign,nonatomic) double userZoomFocusStyleMaxGroundspanMeters; 
+(id)installedStylesheetNames;
-(void)_mapkit_configureFromDefaults:(bool)arg1 ;
-(void)_setMaximumZoomLevel:(double)arg1 ;
-(void)_resetMaximumZoomLevel;
-(id)mapCanvas;
-(void)dealloc;
-(void)setNeedsDisplay;
-(void)setNeedsLayout;
-(void)setHidden:(bool)arg1 ;
-(void)setBounds:(CGRect)arg1 ;
-(VKEdgeInsets)edgeInsets;
-(void)setContentsScale:(double)arg1 ;
-(void)forceLayout;
-(id).cxx_construct;
-(void)setEdgeInsets:(VKEdgeInsets)arg1 ;
-(void)willEnterForeground;
-(void)didEnterBackground;
-(double)altitude;
-(bool)allowDatelineWraparound;
-(void)setAllowDatelineWraparound:(bool)arg1 ;
-(bool)isGesturing;
-(void)setGesturing:(bool)arg1 ;
-(VKEdgeInsets)labelEdgeInsets;
-(void)setLabelEdgeInsets:(VKEdgeInsets)arg1 ;
-(id)currentCanvas;
-(void)setLabelMarkerSelectionEnabled:(bool)arg1 ;
-(void)forceSceneLoad;
-(long long)mapType;
-(id)visibleTileSets;
-(id)attributionsForCurrentRegion;
-(bool)isShowingNoDataPlaceholders;
-(void)setStylesheetName:(id)arg1 ;
-(id)stylesheet;
-(void)setStylesheet:(id)arg1 ;
-(long long)targetDisplay;
-(void)setTargetDisplay:(long long)arg1 ;
-(bool)trafficEnabled;
-(void)setTrafficEnabled:(bool)arg1 ;
-(long long)displayRate;
-(void)setDisplayRate:(long long)arg1 ;
-(void)resetContext;
-(bool)currentZoomLevelAllowsRotation;
-(void)setStaysCenteredDuringPinch:(bool)arg1 ;
-(bool)localizeLabels;
-(void)setLocalizeLabels:(bool)arg1 ;
-(long long)labelScaleFactor;
-(void)setLabelScaleFactor:(long long)arg1 ;
-(bool)staysCenteredDuringPinch;
-(void)setStaysCenteredDuringRotation:(bool)arg1 ;
-(bool)staysCenteredDuringRotation;
-(void)setIsPitchable:(bool)arg1 ;
-(bool)isPitchable;
-(bool)debugPaintFrameRateGraph;
-(void)setDebugPaintFrameRateGraph:(bool)arg1 ;
-(bool)debugEnableMultisampling;
-(void)setDebugEnableMultisampling:(bool)arg1 ;
-(float)debugFramesPerSecond;
-(void)debugShowTourJump:(bool)arg1 ;
-(void)clearScene;
-(bool)useTimerDisplayLink;
-(void)setUseTimerDisplayLink:(bool)arg1 ;
-(id)hostDisplay;
-(void)setHostDisplay:(id)arg1 ;
-(void)debugHighlightLabelAtPoint:(CGPoint)arg1 ;
-(void)setShouldLoadFallbackTiles:(bool)arg1 ;
-(bool)shouldLoadFallbackTiles;
-(void)setShouldLoadMapMargin:(bool)arg1 ;
-(bool)shouldLoadMapMargin;
-(id)detailedDescription;
-(bool)iconsShouldAlignToPixels;
-(void)setIconsShouldAlignToPixels:(bool)arg1 ;
-(bool)canZoomInForTileSize:(long long)arg1 ;
-(bool)canZoomOutForTileSize:(long long)arg1 ;
-(double)minimumZoomLevel;
-(double)minimumZoomLevelForTileSize:(long long)arg1 ;
-(double)topDownMinimumZoomLevelForTileSize:(long long)arg1 ;
-(double)maximumZoomLevel;
-(double)maximumZoomLevelForTileSize:(long long)arg1 ;
-(double)currentZoomLevel;
-(double)currentZoomLevelForTileSize:(long long)arg1 ;
-(double)zoomLevelAdjustmentForTileSize:(long long)arg1 ;
-(long long)shieldSize;
-(void)setShieldSize:(long long)arg1 ;
-(long long)navigationShieldSize;
-(void)setNavigationShieldSize:(long long)arg1 ;
-(long long)shieldIdiom;
-(void)setShieldIdiom:(long long)arg1 ;
-(bool)showsPointsOfInterest;
-(void)setShowsPointsOfInterest:(bool)arg1 ;
-(bool)showsBuildings;
-(void)setShowsBuildings:(bool)arg1 ;
-(void)setDesiredMapMode:(long long)arg1 immediate:(bool)arg2 ;
-(bool)dynamicMapModesEnabled;
-(void)setDynamicMapModesEnabled:(bool)arg1 ;
-(void)setCanonicalSkyHeight:(double)arg1 ;
-(bool)rendersInBackground;
-(void)setRendersInBackground:(bool)arg1 ;
-(bool)supportsNightMode;
-(bool)canShowFlyover;
-(bool)isShowingFlyover;
-(void)_createGlobe;
-(void)_initializeGlobe;
-(long long)annotationTrackingZoomStyle;
-(void)setAnnotationTrackingZoomStyle:(long long)arg1 ;
-(void)setRouteUserOffset:(PolylineCoordinate)arg1 ;
-(id)externalTrafficIncidents;
-(void)setExternalTrafficIncidents:(id)arg1 ;
-(void)setAnnotationMarkerDeselectionCallback:(/*^block*/ id)arg1 ;
-(id)annotationMarkers;
-(void)removeAnnotationMarker:(id)arg1 ;
-(void)addAnnotationMarker:(id)arg1 allowAnimation:(bool)arg2 ;
-(void)selectAnnotationMarker:(id)arg1 ;
-(void)removePersistentOverlay:(id)arg1 ;
-(void)addPersistentOverlay:(id)arg1 ;
-(void)removeOverlay:(id)arg1 ;
-(void)addOverlay:(id)arg1 ;
-(void)setRouteLineSplitAnnotation:(id)arg1 ;
-(void)deselectLabelMarker;
-(void)stopTrackingAnnotation;
-(void)startTrackingAnnotation:(id)arg1 trackHeading:(bool)arg2 animated:(bool)arg3 ;
-(void)removeExternalAnchor:(id)arg1 ;
-(void)addExternalAnchor:(id)arg1 ;
-(void)setDisableLabels:(bool)arg1 ;
-(void)setDisableRoads:(bool)arg1 ;
-(void)setMapType:(long long)arg1 ;
-(bool)canEnter3DMode;
-(void)setMapDisplayStyle:(long long)arg1 animated:(bool)arg2 ;
-(id)secondaryCanvas;
-(double)_styleTransitionProgress;
-(void)_setStyleTransitionProgress:(double)arg1 targetStyle:(long long)arg2 step:(long long)arg3 ;
-(double)presentationYaw;
-(void)setMapRegion:(id)arg1 animated:(bool)arg2 ;
-(id)mapRegion;
-(id)mapRegionOfInterest;
-(id)consoleString:(bool)arg1 ;
-(void)setCenterCoordinate:(VKPoint)arg1 animated:(bool)arg2 ;
-(VKPoint)centerCoordinate;
-(void)setCenterCoordinate:(CGPoint)arg1 altitude:(double)arg2 yaw:(double)arg3 pitch:(double)arg4 duration:(double)arg5 timingCurve:(/*^block*/ id)arg6 completion:(/*^block*/ id)arg7 ;
-(void)openLoaderConnection;
-(void)closeLoaderConnection;
-(void)runAnimation:(id)arg1 ;
-(void)setYaw:(double)arg1 animated:(bool)arg2 ;
-(void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 animated:(bool)arg4 ;
-(void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 animated:(bool)arg4 completion:(/*^block*/ id)arg5 ;
-(void)animateToMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 completion:(/*^block*/ id)arg5 ;
-(double)durationToAnimateToMapRegion:(id)arg1 ;
-(CGPoint)convertPoint:(CGPoint)arg1 toCoordinateFromLayer:(id)arg2 ;
-(CGPoint)convertPoint:(CGPoint)arg1 toMapPointFromLayer:(id)arg2 ;
-(CGPoint)convertMapPoint:(CGPoint)arg1 toPointToLayer:(id)arg2 ;
-(CGPoint)convertCoordinate:(CGPoint)arg1 toPointToLayer:(id)arg2 ;
-(CGPoint)convertCoordinate:(CGPoint)arg1 toCameraModelPointToLayer:(id)arg2 ;
-(void)setEdgeInsets:(VKEdgeInsets)arg1 duration:(double)arg2 timingFunction:(id)arg3 completionHandler:(/*^block*/ id)arg4 ;
-(void)setFullyOccludedEdgeInsets:(VKEdgeInsets)arg1 ;
-(VKEdgeInsets)fullyOccludedEdgeInsets;
-(bool)canShowAnimationForSearchResultWithMapRegion:(id)arg1 ;
-(void)showSearchResultAnimationAtCoordinate:(CGPoint)arg1 withMapRegion:(id)arg2 ;
-(bool)canShowAnimationForPlaceCard;
-(void)startPlaceCardAnimationAtCoordinate:(CGPoint)arg1 andDistance:(double)arg2 ;
-(void)stopPlaceCardAnimation;
-(void)updateCameraContext:(id)arg1 ;
-(void)stopTracking;
-(void)pauseTracking;
-(void)transitionToTracking:(bool)arg1 mapMode:(long long)arg2 pounceCompletionHandler:(/*^block*/ id)arg3 ;
-(void)setShouldLimitTrackingCameraHeight:(bool)arg1 ;
-(void)setTrackingCameraPanStyle:(int)arg1 ;
-(int)trackingCameraPanStyle;
-(void)preloadNavigationSceneResources;
-(void)preloadNavigationSceneAnimationResourcesForDisplayStyle:(long long)arg1 ;
-(void)setRoutePreloadSession:(id)arg1 ;
-(id)routePreloadSession;
-(id)annotationMarkerForSelectionAtPoint:(CGPoint)arg1 avoidCurrent:(bool)arg2 ;
-(id)labelMarkerForSelectionAtPoint:(CGPoint)arg1 selectableLabelsOnly:(bool)arg2 ;
-(void)selectLabelMarker:(id)arg1 ;
-(void)enter3DMode;
-(void)exit3DMode;
-(bool)isPitched;
-(bool)isFullyPitched;
-(bool)isMotionControlActive;
-(void)startMotionControlWithProvider:(id)arg1 ;
-(void)stopMotionControl;
-(void)panWithOffset:(CGPoint)arg1 relativeToScreenPoint:(CGPoint)arg2 animated:(bool)arg3 duration:(double)arg4 completionHandler:(/*^block*/ id)arg5 ;
-(void)deselectAnnotationMarker:(id)arg1 ;
-(/*^block*/ id)annotationRectTest;
-(/*^block*/ id)annotationCoordinateTest;
-(bool)shouldHideOffscreenSelectedAnnotation;
-(id)selectedLabelMarker;
-(id)labelMarkers;
-(double)trackingZoomScale;
-(void)setTrackingZoomScale:(double)arg1 ;
-(bool)isAnimatingToTrackAnnotation;
-(void)setTracePlaybackSpeedMultiplier:(double)arg1 ;
-(void)addRasterOverlay:(id)arg1 ;
-(void)removeRasterOverlay:(id)arg1 ;
-(void)insertRasterOverlay:(id)arg1 aboveOverlay:(id)arg2 ;
-(void)insertRasterOverlay:(id)arg1 belowOverlay:(id)arg2 ;
-(void)setCurrentLocationText:(id)arg1 ;
-(id)viewportInfo;
-(bool)restoreViewportFromInfo:(id)arg1 ;
-(id)focusedLabelsPolylinePainter;
-(void)setFocusedLabelsPolylinePainter:(id)arg1 ;
-(void)zoomToLevel:(double)arg1 withFocusPoint:(CGPoint)arg2 ;
-(void)zoom:(double)arg1 withFocusPoint:(CGPoint)arg2 completionHandler:(/*^block*/ id)arg3 ;
-(void)startPinchingWithFocusPoint:(CGPoint)arg1 ;
-(void)updatePinchWithFocusPoint:(CGPoint)arg1 oldFactor:(double)arg2 newFactor:(double)arg3 ;
-(void)stopPinchingWithFocusPoint:(CGPoint)arg1 ;
-(void)startPanningAtPoint:(CGPoint)arg1 ;
-(void)updatePanWithTranslation:(CGPoint)arg1 ;
-(void)stopPanningAtPoint:(CGPoint)arg1 ;
-(void)didStartPanningDeceleration;
-(void)startRotatingWithFocusPoint:(CGPoint)arg1 ;
-(void)updateRotationWithFocusPoint:(CGPoint)arg1 newValue:(double)arg2 ;
-(void)stopRotatingWithFocusPoint:(CGPoint)arg1 ;
-(void)startPitchingWithFocusPoint:(CGPoint)arg1 ;
-(void)updatePitchWithFocusPoint:(CGPoint)arg1 translation:(double)arg2 ;
-(void)stopPitchingWithFocusPoint:(CGPoint)arg1 ;
-(bool)isPointValidForGesturing:(CGPoint)arg1 ;
-(void)stopSnappingAnimations;
-(void)setDisablePolygons:(bool)arg1 ;
-(void)setDisableBuildingFootprints:(bool)arg1 ;
-(void)setDisableRasters:(bool)arg1 ;
-(void)setDisableRealisticRoads:(bool)arg1 ;
-(void)setDisableRealisticLand:(bool)arg1 ;
-(void)setDisableGrid:(bool)arg1 ;
-(bool)isFullyDrawn;
-(void)goToTileX:(int)arg1 Y:(int)arg2 Z:(int)arg3 tileSize:(int)arg4 ;
-(void)puckAnimator:(id)arg1 updatedPosition:(SCD_Struct_VK52*)arg2 ;
-(void)puckAnimatorDidStop:(id)arg1 ;
-(void)puckAnimator:(id)arg1 updatedTargetPosition:(VKPoint)arg2 ;
-(bool)debugDynamicMapModesEnabled;
-(void)setDebugDynamicMapModesEnabled:(bool)arg1 ;
-(void)setUserZoomFocusStyleGroundspanMeters:(double)arg1 ;
-(double)userZoomFocusStyleGroundspanMeters;
-(void)setUserZoomFocusStyleMinGroundspanMeters:(double)arg1 ;
-(double)userZoomFocusStyleMinGroundspanMeters;
-(void)setUserZoomFocusStyleMaxGroundspanMeters:(double)arg1 ;
-(double)userZoomFocusStyleMaxGroundspanMeters;
-(void)setCameraHorizontalOffset:(double)arg1 duration:(double)arg2 timingFunction:(id)arg3 ;
-(void)mapDidChangeVisibleRegion:(id)arg1 ;
-(void)mapDidDraw:(id)arg1 ;
-(void)mapDidBecomePartiallyDrawn:(id)arg1 ;
-(void)mapDidBecomeFullyDrawn:(id)arg1 hasFailedTiles:(bool)arg2 ;
-(void)mapDidStartLoadingTiles:(id)arg1 ;
-(void)mapDidFinishLoadingTiles:(id)arg1 ;
-(void)mapDidFailLoadingTiles:(id)arg1 withError:(id)arg2 ;
-(void)mapDidFinishChangingMapDisplayStyle:(long long)arg1 ;
-(void)map:(id)arg1 willChangeRegionAnimated:(bool)arg2 ;
-(void)map:(id)arg1 didChangeRegionAnimated:(bool)arg2 ;
-(id)map:(id)arg1 presentationForAnnotation:(id)arg2 ;
-(void)map:(id)arg1 willAnimateInAnnotationMarkers:(id)arg2 ;
-(void)map:(id)arg1 didAnimateInAnnotationMarkers:(id)arg2 ;
-(void)map:(id)arg1 didFinishAddingAnnotationMarkers:(id)arg2 ;
-(id)map:(id)arg1 painterForOverlay:(id)arg2 ;
-(void)map:(id)arg1 didBecomePitched:(bool)arg2 ;
-(void)map:(id)arg1 canEnter3DModeDidChange:(bool)arg2 ;
-(void)map:(id)arg1 canZoomInDidChange:(bool)arg2 ;
-(void)map:(id)arg1 canZoomOutDidChange:(bool)arg2 ;
-(void)map:(id)arg1 canShowFlyoverDidChange:(bool)arg2 ;
-(void)map:(id)arg1 selectedLabelMarkerWillDisappear:(id)arg2 ;
-(void)map:(id)arg1 willTransitionFrom:(long long)arg2 to:(long long)arg3 duration:(double)arg4 ;
-(void)setMapDelegate:(id)arg1 ;
-(bool)isLabelMarkerSelectionEnabled;
-(id)stylesheetName;
-(bool)debugDrawContinuously;
-(void)setDebugDrawContinuously:(bool)arg1 ;
-(bool)debugLayoutContinuously;
-(void)setDebugLayoutContinuously:(bool)arg1 ;
-(void)debugRunPerformanceTestWithOutputHeader:(id)arg1 ;
-(bool)enableDebugLabelHighlighting;
-(bool)supportsMapType:(long long)arg1 ;
-(long long)mapDisplayStyle;
-(void)setMapDisplayStyle:(long long)arg1 ;
-(CGRect)mapRegionBounds;
-(void)setMapRegion:(id)arg1 ;
-(void)setCenterCoordinate:(VKPoint)arg1 ;
-(id)initWithGlobe:(bool)arg1 shouldRasterize:(bool)arg2 inBackground:(bool)arg3 ;
-(void)stopScenicAnimation;
-(void)preparePlaceCardAnimationForLocation:(CGPoint)arg1 completion:(/*^block*/ id)arg2 ;
-(void)setEnabledBlackRoadLines:(bool)arg1 ;
-(void)setDisableRoadClass:(bool)arg1 forRoadClass:(int)arg2 ;
-(bool)roadClassDisabled:(int)arg1 ;
-(bool)roadsDisabled;
-(bool)labelsDisabled;
-(bool)polygonsDisabled;
-(bool)buildingFootprintsDisabled;
-(bool)rastersDisabled;
-(bool)realisticRoadsDisabled;
-(bool)realisticLandDisabled;
-(bool)gridDisabled;
-(id)mapDelegate;
-(double)pitch;
-(double)yaw;
@end

