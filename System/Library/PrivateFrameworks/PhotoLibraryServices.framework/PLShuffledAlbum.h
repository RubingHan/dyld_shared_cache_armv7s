/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:02:10 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PhotoLibraryServices/PhotoLibraryServices-Structs.h>
#import <PhotoLibraryServices/PLAlbumProtocol.h>
#import <PhotoLibraryServices/PLIndexMappingCache.h>

@class PLManagedAsset, NSMutableOrderedSet, NSString, NSOrderedSet, NSArray, NSDate, NSNumber, UIImage, NSDictionary, NSURL;

@interface PLShuffledAlbum : NSObject <PLAlbumProtocol, PLIndexMappingCache> {

	CFArrayRef _toBackingMap;
	CFArrayRef _fromBackingMap;
	NSObject* _backingAlbum;
	PLManagedAsset* _startingAsset;
	NSMutableOrderedSet* _assets;

}

@property (nonatomic,readonly) <NSObject><NSCopying> * cachedIndexMapState; 
@property (nonatomic,readonly) PLManagedAsset * startingAsset; 
@property (nonatomic,readonly) NSObject<PLAlbumProtocol> * backingAlbum; 
@property (nonatomic,retain) NSMutableOrderedSet * _assets;                              //@synthesize assets=_assets - In the implementation block
@property (nonatomic,readonly) NSString * uuid; 
@property (nonatomic,readonly) NSString * title; 
@property (nonatomic,readonly) NSString * localizedTitle; 
@property (nonatomic,readonly) NSOrderedSet * assets; 
@property (nonatomic,readonly) unsigned long long approximateCount; 
@property (nonatomic,readonly) unsigned long long assetsCount; 
@property (nonatomic,readonly) unsigned long long photosCount; 
@property (nonatomic,readonly) unsigned long long videosCount; 
@property (nonatomic,readonly) bool isEmpty; 
@property (nonatomic,retain) PLManagedAsset * keyAsset; 
@property (nonatomic,retain) PLManagedAsset * secondaryKeyAsset; 
@property (nonatomic,retain) PLManagedAsset * tertiaryKeyAsset; 
@property (nonatomic,readonly) bool canShowComments; 
@property (nonatomic,readonly) bool canShowAvalancheStacks; 
@property (nonatomic,readonly) NSArray * localizedLocationNames; 
@property (nonatomic,readonly) NSDate * startDate; 
@property (nonatomic,readonly) NSDate * endDate; 
@property (nonatomic,readonly) NSNumber * kind; 
@property (nonatomic,readonly) int kindValue; 
@property (nonatomic,readonly) NSMutableOrderedSet * mutableAssets; 
@property (assign,nonatomic) bool hasUnseenContentBoolValue; 
@property (nonatomic,readonly) NSString * name; 
@property (nonatomic,readonly) UIImage * posterImage; 
@property (nonatomic,readonly) bool isLibrary; 
@property (nonatomic,readonly) bool isCameraAlbum; 
@property (nonatomic,readonly) bool isPanoramasAlbum; 
@property (nonatomic,readonly) bool isWallpaperAlbum; 
@property (nonatomic,readonly) bool isPhotoStreamAlbum; 
@property (nonatomic,readonly) bool isCloudSharedAlbum; 
@property (nonatomic,readonly) bool isPendingPhotoStreamAlbum; 
@property (nonatomic,readonly) bool isStandInAlbum; 
@property (nonatomic,readonly) bool isOwnedCloudSharedAlbum; 
@property (nonatomic,readonly) bool isMultipleContributorCloudSharedAlbum; 
@property (nonatomic,readonly) bool canContributeToCloudSharedAlbum; 
@property (nonatomic,readonly) bool shouldDeleteWhenEmpty; 
@property (nonatomic,retain) NSDictionary * slideshowSettings; 
@property (nonatomic,retain) NSString * importSessionID; 
@property (nonatomic,readonly) NSURL * groupURL; 
@property (nonatomic,readonly) id sortingComparator; 
@property (nonatomic,readonly) id sectioningComparator; 
@property (assign,nonatomic) int pendingItemsCount; 
@property (assign,nonatomic) int pendingItemsType; 
+(NSObject*)shuffledAlbum:(NSObject*)arg1 startingAsset:(id)arg2 ;
+(NSObject*)unshuffledAlbum:(NSObject*)arg1 ;
-(unsigned long long)countOfShuffledAssets;
-(unsigned long long)indexInShuffledAssetsOfObject:(id)arg1 ;
-(id)objectInShuffledAssetsAtIndex:(unsigned long long)arg1 ;
-(void)insertObject:(id)arg1 inShuffledAssetsAtIndex:(unsigned long long)arg2 ;
-(void)removeObjectFromShuffledAssetsAtIndex:(unsigned long long)arg1 ;
-(void)replaceObjectInShuffledAssetsAtIndex:(unsigned long long)arg1 withObject:(id)arg2 ;
-(CFArrayRef)fromBackingMap;
-(id)description;
-(bool)mappedDataSourceChanged:(id)arg1 remoteNotificationData:(id)arg2 ;
-(Class)derivedChangeNotificationClass;
-(id)cachedIndexMapState;
-(void)createShuffledIndexesMapsIfNeeded;
-(void)createShuffledIndexesMaps;
-(NSObject*)backingAlbum;
-(id)initWithBackingAlbum:(NSObject*)arg1 startingAsset:(id)arg2 ;
-(id)startingAsset;
-(void)dealloc;
-(unsigned long long)count;
-(id)init;
-(bool)isEmpty;
-(id)name;
-(id)title;
-(id)kind;
-(id)localizedTitle;
-(bool)isCameraAlbum;
-(int)kindValue;
-(bool)isCloudSharedAlbum;
-(id)titleForSectionStartingAtIndex:(unsigned long long)arg1 ;
-(id)displayableIndexesForCount:(unsigned long long)arg1 ;
-(void)reducePendingItemsCountBy:(unsigned long long)arg1 ;
-(void)batchFetchAssets:(id)arg1 ;
-(id)mutableAssets;
-(bool)hasUnseenContentBoolValue;
-(void)setHasUnseenContentBoolValue:(bool)arg1 ;
-(id)posterImage;
-(bool)isLibrary;
-(bool)isPanoramasAlbum;
-(bool)isWallpaperAlbum;
-(bool)isPhotoStreamAlbum;
-(bool)isPendingPhotoStreamAlbum;
-(bool)isStandInAlbum;
-(bool)isOwnedCloudSharedAlbum;
-(bool)isMultipleContributorCloudSharedAlbum;
-(bool)canContributeToCloudSharedAlbum;
-(bool)shouldDeleteWhenEmpty;
-(id)slideshowSettings;
-(void)setSlideshowSettings:(id)arg1 ;
-(id)importSessionID;
-(void)setImportSessionID:(id)arg1 ;
-(id)groupURL;
-(/*^block*/ id)sortingComparator;
-(/*^block*/ id)sectioningComparator;
-(int)pendingItemsCount;
-(void)setPendingItemsCount:(int)arg1 ;
-(int)pendingItemsType;
-(void)setPendingItemsType:(int)arg1 ;
-(bool)canPerformEditOperation:(int)arg1 ;
-(id)uuid;
-(id)assets;
-(unsigned long long)approximateCount;
-(unsigned long long)assetsCount;
-(unsigned long long)photosCount;
-(unsigned long long)videosCount;
-(id)keyAsset;
-(void)setKeyAsset:(id)arg1 ;
-(id)secondaryKeyAsset;
-(void)setSecondaryKeyAsset:(id)arg1 ;
-(id)tertiaryKeyAsset;
-(void)setTertiaryKeyAsset:(id)arg1 ;
-(bool)canShowComments;
-(bool)canShowAvalancheStacks;
-(id)localizedLocationNames;
-(void)set_assets:(id)arg1 ;
-(id)_assets;
@end

