/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:02:11 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PhotoLibraryServices/PLManagedObject.h>
#import <PhotoLibraryServices/PLAssetContainerList.h>

@class PLRevGeoCompoundNameInfo, NSString, NSDate, NSOrderedSet, NSData, NSArray;

@interface PLMomentList : PLManagedObject <PLAssetContainerList> {

	PLRevGeoCompoundNameInfo* _cachedPrimaryNameInfo;
	PLRevGeoCompoundNameInfo* _cachedSecondaryNameInfo;
	bool _loadedNameInfo;

}

@property (assign,nonatomic,@dynamic) short granularityLevel; 
@property (assign,nonatomic,@dynamic) int sortIndex; 
@property (nonatomic,@dynamic,retain) NSString * title; 
@property (nonatomic,@dynamic,retain) NSDate * startDate; 
@property (nonatomic,@dynamic,retain) NSDate * representativeDate; 
@property (nonatomic,@dynamic,retain) NSDate * endDate; 
@property (nonatomic,@dynamic,retain) NSOrderedSet * momentsForMegaMoment; 
@property (nonatomic,@dynamic,retain) NSOrderedSet * momentsForYear; 
@property (nonatomic,@dynamic,retain) NSData * reverseLocationData; 
@property (assign,nonatomic,@dynamic) bool reverseLocationDataIsValid; 
@property (nonatomic,readonly) NSString * localizedTitle; 
@property (nonatomic,readonly) NSArray * localizedLocationNames; 
@property (assign,nonatomic,@dynamic) short generationType; 
@property (nonatomic,retain) NSOrderedSet * moments; 
@property (nonatomic,readonly) unsigned long long containersCount; 
+(id)entityInManagedObjectContext:(id)arg1 ;
+(id)entityName;
+(id)findOrCreateYearMomentListForYear:(long long)arg1 inManagedObjectContext:(id)arg2 ;
+(id)allMomentListsRequiringAnalysisInManagedObjectContext:(id)arg1 forLevel:(short)arg2 error:(id*)arg3 ;
+(id)allMomentListsInManagedObjectContext:(id)arg1 forLevel:(short)arg2 error:(id*)arg3 ;
+(id)allMomentListsRequiringAnalysisInManagedObjectContext:(id)arg1 error:(id*)arg2 ;
+(id)allMomentListsInLibrary:(id)arg1 forLevel:(short)arg2 ;
+(id)descriptionForGranularityLevel:(short)arg1 ;
+(id)allMomentListsInManagedObjectContext:(id)arg1 forLevel:(short)arg2 error:(id*)arg3 returnsObjectsAsFaults:(bool)arg4 ;
+(id)allMomentListsInLibrary:(id)arg1 forLevel:(short)arg2 returnsObjectsAsFaults:(bool)arg3 ;
+(id)findOrCreateMegaMomentListForLeftoverMomentsInMonth:(long long)arg1 inYear:(long long)arg2 withDay:(long long)arg3 inManagedObjectContext:(id)arg4 ;
-(void)dealloc;
-(bool)isEmpty;
-(id)_typeDescription;
-(id)localizedTitle;
-(id)localizedLocationNames;
-(bool)supportsDiagnosticInformation;
-(id)diagnosticInformation;
-(void)delete;
-(void)awakeFromInsert;
-(bool)validateForInsert:(id*)arg1 ;
-(bool)validateForUpdate:(id*)arg1 ;
-(void)willSave;
-(void)didTurnIntoFault;
-(id)containers;
-(bool)canEditContainers;
-(id)containersRelationshipName;
-(unsigned long long)containersCount;
-(void)removeMomentsForMegaMomentObject:(id)arg1 ;
-(void)addMomentsForMegaMomentObject:(id)arg1 ;
-(bool)isMeaningful;
-(void)insertObject:(id)arg1 inMomentsForMegaMomentAtIndex:(unsigned long long)arg2 ;
-(id)moments;
-(void)addMomentsForMegaMoment:(id)arg1 ;
-(void)removeMomentsForMegaMoment:(id)arg1 ;
-(void)setMoments:(id)arg1 ;
-(void)removeMomentsForYearObject:(id)arg1 ;
-(void)addMomentsForYearObject:(id)arg1 ;
-(id)pl_debugDescription;
-(void)addMomentsForYear:(id)arg1 ;
-(void)removeMomentsForYear:(id)arg1 ;
-(void)_updateCachedNameInfoIfNeeded;
-(bool)_validateForInsertOrUpdate:(id*)arg1 ;
-(void)removeObjectFromMomentsForMegaMomentAtIndex:(unsigned long long)arg1 ;
-(void)replaceObjectInMomentsForMegaMomentAtIndex:(unsigned long long)arg1 withObject:(id)arg2 ;
-(void)insertMomentsForMegaMoment:(id)arg1 atIndexes:(id)arg2 ;
-(void)removeMomentsForMegaMomentAtIndexes:(id)arg1 ;
-(void)replaceMomentsForMegaMomentAtIndexes:(id)arg1 withMomentsForMegaMoment:(id)arg2 ;
-(void)insertObject:(id)arg1 inMomentsForYearAtIndex:(unsigned long long)arg2 ;
-(void)removeObjectFromMomentsForYearAtIndex:(unsigned long long)arg1 ;
-(void)replaceObjectInMomentsForYearAtIndex:(unsigned long long)arg1 withObject:(id)arg2 ;
-(void)insertMomentsForYear:(id)arg1 atIndexes:(id)arg2 ;
-(void)removeMomentsForYearAtIndexes:(id)arg1 ;
-(void)replaceMomentsForYearAtIndexes:(id)arg1 withMomentsForYear:(id)arg2 ;
@end

