/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:02:09 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PhotoLibraryServices/PhotoLibraryServices-Structs.h>
#import <PhotoLibraryServices/PLManagedObject.h>
#import <UIKit/UIActivityItemSource.h>

@class NSURL, NSDate, NSError, UIImage, NSString, NSDictionary, PLCloudFeedAssetsEntry, NSNumber, NSOrderedSet, NSData, NSManagedObject, NSSet, PLMoment, CLLocation, NSArray;

@interface PLManagedAsset : PLManagedObject <UIActivityItemSource> {

	bool _didPrepareForDeletion;
	bool _isRegisteredForChanges;
	bool _needsMomentUpdate;
	bool _disableDupeAnalysis;
	bool _disableFileSystemPersistency;
	bool _didPersistAvalanche;
	NSURL* cachedNonPersistedVideoPlaybackURL;
	NSDate* cachedNonPersistedVideoPlaybackURLExpiration;
	NSError* cachedNonPersistedVideoPlaybackURLError;
	UIImage* inflightImageInMemory;
	NSString* inflightImagePath;
	UIImage* inflightIndexSheetImage;
	NSDictionary* inflightMetadata;

}

@property (nonatomic,@dynamic,retain) NSString * cloudBatchID; 
@property (nonatomic,@dynamic,retain) NSDate * cloudBatchPublishDate; 
@property (nonatomic,@dynamic,retain) NSDate * cloudServerPublishDate; 
@property (nonatomic,@dynamic,retain) NSString * cloudAssetGUID; 
@property (nonatomic,@dynamic,retain) NSString * cloudCollectionGUID; 
@property (assign,nonatomic,@dynamic) bool cloudHasUnseenComments; 
@property (assign,nonatomic,@dynamic) bool cloudHasCommentsByMe; 
@property (nonatomic,@dynamic,retain) NSDate * cloudLastViewedCommentDate; 
@property (nonatomic,@dynamic,retain) PLCloudFeedAssetsEntry * cloudFeedAssetsEntry; 
@property (nonatomic,@dynamic,retain) NSString * cloudOwnerHashedPersonID; 
@property (assign,nonatomic,@dynamic) bool cloudIsDeletable; 
@property (assign,nonatomic,@dynamic) bool cloudIsMyAsset; 
@property (nonatomic,@dynamic,retain) NSNumber * cloudDownloadRequests; 
@property (nonatomic,readonly) NSString * cloudOwnerEmail; 
@property (nonatomic,readonly) NSString * cloudOwnerFullName; 
@property (nonatomic,readonly) NSString * cloudOwnerFirstName; 
@property (nonatomic,readonly) NSString * cloudOwnerLastName; 
@property (assign,nonatomic,@dynamic) bool cloudHasCommentsConversation; 
@property (nonatomic,@dynamic,retain) NSOrderedSet * cloudComments; 
@property (nonatomic,@dynamic,retain) NSOrderedSet * likeComments; 
@property (nonatomic,readonly) unsigned long long totalCommentsCount; 
@property (assign,nonatomic,@dynamic) short cloudPlaceholderKind; 
@property (assign,nonatomic) bool userCloudSharedLiked; 
@property (assign,nonatomic) short highDynamicRangeType; 
@property (nonatomic,retain) NSString * creatorBundleID; 
@property (nonatomic,retain) NSString * editorBundleID; 
@property (nonatomic,retain) NSString * originalAssetsUUID; 
@property (assign,nonatomic) short originalHeight; 
@property (assign,nonatomic) short originalWidth; 
@property (nonatomic,retain) NSData * originalHash; 
@property (nonatomic,retain) NSString * publicGlobalUUID; 
@property (assign,nonatomic) long long externalUsageIntent; 
@property (nonatomic,retain) NSString * originalFilename; 
@property (assign,nonatomic) short originalOrientation; 
@property (assign,nonatomic) int originalFilesize; 
@property (nonatomic,retain) NSString * originalPath; 
@property (nonatomic,retain) NSString * importSessionID; 
@property (assign,nonatomic) double duration; 
@property (nonatomic,retain) NSData * reverseLocationData; 
@property (assign,nonatomic) bool reverseLocationDataIsValid; 
@property (nonatomic,readonly) bool hasEmbeddedThumbnail; 
@property (nonatomic,readonly) NSData * embeddedThumbnailData; 
@property (assign,nonatomic) int embeddedThumbnailOffset; 
@property (assign,nonatomic) int embeddedThumbnailLength; 
@property (assign,nonatomic) short embeddedThumbnailWidth; 
@property (assign,nonatomic) short embeddedThumbnailHeight; 
@property (assign,nonatomic,@dynamic) int avalanchePickType; 
@property (nonatomic,@dynamic,retain) NSString * avalancheUUID; 
@property (assign,nonatomic,@dynamic) bool complete; 
@property (nonatomic,@dynamic,retain) NSDate * dateCreated; 
@property (nonatomic,@dynamic,retain) NSString * directory; 
@property (nonatomic,@dynamic,retain) NSString * filename; 
@property (assign,nonatomic,@dynamic) short height; 
@property (assign,nonatomic,@dynamic) short kind; 
@property (assign,nonatomic,@dynamic) short kindSubtype; 
@property (nonatomic,@dynamic,retain) NSData * locationData; 
@property (nonatomic,@dynamic,retain) NSDate * modificationDate; 
@property (assign,nonatomic,@dynamic) short orientation; 
@property (assign,nonatomic,@dynamic) short savedAssetType; 
@property (assign,nonatomic,@dynamic) double sortToken; 
@property (nonatomic,@dynamic,retain) NSString * uniformTypeIdentifier; 
@property (nonatomic,@dynamic,retain) id uuid; 
@property (assign,nonatomic,@dynamic) short visibilityState; 
@property (assign,nonatomic,@dynamic) short width; 
@property (nonatomic,@dynamic,retain) NSManagedObject * additionalAttributes; 
@property (nonatomic,@dynamic,retain) NSOrderedSet * adjustments; 
@property (nonatomic,@dynamic,retain) NSSet * albums; 
@property (nonatomic,@dynamic,retain) NSSet * albumsBeingKeyAssetFor; 
@property (nonatomic,@dynamic,retain) NSSet * albumsBeingSecondaryKeyAssetFor; 
@property (nonatomic,@dynamic,retain) NSSet * albumsBeingTertiaryKeyAssetFor; 
@property (nonatomic,@dynamic,retain) NSSet * faces; 
@property (nonatomic,@dynamic,retain) PLMoment * moment; 
@property (nonatomic,@dynamic,retain) NSSet * sidecarFiles; 
@property (nonatomic,retain) CLLocation * location; 
@property (assign) unsigned long long effectiveThumbnailIndex; 
@property (nonatomic,retain) PLManagedAsset * originalAsset; 
@property (assign,nonatomic) bool isInFlight; 
@property (nonatomic,readonly) UIImage * inflightImage; 
@property (nonatomic,retain) UIImage * inflightImageInMemory; 
@property (nonatomic,retain) NSString * inflightImagePath; 
@property (nonatomic,retain) UIImage * inflightIndexSheetImage; 
@property (nonatomic,retain) NSDictionary * inflightMetadata; 
@property (assign,nonatomic) CGSize imageSize; 
@property (assign,nonatomic) CGSize gpsCoordinate; 
@property (nonatomic,readonly) bool isPhotoStreamPhoto; 
@property (nonatomic,readonly) bool isUsedByiPhoto; 
@property (nonatomic,readonly) bool isCloudSharedAsset; 
@property (nonatomic,readonly) <PLCloudSharedAlbumProtocol> * cloudShareAlbum; 
@property (nonatomic,readonly) bool isVideo; 
@property (nonatomic,readonly) bool isStreamedVideo; 
@property (nonatomic,readonly) bool isHDVideo; 
@property (nonatomic,readonly) bool isMogul; 
@property (nonatomic,readonly) bool isPhoto; 
@property (nonatomic,readonly) bool isAudio; 
@property (nonatomic,readonly) bool allowsWallpaperEditing; 
@property (assign,nonatomic) bool needsMomentUpdate;                                               //@synthesize needsMomentUpdate=_needsMomentUpdate - In the implementation block
@property (assign,nonatomic) bool disableDupeAnalysis;                                             //@synthesize disableDupeAnalysis=_disableDupeAnalysis - In the implementation block
@property (assign,nonatomic) bool disableFileSystemPersistency;                                    //@synthesize disableFileSystemPersistency=_disableFileSystemPersistency - In the implementation block
@property (nonatomic,readonly) NSArray * sortedSidecarFiles; 
@property (nonatomic,copy) NSString * utiType; 
@property (nonatomic,readonly) NSString * mimeType; 
@property (nonatomic,readonly) bool isJPEG; 
@property (nonatomic,readonly) NSURL * mainFileURL; 
@property (nonatomic,readonly) NSString * pathForImageFile; 
@property (nonatomic,readonly) NSSet * allFileURLs; 
@property (nonatomic,readonly) NSSet * filePathsWithoutThumbs; 
@property (nonatomic,readonly) NSString * pathForLargeThumbnailFile; 
@property (nonatomic,readonly) NSString * pathForOriginalFile; 
@property (nonatomic,readonly) NSURL * fileURLForLargeThumbnailFile; 
@property (nonatomic,readonly) NSArray * allUniformTypeIdentifiers; 
@property (nonatomic,readonly) NSString * fileExtension; 
@property (nonatomic,readonly) NSString * pathForMetadataDirectory; 
@property (nonatomic,readonly) NSURL * fileURLForThumbnailFile; 
@property (nonatomic,readonly) NSString * pathForPrebakedThumbnail; 
@property (nonatomic,readonly) NSString * pathForPrebakedLandscapeScrubberThumbnails; 
@property (nonatomic,readonly) NSURL * fileURLForPrebakedLandscapeScrubberThumbnails; 
@property (nonatomic,readonly) NSString * pathForPrebakedPortraitScrubberThumbnails; 
@property (nonatomic,readonly) NSURL * fileURLForPrebakedPortraitScrubberThumbnails; 
@property (nonatomic,readonly) NSString * pathForPrebakedWildcatThumbnailsFile; 
@property (nonatomic,readonly) NSString * pathForTrimmedVideoFile; 
@property (nonatomic,readonly) NSString * pathForVideoPreviewFile; 
@property (nonatomic,readonly) NSString * pathForVideoFile; 
@property (nonatomic,readonly) NSString * pathForLargeDisplayableImageFile; 
@property (nonatomic,readonly) NSString * pathForMediumThumbnailFile; 
@property (nonatomic,readonly) NSString * pathForXMPFile; 
@property (nonatomic,readonly) NSString * pathForFlattenedVideoFile; 
@property (nonatomic,readonly) NSString * pathForSlalomRegionsArchive; 
@property (nonatomic,readonly) bool hasSlalomRegions; 
@property (nonatomic,readonly) NSArray * slalomRegions; 
@property (nonatomic,readonly) NSString * textBadgeString; 
@property (nonatomic,retain) NSURL * cachedNonPersistedVideoPlaybackURL; 
@property (nonatomic,retain) NSDate * cachedNonPersistedVideoPlaybackURLExpiration; 
@property (nonatomic,retain) NSError * cachedNonPersistedVideoPlaybackURLError; 
@property (nonatomic,readonly) UIImage * wallpaperFullScreenImage; 
@property (nonatomic,readonly) NSURL * assetURL; 
@property (assign,nonatomic,@dynamic) int thumbnailIndex; 
+(id)persistedRecentlyUsedGUIDS;
+(id)sortedCloudSharedAssetsWithPlaceholderKind:(short)arg1 ascending:(bool)arg2 inLibrary:(id)arg3 ;
+(id)recentlyUsedGUIDsPath;
+(id)allCloudSharedAssetsInLibrary:(id)arg1 ;
+(id)cloudSharedAssetsWithGUIDs:(id)arg1 inLibrary:(id)arg2 ;
+(void)markAssetAsRecentlyUsed:(id)arg1 ;
+(id)extensionForLargeThumbnailFile;
+(id)extensionForMediumThumbnailFile;
+(unsigned long long)countUsedAssetsWithKind:(short)arg1 inManagedObjectContext:(id)arg2 ;
+(id)assetWithUUID:(id)arg1 inManagedObjectContext:(id)arg2 ;
+(id)entityInManagedObjectContext:(id)arg1 ;
+(id)photoFromAssetURL:(id)arg1 photoLibrary:(id)arg2 ;
+(id)entityName;
+(id)assetsWithUUIDs:(id)arg1 includePendingChanges:(bool)arg2 inLibrary:(id)arg3 ;
+(id)insertAssetIntoPhotoLibrary:(id)arg1 mainFileURL:(id)arg2 savedAssetType:(short)arg3 replacementUUID:(id)arg4 imageSource:(CGImageSource*)arg5 imageData:(id*)arg6 ;
+(id)assetWithUUID:(id)arg1 inLibrary:(id)arg2 ;
+(id)insertInManagedObjectContext:(id)arg1 ;
+(id)URLForMetadataWithExtension:(id)arg1 forMediaInMainDirectory:(id)arg2 withFilename:(id)arg3 ;
+(int)indexSheetBakedFormat;
+(int)thumbnailFormat;
+(int)wildcatStackFormat;
+(id)preferredFileExtensionForType:(id)arg1 ;
+(void)extractDirectory:(id*)arg1 andFilename:(id*)arg2 fromMainFileURL:(id)arg3 ;
+(id)diagnosticFilePathForMainFilePath:(id)arg1 ;
+(id)assetsWithUUIDs:(id)arg1 inLibrary:(id)arg2 ;
+(id)uniformTypeIdentifierFromPathExtension:(id)arg1 assetType:(short)arg2 ;
+(short)assetTypeFromUniformTypeIdentifier:(id)arg1 ;
+(id)slalomRegionsPathForMainFilePath:(id)arg1 ;
+(int)wildcatIndexSheetFormat;
+(int)masterThumbnailFormat;
+(int)fullSizeImageFormat;
+(int)formatForThumbnailGeneration;
+(int)posterThumbnailFormat;
+(int)indexSheetUnbakedFormat;
+(int)largestNonJPEGThumbnailFormat;
+(id)assetWithObjectID:(id)arg1 inManagedObjectContext:(id)arg2 ;
+(id)locationFromLocationData:(id)arg1 ;
+(short)_correctedOrientation:(short)arg1 ;
+(id)_insertAssetIntoPhotoLibrary:(id)arg1 mainFileURL:(id)arg2 savedAssetType:(short)arg3 replacementUUID:(id)arg4 imageSource:(CGImageSource*)arg5 imageData:(id*)arg6 isPlaceholder:(bool)arg7 ;
+(id)bestCreationDateForAssetAtURL:(id)arg1 modificationDate:(id*)arg2 creationDateString:(id*)arg3 ;
+(id)abbreviatedMetadataDirectoryForDirectory:(id)arg1 ;
+(id)_pathsByAssetUUIDFromFetchResults:(id)arg1 absolute:(bool)arg2 ;
+(CGSize)locationFromImageProperties:(id)arg1 ;
+(CGSize)locationFromAVAsset:(id)arg1 ;
+(id)photoFromAssetURL:(id)arg1 photoLibrary:(id)arg2 sidecar:(id*)arg3 ;
+(id)uuidFromAssetURL:(id)arg1 fileExtension:(id*)arg2 sidecarIndex:(id*)arg3 ;
+(id)assetWithObjectID:(id)arg1 inLibrary:(id)arg2 ;
+(id)insertAssetIntoPhotoLibrary:(id)arg1 mainFileURL:(id)arg2 savedAssetType:(short)arg3 replacementUUID:(id)arg4 imageSource:(CGImageSource*)arg5 imageData:(id*)arg6 isPlaceholder:(bool)arg7 ;
+(unsigned long long)countAssetsWithKind:(short)arg1 inManagedObjectContext:(id)arg2 ;
+(id)assetsWithSavedAssetType:(short)arg1 inManagedObjectContext:(id)arg2 ;
+(id)incompleteAssetsInManagedObjectContext:(id)arg1 ;
+(id)pathsForAllIncompleteAssetsInManagedObjectContext:(id)arg1 ;
+(id)keyPathsForValuesAffectingImageSize;
+(id)keyPathsForValuesAffectingGpsCoordinate;
+(id)keyPathsForValuesAffectingIsPhotoStreamPhoto;
+(id)keyPathsForValuesAffectingUtiType;
+(id)keyPathsForValuesAffectingMimeType;
+(id)keyPathsForValuesAffectingIsJPEG;
+(bool)isValidFileExtensionForImport:(id)arg1 ;
+(int)feedEntryThumbnailFormat;
+(int)portraitScrubberThumbnailFormat;
+(int)landscapeScrubberThumbnailFormat;
+(int)wildcatPhotoScrubberFormat;
+(int)wildcatCachedStackImageFormat;
+(id)fileURLFromAssetURL:(id)arg1 photoLibrary:(id)arg2 ;
+(id)uuidFromAssetURL:(id)arg1 ;
-(id)cloudOwnerFirstName;
-(id)cloudOwnerLastName;
-(id)cloudOwnerFullName;
-(id)cloudOwnerEmail;
-(unsigned long long)totalCommentsCount;
-(void)deleteComment:(id)arg1 ;
-(bool)userCloudSharedLiked;
-(void)addComment:(id)arg1 ;
-(int)cloudCommentsStatusForOwnedAsset:(bool)arg1 ;
-(bool)cloudHasSameOwnerAsAsset:(id)arg1 ;
-(id)userAddCloudSharedCommentWithText:(id)arg1 ;
-(void)userDeleteCloudSharedComment:(id)arg1 ;
-(void)userReadAllCloudSharedComments;
-(void)setUserCloudSharedLiked:(bool)arg1 ;
-(double)duration;
-(void)setDuration:(double)arg1 ;
-(int)originalFilesize;
-(id)importSessionID;
-(void)setImportSessionID:(id)arg1 ;
-(id)publicGlobalUUID;
-(id)originalHash;
-(void)setOriginalFilesize:(int)arg1 ;
-(void)setCreatorBundleID:(id)arg1 ;
-(void)setHighDynamicRangeType:(short)arg1 ;
-(void)setOriginalFilename:(id)arg1 ;
-(id)originalFilename;
-(void)setPublicGlobalUUID:(id)arg1 ;
-(void)setOriginalHash:(id)arg1 ;
-(short)originalWidth;
-(short)originalHeight;
-(void)setEditorBundleID:(id)arg1 ;
-(id)originalAssetsUUID;
-(void)setOriginalAssetsUUID:(id)arg1 ;
-(short)highDynamicRangeType;
-(id)creatorBundleID;
-(id)originalPath;
-(void)setOriginalPath:(id)arg1 ;
-(int)embeddedThumbnailOffset;
-(short)originalOrientation;
-(void)setOriginalOrientation:(short)arg1 ;
-(void)setOriginalWidth:(short)arg1 ;
-(void)setOriginalHeight:(short)arg1 ;
-(long long)externalUsageIntent;
-(short)embeddedThumbnailWidth;
-(short)embeddedThumbnailHeight;
-(int)embeddedThumbnailLength;
-(id)editorBundleID;
-(void)setExternalUsageIntent:(long long)arg1 ;
-(id)reverseLocationData;
-(void)setReverseLocationData:(id)arg1 ;
-(bool)reverseLocationDataIsValid;
-(void)setReverseLocationDataIsValid:(bool)arg1 ;
-(bool)hasEmbeddedThumbnail;
-(id)embeddedThumbnailData;
-(void)setEmbeddedThumbnailOffset:(int)arg1 ;
-(void)setEmbeddedThumbnailLength:(int)arg1 ;
-(void)setEmbeddedThumbnailWidth:(short)arg1 ;
-(void)setEmbeddedThumbnailHeight:(short)arg1 ;
-(void)generateThumbnailsWithImageSource:(CGImageSourceRef)arg1 imageData:(id)arg2 updateExistingLargePreview:(bool)arg3 allowMediumPreview:(bool)arg4 outSmallThumbnail:(id*)arg5 outLargeThumbnail:(id*)arg6 ;
-(void)_computePreCropThumbnailSize:(CGSize*)arg1 andPostCropSize:(CGSize*)arg2 forOrientedOriginalSize:(CGSize)arg3 andCroppedSize:(CGSize)arg4 isLargeThumbnail:(bool)arg5 ;
-(bool)_writeXMPHeaderWithProperties:(id)arg1 orientation:(int)arg2 ;
-(void)_writeXMPSidecarWithProperties:(id)arg1 orientation:(int)arg2 ;
-(void)writeXMPWithProperties:(id)arg1 orientation:(int)arg2 ;
-(void)dealloc;
-(bool)isEditable;
-(CGSize)imageSize;
-(id)location;
-(id)mimeType;
-(id)activityViewControllerPlaceholderItem:(id)arg1 ;
-(id)activityViewController:(id)arg1 itemForActivityType:(id)arg2 ;
-(bool)isVideo;
-(id)pathForOriginalFile;
-(bool)isCloudSharedAsset;
-(id)cloudShareAlbum;
-(bool)canPerformEditOperation:(int)arg1 ;
-(void)delete;
-(bool)isPhotoStreamPhoto;
-(bool)isAvalancheStackPhoto;
-(bool)isAvalanchePhoto;
-(id)assetURLWithExtension:(id)arg1 ;
-(id)assetURL;
-(id)pathForDiagnosticFile;
-(id)pathForMetadataDirectory;
-(id)pathForVideoPreviewFile;
-(id)fileURLForThumbnailFile;
-(bool)isPhoto;
-(id)pathForLargeThumbnailFile;
-(void)setEffectiveThumbnailIndex:(unsigned long long)arg1 ;
-(void)setThumbnailDataFromImageProperties:(id)arg1 ;
-(void)setLocationFromImageProperties:(id)arg1 ;
-(void)setOriginalAsset:(id)arg1 ;
-(id)fileURLForSidecarFile:(id)arg1 ;
-(void)updateAdjustmentsWithAdjustmentMetadata:(id)arg1 ;
-(void)setDisableFileSystemPersistency:(bool)arg1 ;
-(void)generateAndUpdateThumbnailsWithPreviewImage:(id)arg1 thumbnailImage:(id)arg2 fromImageSource:(CGImageSourceRef)arg3 imageData:(id)arg4 thumbnailDataByFormatID:(CFDictionaryRef)arg5 updateExistingLargePreview:(bool)arg6 ;
-(bool)avalanchePickTypeIsVisible;
-(void)persistMetadataToFilesystem;
-(id)mainFileURL;
-(id)addFaceWithRelativeRect:(CGRect)arg1 identifier:(short)arg2 albumUUID:(id)arg3 ;
-(unsigned long long)effectiveThumbnailIndex;
-(id)pathForVideoFile;
-(void)setNeedsMomentUpdate:(bool)arg1 ;
-(void)generateLargeThumbnailFileIfNecessary;
-(id)utiType;
-(bool)setVideoInfoFromFileAtURL:(id)arg1 ;
-(id)pathForImageFile;
-(bool)isInFlight;
-(void)setInflightImagePath:(id)arg1 ;
-(void)setInflightImageInMemory:(id)arg1 ;
-(void)setUniformTypeIdentifierFromPathExtension:(id)arg1 ;
-(void)updateAdjustmentsWithFiltersAndIdentifiers:(id)arg1 ;
-(void)setInflightMetadata:(id)arg1 ;
-(id)imageWithFormat:(int)arg1 outImageProperties:(const _CFDictionary*)arg2 ;
-(id)imageWithFormat:(int)arg1 ;
-(id)reservedPathForLargeDisplayableImageFileForceLarge:(bool)arg1 ;
-(bool)isJPEG;
-(id)indexSheetImage;
-(id)thumbnailIdentifier;
-(bool)isStreamedVideo;
-(bool)isCloudPlaceholder;
-(id)fileURLForLargeThumbnailFile;
-(void)awakeFromInsert;
-(void)didSave;
-(id)mutableAlbumsBeingKeyAssetFor;
-(id)mutableAlbumsBeingSecondaryKeyAssetFor;
-(id)mutableAlbumsBeingTertiaryKeyAssetFor;
-(void)registerForChanges;
-(void)unregisterForChanges;
-(void)awakeFromSnapshotEvents:(unsigned long long)arg1 ;
-(void)setIsInFlight:(bool)arg1 ;
-(void)awakeFromFetch;
-(void)willTurnIntoFault;
-(void)prepareForDeletion;
-(bool)validateForInsert:(id*)arg1 ;
-(bool)validateForUpdate:(id*)arg1 ;
-(void)willSave;
-(bool)isPanorama;
-(bool)_hasPanoramaDimensions;
-(void)_persistAvalancheToFilesystem;
-(id)mutableAdjustments;
-(id)_serializedPropertyDataFromFilter:(id)arg1 ;
-(id)_settingsDictionaryFromFilter:(id)arg1 ;
-(id)_settingsDictionaryFromFilters:(id)arg1 inputImageExtent:(CGRect)arg2 ;
-(id)addAdjustment;
-(id)cachedNonPersistedVideoPlaybackURLExpiration;
-(void)setInflightIndexSheetImage:(id)arg1 ;
-(id)inflightImageInMemory;
-(id)inflightImagePath;
-(id)inflightIndexSheetImage;
-(id)inflightMetadata;
-(id)pathForLargeDisplayableImageFile;
-(id)filteredImage:(id)arg1 withCIContext:(id)arg2 ;
-(id)_kindDescription;
-(id)_savedAssetTypeDescription;
-(id)_highDynamicRangeTypeDescription;
-(bool)_isSavedAssetTypeValid:(short)arg1 ;
-(bool)setAttributesFromMainFileURL:(id)arg1 savedAssetType:(short)arg2 imageSource:(CGImageSource*)arg3 imageData:(id*)arg4 ;
-(void)updateAssetKindFromUniformTypeIdentifier;
-(void)setSizeAndOrientationFromImageProperties:(id)arg1 ;
-(void)setSavedAssetTypeFromImageProperties:(id)arg1 ;
-(bool)isAudio;
-(id)pathForSlalomRegionsArchive;
-(void)setGpsCoordinate:(CGSize)arg1 ;
-(void)setUtiType:(id)arg1 ;
-(id)fileURLForMediumThumbnailFile;
-(id)fileURLForPrebakedLandscapeScrubberThumbnails;
-(id)fileURLForPrebakedPortraitScrubberThumbnails;
-(id)pathForMetadataWithExtension:(id)arg1 ;
-(id)fileURLForMetadataWithExtension:(id)arg1 ;
-(id)sortedSidecarFiles;
-(id)pathForMediumThumbnailFile;
-(bool)_deviceSupportsMogul;
-(bool)isMogul;
-(id)slalomRegionsUseDefaults:(bool)arg1 ;
-(bool)_isValidUTI:(id)arg1 forService:(id)arg2 ;
-(id)inflightImage;
-(id)newFullScreenImage:(const _CFDictionary*)arg1 ;
-(void)getLargestAvailableDataRepresentation:(id*)arg1 type:(id*)arg2 ;
-(id)largestAvailableDataRepresentationAndType:(id*)arg1 ;
-(id)allFileExtensions;
-(id)assetURLForSidecarFile:(id)arg1 ;
-(id)fileExtension;
-(id)pasteBoardRepresentation;
-(bool)hasThumbnail;
-(bool)isLocatedAtCoordinates:(CGSize)arg1 ;
-(id)avalanchePickDescription;
-(bool)isEditableFromAssetsLibrary;
-(bool)isDeletableFromAssetsLibrary;
-(void)deleteFromDatabaseOnly;
-(id)adjustmentsXMPRepresentation;
-(id)originalAsset;
-(bool)hasGPS;
-(id)cachedNonPersistedVideoPlaybackURL;
-(id)pathToOriginalVideoFile;
-(id)_compactDebugDescription;
-(id)_prettyDescription;
-(void)setPersistedFileSystemAttributes;
-(id)faceWithIdentifier:(short)arg1 ;
-(id)pictureTransferProtocolInformationWithAlbumsObjectIDs:(id)arg1 ;
-(void)setHDRFlagFromImageProperties:(id)arg1 ;
-(void)setImageSize:(CGSize)arg1 ;
-(CGSize)gpsCoordinate;
-(bool)isUsedByiPhoto;
-(bool)isHDVideo;
-(bool)allowsWallpaperEditing;
-(bool)canPerformSharingActions;
-(bool)isIncludedInMoments;
-(bool)isIncludedInCloudFeeds;
-(bool)hasJustBeenShown;
-(bool)hasJustBeenHidden;
-(id)mutableSidecarFiles;
-(bool)hasImageFile;
-(bool)couldBeStoredInDCIM;
-(bool)isSavedPhotosAsset;
-(id)filePathsWithoutThumbs;
-(id)allFileURLs;
-(id)allUniformTypeIdentifiers;
-(id)pathForPrebakedThumbnail;
-(id)pathForPrebakedWildcatThumbnailsFile;
-(id)pathForTrimmedVideoFile;
-(id)pathForPrebakedLandscapeScrubberThumbnails;
-(id)pathForPrebakedPortraitScrubberThumbnails;
-(id)pathForXMPFile;
-(id)pathForFlattenedVideoFile;
-(bool)hasSlalomRegions;
-(id)slalomRegions;
-(id)fileExtensionForService:(id)arg1 ;
-(id)mimeTypeForService:(id)arg1 ;
-(id)newFullSizeImage;
-(id)newLowResolutionFullScreenImage;
-(void)copyToPasteboard;
-(id)textBadgeString;
-(id)wallpaperFullScreenImage;
-(id)previewFrameImageFromDatabase;
-(bool)isInRegion:(SCD_Struct_PL10)arg1 ;
-(id)shortenedFilePath;
-(void)setCachedNonPersistedVideoPlaybackURL:(id)arg1 ;
-(void)setCachedNonPersistedVideoPlaybackURLExpiration:(id)arg1 ;
-(id)cachedNonPersistedVideoPlaybackURLError;
-(void)setCachedNonPersistedVideoPlaybackURLError:(id)arg1 ;
-(bool)needsMomentUpdate;
-(bool)disableDupeAnalysis;
-(void)setDisableDupeAnalysis:(bool)arg1 ;
-(bool)disableFileSystemPersistency;
-(void)setLocation:(id)arg1 ;
@end

