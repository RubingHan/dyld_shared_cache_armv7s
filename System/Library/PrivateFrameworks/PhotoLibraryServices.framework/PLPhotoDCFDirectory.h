/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:02:09 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PhotoLibraryServices/PhotoLibraryServices-Structs.h>
#import <PhotoLibraryServices/PLPhotoDCFObject.h>

@class PLPhotoDCIMDirectory;

@interface PLPhotoDCFDirectory : PLPhotoDCFObject {

	PLPhotoDCIMDirectory* _dcimDirectory;
	CFDictionaryRef _fileGroupsByNumber;
	int _maxFileGroupNumber;
	int _lastUsedFileGroupNumber;
	bool _considerInvalidFileGroups;

}

@property (assign) bool considerInvalidFileGroups;              //@synthesize considerInvalidFileGroups=_considerInvalidFileGroups - In the implementation block
+(void)initializeFileGroupPrefixAndExtensions;
+(id)fileGroupRequiredEmptyPrefixes;
+(id)fileGroupRequiredEmptyExtensions;
-(void)dealloc;
-(id)dcimDirectory;
-(id)nextAvailableFileGroup;
-(void)ensureDirectoryExists;
-(id)_lastUsedFileGroupUserInfoKey;
-(unsigned)_calculateBaseDirectoryValue;
-(id)fullPath;
-(bool)canAddFileGroupWithGroupNumber:(int)arg1 ;
-(id)fileGroups;
-(bool)_canAddItemWithPrefix:(id)arg1 minimumFileGroupNumber:(int)arg2 ;
-(bool)_canAddItemWithPrefix:(id)arg1 ;
-(bool)isEntensionValid:(id)arg1 ;
-(bool)considerInvalidFileGroups;
-(id)_nextAvailableFileGroupWithPrefix:(id)arg1 extension:(id)arg2 ;
-(id)initWithName:(id)arg1 number:(int)arg2 dcimDirectory:(id)arg3 ;
-(bool)canAddImage;
-(bool)canAddVideo;
-(id)nextAvailableVideoFileGroupWithExtension:(id)arg1 ;
-(void)removeFileGroup:(id)arg1 ;
-(void)setWriteIsPending:(bool)arg1 ;
-(void)setConsiderInvalidFileGroups:(bool)arg1 ;
@end

