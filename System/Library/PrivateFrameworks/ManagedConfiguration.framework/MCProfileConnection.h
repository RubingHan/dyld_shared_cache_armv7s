/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:01:25 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol MCInteractionDelegate, OS_dispatch_queue;
#import <ManagedConfiguration/ManagedConfiguration-Structs.h>
@class CPDistributedMessagingCenter, NSDictionary, NSData, NSTimer, NSObject, NSMutableArray;

@interface MCProfileConnection : NSObject {

	CPDistributedMessagingCenter* _messageCenter;
	CFBagRef _observers;
	CPDistributedMessagingCenter* _interactionServer;
	<MCInteractionDelegate>* _interactionDelegate;
	id _interactionLockDelayedContext;
	NSDictionary* _preflightResponse;
	NSData* _originalProfileData;
	bool _needToRestoreOriginalProfileData;
	int _userInputTimeoutType;
	NSTimer* _userInputTimer;
	NSObject<OS_dispatch_queue>* _notificationSyncQueue;
	NSMutableArray* _notificationTokens;

}
+(id)sharedConnection;
-(bool)installConfigurationProfileWithData:(id)arg1 ;
-(bool)mayShareToMessagesOriginatingAccountIsManaged:(bool)arg1 ;
-(bool)mayOpenFromManagedToUnmanaged;
-(bool)mayOpenFromUnmanagedToManaged;
-(bool)isOpenInRestrictionInEffect;
-(bool)isAppManaged:(id)arg1 ;
-(id)allowedOpenInAppBundleIDsAfterApplyingFilterToAppBundleIDs:(id)arg1 originatingAppBundleID:(id)arg2 originatingAccountIsManaged:(bool)arg3 ;
-(id)filteredMailSheetAccountsForBundleID:(id)arg1 sourceAccountManagement:(int)arg2 ;
-(bool)isSupervised;
-(id)cloudConfigurationDetails;
-(void)storeCloudConfigurationDetails:(id)arg1 ;
-(void)retrieveCloudConfigurationDetailsCompletionBlock:(/*^block*/ id)arg1 ;
-(bool)activationRecordIndicatesCloudConfigurationIsAvailable;
-(void)markStoredProfileForPurposeAsInstalled:(int)arg1 ;
-(void)profileDataStoredForPurpose:(int)arg1 completionBlock:(/*^block*/ id)arg2 ;
-(void)retrieveAndStoreCloudConfigurationDetailsCompletionBlock:(/*^block*/ id)arg1 ;
-(void)retrieveCloudConfigurationFromURL:(id)arg1 username:(id)arg2 password:(id)arg3 anchorCertificates:(id)arg4 completionBlock:(/*^block*/ id)arg5 ;
-(bool)wasCloudConfigurationApplied;
-(bool)wasTeslaCloudConfigurationApplied;
-(void)cloudConfigurationUIDidCompleteWasApplied:(bool)arg1 ;
-(bool)shouldSkipSetupPanes;
-(bool)shouldShowCloudConfigurationUI;
-(void)installProfileDataStoredForPurpose:(int)arg1 completionBlock:(/*^block*/ id)arg2 ;
-(void)storeProfileData:(id)arg1 configurationSource:(int)arg2 purpose:(int)arg3 ;
-(bool)shouldInstallStoredProfileForPurpose:(int)arg1 ;
-(void)setupAssistantDidFinish;
-(bool)isTeslaCloudConfigurationAvailable;
-(id)knownAirPrintIPPURLStrings;
-(int)appWhitelistState;
-(id)effectiveWhitelistedAppBundleIDs;
-(bool)isInSingleAppMode;
-(bool)isPasscodeRequiredToAccessWhitelistedApps;
-(bool)mayEnterPasscodeToAccessNonWhitelistedApps;
-(id)parentalControlsAvailableAppBundleIDsForWhitelisting;
-(id)parentalControlsWhitelistedAppBundleIDs;
-(void)setParentalControlsWhitelistedAppBundleIDs:(id)arg1 ;
-(bool)isParentalControlsAllowPasscodeAccessToNonWhitelistedAppsUIForcedByRestrictions;
-(bool)parentalControlsAllowPasscodeAccessToNonWhitelistedApps;
-(void)parentalControlsSetAllowPasscodeAccessToNonWhitelistedApps:(bool)arg1 ;
-(id)autonomousSingleAppModePermittedBundleIDs;
-(int)hostMayPairWithOptions:(id)arg1 challenge:(id)arg2 ;
-(void)lockdownDidReceiveActivationRecord:(id)arg1 ;
-(void)setUserBookmarks:(id)arg1 ;
-(id)userBookmarks;
-(void)stashUserBookmarksWithLabel:(id)arg1 newUserBookmarks:(id)arg2 ;
-(void)unstashUserBookmarksFromLabel:(id)arg1 ;
-(id)defaultUserBookmarks;
-(bool)isWebFilterUIActive;
-(void)setWebContentFilterAutoPermittedURLStrings:(id)arg1 ;
-(void)addWebContentFilterAutoPermittedURLString:(id)arg1 ;
-(void)addUserBookmark:(id)arg1 ;
-(id)webContentFilterUserBlacklistedURLStrings;
-(id)webContentFilterEffectiveBlacklistedURLStrings;
-(void)setWebContentFilterUserBlacklistedURLStrings:(id)arg1 ;
-(void)removeWebContentFilterUserBlacklistedURLString:(id)arg1 ;
-(void)stashWebContentFilterUserBlacklistedURLStrings;
-(void)unstashWebContentFilterUserBlacklistedURLStrings;
-(void)stashWebContentFilterAutoPermittedURLStrings;
-(void)unstashWebContentFilterAutoPermittedURLStrings;
-(id)activationLockBypassKeyCreateNewIfNeeded:(bool)arg1 ;
-(void)checkCarrierProfileForceInstallation:(bool)arg1 ;
-(id)messageCenter;
-(id)publicMessageCenter;
-(void)checkCarrierProfile;
-(void)notifyDeviceUnlocked;
-(void)notifyKeybagUpdated;
-(void)performBootTimeChecks;
-(void)removeExpiredProfiles;
-(void)storeCertificateData:(id)arg1 forHostIdentifier:(id)arg2 ;
-(void)rereadManagedAppAttributes;
-(void)flush;
-(bool)isAutomaticAppUpdatesAllowed;
-(bool)isAirPlayIncomingRequestsPairingPasswordRequired;
-(void)shutDown;
-(id)managedAppIDsWithFlags:(int)arg1 ;
-(bool)isFingerprintUnlockAllowed;
-(id)managedWiFiNetworkNames;
-(id)managedSystemConfigurationServiceIDs;
-(id)doNotBackupAppIDs;
-(id)doNotDocumentSyncAppIDs;
-(void)processProfilesPostRestore;
-(void)processProfilesPostMigrate;
-(void)migrateWithContext:(int)arg1 passcodeWasSetInBackup:(bool)arg2 ;
-(void)migratePostDataMigrator;
-(bool)isCloudKeychainSyncAllowed;
-(bool)isVehicleUIAllowed;
-(bool)isOTAPKIUpdatesAllowed;
-(void)setAutomaticAppUpdatesAllowed:(bool)arg1 ;
-(bool)isAutomaticAppUpdatesModificationAllowed;
-(bool)isWebTextDefineAllowed;
-(bool)isAdTrackingLimited;
-(bool)isLockScreenWiFiModificationAllowed;
-(bool)isAppInstallationAllowed;
-(bool)isAppRatingLimitInEffect;
-(bool)isAirDropAllowed;
-(bool)isLockScreenNotificationsViewAllowed;
-(bool)isLockScreenTodayViewAllowed;
-(bool)isLockScreenControlCenterAllowed;
-(bool)isControlCenterAllowedInApps;
-(bool)isActivationLockAllowed;
-(bool)isAssistantUserGeneratedContentAllowed;
-(bool)isFingerprintModificationAllowed;
-(bool)isAirPlayOutgoingRequestsPairingPasswordRequired;
-(id)activationLockBypassKey;
-(void)deleteActivationLockBypassKey;
-(id)activationLockBypassHash;
-(bool)isMUAllowed;
-(void)setGracePeriod:(unsigned long long)arg1 passcode:(id)arg2 completionBlock:(/*^block*/ id)arg3 ;
-(unsigned long long)gracePeriod;
-(void)setFingerprintUnlockAllowed:(bool)arg1 passcode:(id)arg2 completionBlock:(/*^block*/ id)arg3 ;
-(bool)shouldDestroyOldKeybag;
-(bool)isPasscodeRequired;
-(bool)isPasscodeRequiredByProfiles;
-(id)passcodeExpiryDateOutError:(id*)arg1 ;
-(bool)unlockDeviceWithPasscode:(id)arg1 outError:(id*)arg2 ;
-(void)lockDeviceImmediately:(bool)arg1 ;
-(bool)isPasscodeSet;
-(void)notifyUserHasSeenComplianceMessageWithLastLockDate:(id)arg1 ;
-(void)recomputeUserComplianceWarningSynchronously;
-(int)_getPasscodeComplianceWarningExpiryDate:(id)arg1 lastLockDate:(id)arg2 outLocalizedTitle:(id*)arg3 outLocalizedMessage:(id*)arg4 ;
-(int)newPasscodeEntryScreenType;
-(void)lockDevice;
-(bool)changePasscodeFrom:(id)arg1 to:(id)arg2 outError:(id*)arg3 ;
-(bool)clearPasscodeWithEscrowKeybagData:(id)arg1 secret:(id)arg2 outError:(id*)arg3 ;
-(bool)isContentProtectionInEffect;
-(bool)passcode:(id)arg1 meetsCurrentConstraintsOutError:(id*)arg2 ;
-(bool)currentPasscodeIsCompliantWithGlobalRestrictionsOutError:(id*)arg1 ;
-(bool)currentPasscodeIsCompliantWithProfileRestrictionsOutError:(id*)arg1 ;
-(int)getPasscodeComplianceWarningLastLockDate:(id)arg1 outLocalizedTitle:(id*)arg2 outLocalizedMessage:(id*)arg3 ;
-(void)getPasscodeComplianceWarningLastLockDate:(id)arg1 completionBlock:(/*^block*/ id)arg2 ;
-(void)recomputeUserComplianceWarning;
-(void)notifyClientsToRecomputeCompliance;
-(int)unlockScreenType;
-(id)localizedDescriptionOfCurrentPasscodeConstraints;
-(int)effectiveBoolValueForSetting:(id)arg1 ;
-(id)defaultValueForSetting:(id)arg1 ;
-(void)setParametersForSettingsByType:(id)arg1 passcode:(id)arg2 ;
-(void)setParametersForSettingsByType:(id)arg1 ;
-(void)setBoolValue:(bool)arg1 forSetting:(id)arg2 passcode:(id)arg3 ;
-(void)setValue:(id)arg1 forSetting:(id)arg2 passcode:(id)arg3 ;
-(id)userSettings;
-(int)defaultBoolValueForSetting:(id)arg1 ;
-(id)defaultParametersForBoolSetting:(id)arg1 ;
-(id)defaultParametersForValueSetting:(id)arg1 ;
-(id)effectiveParametersForBoolSetting:(id)arg1 ;
-(id)effectiveParametersForUnionSetting:(id)arg1 ;
-(id)effectiveParametersForValueSetting:(id)arg1 ;
-(id)effectiveParametersForIntersectionSetting:(id)arg1 ;
-(bool)isBoolSettingLockedDownByRestrictions:(id)arg1 ;
-(bool)isValueSettingLockedDownByRestrictions:(id)arg1 ;
-(id)effectiveUserSettings;
-(void)setParameters:(id)arg1 forBoolSetting:(id)arg2 ;
-(void)setParameters:(id)arg1 forValueSetting:(id)arg2 ;
-(void)setBoolValue:(bool)arg1 forSetting:(id)arg2 ;
-(void)setValue:(id)arg1 forSetting:(id)arg2 ;
-(void)setValues:(id)arg1 forIntersectionSetting:(id)arg2 ;
-(void)setValues:(id)arg1 forUnionSetting:(id)arg2 ;
-(id)parametersForBoolSetting:(id)arg1 ;
-(id)parametersForValueSetting:(id)arg1 ;
-(id)parametersForIntersectionSetting:(id)arg1 ;
-(id)parametersForUnionSetting:(id)arg1 ;
-(id)defaultValuesForIntersectionSetting:(id)arg1 ;
-(id)defaultValuesForUnionSetting:(id)arg1 ;
-(id)defaultParametersForIntersectionSetting:(id)arg1 ;
-(id)defaultParametersForUnionSetting:(id)arg1 ;
-(id)effectiveValuesForIntersectionSetting:(id)arg1 ;
-(id)effectiveValuesForUnionSetting:(id)arg1 ;
-(bool)isIntersectionSettingLockedDownByRestrictions:(id)arg1 ;
-(bool)isUnionSettingLockedDownByRestrictions:(id)arg1 ;
-(void)removeBoolSetting:(id)arg1 ;
-(void)removeValueSetting:(id)arg1 ;
-(void)resetAllSettingsToDefaults;
-(id)effectiveValueForSetting:(id)arg1 ;
-(id)userInfoForClientUUID:(id)arg1 ;
-(void)setUserInfo:(id)arg1 forClientUUID:(id)arg2 ;
-(bool)applyRestrictionDictionary:(id)arg1 clientType:(id)arg2 clientUUID:(id)arg3 localizedClientDescription:(id)arg4 localizedWarningMessage:(id)arg5 outRestrictionChanged:(bool*)arg6 outEffectiveSettingsChanged:(bool*)arg7 outError:(id*)arg8 ;
-(int)boolRestrictionForFeature:(id)arg1 ;
-(id)valueRestrictionForFeature:(id)arg1 ;
-(id)objectRestrictionForFeature:(id)arg1 ;
-(id)allClientUUIDsForClientType:(id)arg1 ;
-(id)effectiveRestrictions;
-(int)applyRestrictionDictionary:(id)arg1 clientType:(id)arg2 clientUUID:(id)arg3 localizedClientDescription:(id)arg4 localizedWarningMessage:(id)arg5 complianceBlocking:(int)arg6 displayImmediateAlert:(bool)arg7 outRestrictionChanged:(bool*)arg8 outEffectiveSettingsChanged:(bool*)arg9 outError:(id*)arg10 ;
-(void)removeOrphanedClientRestrictions;
-(id)effectiveWhitelistedAppsAndOptions;
-(void)setInteractionDelegate:(id)arg1 ;
-(id)installedProfileWithIdentifier:(id)arg1 ;
-(id)_queueDataForAcceptance:(id)arg1 originalFileName:(id)arg2 transitionToUI:(bool)arg3 outError:(id*)arg4 ;
-(id)installedProfileIdentifiersWithFilterFlags:(int)arg1 ;
-(id)installProfileData:(id)arg1 options:(id)arg2 outError:(id*)arg3 ;
-(void)removeProfileWithIdentifier:(id)arg1 ;
-(bool)_openSensitiveURLString:(id)arg1 unlock:(bool)arg2 ;
-(bool)transitionToProfileAcceptanceUIAndReturnToBundleID:(id)arg1 ;
-(id)installedProfilesWithFilterFlags:(int)arg1 ;
-(void)__checkForProfiledCrash;
-(void)_doMCICDidUpdateStatus:(id)arg1 params:(id)arg2 ;
-(void)_doMCICDidBeginInstallingNextProfileData:(id)arg1 params:(id)arg2 ;
-(void)_doMCICDidFinish:(id)arg1 params:(id)arg2 ;
-(void)_doMCICRequestUserInput:(id)arg1 params:(id)arg2 ;
-(void)_doMCICPreflightResponse:(id)arg1 params:(id)arg2 ;
-(void)_doMCICShowUserWarnings:(id)arg1 params:(id)arg2 ;
-(void)_doMCICDidRequestCurrentPasscode:(id)arg1 params:(id)arg2 ;
-(void)installProfileData:(id)arg1 options:(id)arg2 interactionDelegate:(id)arg3 ;
-(void)_detectProfiledCrashes;
-(void)_registerSelectorsForInteractionServer:(id)arg1 ;
-(void)_userInputTimerFired;
-(void)_cancelUserInputTimeout;
-(void)_setTimeoutWaitingForUserInputType:(int)arg1 ;
-(void)_tearDownInteractionServer;
-(void)__doMCICDidFinish:(id)arg1 ;
-(id)installedProfileIdentifiers;
-(id)popProfileDataFromHeadOfInstallationQueue;
-(id)popProvisioningProfileDataFromHeadOfInstallationQueue;
-(id)queueFileDataForAcceptance:(id)arg1 originalFileName:(id)arg2 outError:(id*)arg3 ;
-(void)removeProfilesFromInstallationQueue;
-(id)installProfileData:(id)arg1 outError:(id*)arg2 ;
-(void)removeProfileAsyncWithIdentifier:(id)arg1 ;
-(void)removeProfileWithIdentifier:(id)arg1 completion:(/*^block*/ id)arg2 ;
-(id)updateProfileWithIdentifier:(id)arg1 outError:(id*)arg2 ;
-(id)acceptedMIMETypes;
-(id)acceptedFileExtensions;
-(bool)transitionToProfileOverviewUI;
-(bool)transitionToProfileAcceptanceUI;
-(bool)showProfileErrorUIWithProfileIdentifier:(id)arg1 outError:(id*)arg2 ;
-(bool)installProvisioningProfileData:(id)arg1 managingProfileIdentifier:(id)arg2 outError:(id*)arg3 ;
-(bool)removeProvisioningProfileWithUUID:(id)arg1 outError:(id*)arg2 ;
-(void)installProfileData:(id)arg1 interactionDelegate:(id)arg2 ;
-(void)updateProfileWithIdentifier:(id)arg1 interactionDelegate:(id)arg2 ;
-(void)preflightUserInputResponses:(id)arg1 forPayloadIndex:(unsigned long long)arg2 ;
-(void)cancelUserInputResponses;
-(void)submitUserInputResponses:(id)arg1 ;
-(void)respondToWarningsContinueInstallation:(bool)arg1 ;
-(void)respondToCurrentPasscodeRequestContinue:(bool)arg1 passcode:(id)arg2 ;
-(bool)isChaperoned;
-(id)chaperoneOrganization;
-(void)setDelegate:(id)arg1 ;
-(id)profileFromProfileData:(id)arg1 outError:(id*)arg2 ;
-(id)queueProfileDataForAcceptance:(id)arg1 outError:(id*)arg2 ;
-(id)queueProfileDataForInstallation:(id)arg1 outError:(id*)arg2 ;
-(id)queueFileDataForProfileInstallation:(id)arg1 originalFileName:(id)arg2 outError:(id*)arg3 ;
-(bool)isPasscodeRequiredByPolicy;
-(id)passcodeExpiryDate;
-(bool)validatePasscode:(id)arg1 ;
-(bool)validatePasscode:(id)arg1 andUnlockContentProtectedDevice:(bool)arg2 ;
-(bool)applyRestrictionDictionary:(id)arg1 clientType:(id)arg2 clientUUID:(id)arg3 outRestrictionChanged:(bool*)arg4 outEffectiveSettingsChanged:(bool*)arg5 outError:(id*)arg6 ;
-(void)setPasscodeWasSetInBackup:(bool)arg1 ;
-(int)restrictedBoolValueForFeature:(id)arg1 ;
-(id)valueForFeature:(id)arg1 ;
-(id)objectForFeature:(id)arg1 ;
-(int)effectiveRestrictedBoolValueForSetting:(id)arg1 ;
-(void)dealloc;
-(id)_init;
-(void)removeObserver:(id)arg1 ;
-(void).cxx_destruct;
-(void)addObserver:(id)arg1 ;
-(void)checkIn;
-(void)_restrictionDidChange;
-(void)_passcodePolicyDidChange;
-(void)_passcodeDidChange;
-(void)_profileListDidChange;
-(void)_effectiveSettingsDidChange:(id)arg1 ;
-(void)_defaultsDidChange;
-(void)_appWhitelistDidChange:(id)arg1 ;
-(void)_applyToObservers:(/*^block*/ id)arg1 ;
-(void)_internalDefaultsDidChange;
-(void)checkInAsynchronously;
@end

