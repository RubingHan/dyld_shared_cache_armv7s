/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:00:36 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/AppLaunchStats.framework/AppLaunchStats
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AppLaunchStats/AppLaunchStats-Structs.h>
#import <DuetPLLConfigLogger/DuetLoggerProtocol.h>
#import <AppLaunchStats/DuetSaveAndRestore.h>

@protocol OS_dispatch_queue;
@class NSObject, AppLaunchStatsSaveAndRestore, NSDate, NSMutableDictionary, NSMutableArray;

@interface AppLaunchStatsState : NSObject <DuetLoggerProtocol, DuetSaveAndRestore> {

	bool isDeviceInCall;
	bool isDeviceUnderThermalPressure;
	bool isDeviceInGoodCellularCondition;
	bool isDataResourceAvailable;
	bool isFetchPowerResourceAvailable;
	bool isFetchPushPowerResourceAvailable;
	bool isDevicePhoneType;
	bool doUniformBudget;
	bool isWIFIConnected;
	bool isBatteryChargerConnected;
	bool hasCellConnected;
	bool hasWifiConnected;
	NSObject<OS_dispatch_queue>* stateQueue;
	int thermalStatusToken;
	long long globalDataBudgetCap;
	long long globalPowerBudgetCap;
	long long BGDataBudgetCap;
	AppLaunchStatsSaveAndRestore* saveAndRestoreContext;
	NSDate* startTimeStamp;
	NSDate* startTimeStampOOB;
	NSMutableDictionary* appsAliveInLSTDict;
	NSMutableArray* fireDates;
	NSMutableArray* cacheAppsforFullDebug;
	NSMutableArray* dailyLaunchArrays;
	NSMutableArray* recentLaunchArrays;
	NSMutableArray* weeklyLaunchArrays;
	NSMutableArray* appForecastArray;
	NSMutableArray* dataForecastArray;
	unsigned long long appForecastQuality;
	unsigned long long dataForecastQuality;
	NSMutableArray* powerFetchForecastArray;
	NSMutableArray* powerPushForecastArray;
	NSMutableArray* dailyAppForecastSlots;
	NSMutableArray* dailyDataBudgetSlots;
	NSMutableArray* dailyDataBGBudgetSlots;
	NSMutableArray* dailyDataNDISCBudgetSlots;
	NSMutableArray* dailyPowerFetchBudgetSlots;
	NSMutableArray* dailyPowerPushBudgetSlots;
	NSMutableArray* dailyPowerNDISCBudgetSlots;
	long long endofdayDataBudget;
	long long endofdayBGDataBudget;
	long long endofdayNDISCDataBudget;
	bool _enableLiveListCheck;
	bool _enableBlackListCheck;
	bool _enableOpportunisticFetchCheck;
	bool _enableForeGroundAppCheck;
	bool _enableBudgetCheck;
	float _globalNonactivePWPC;
	float _globalFetchPWPC;
	float _globalPushPWPC;
	float _dataWifiMultiplier;
	float _dataCellMultiplier;
	long long globalDataCarryCap;
	long long BGDataCarryCap;
	long long _globalMinSlotData;
	long long _BGMinSlotData;
	long long _globalTimeThreshold;

}

@property (assign) bool isDeviceInCall; 
@property (assign) bool isDeviceUnderThermalPressure; 
@property (readonly) bool isDeviceInGoodCellularCondition; 
@property (assign) bool isDataResourceAvailable; 
@property (assign) bool isFetchPowerResourceAvailable; 
@property (assign) bool isFetchPushPowerResourceAvailable; 
@property (assign) bool doUniformBudget; 
@property (readonly) bool isWIFIConnected; 
@property (assign) bool isBatteryChargerConnected; 
@property (readonly) bool hasCellConnected; 
@property (readonly) bool hasWifiConnected; 
@property (retain) NSMutableDictionary * appsAliveInLSTDict; 
@property (retain) NSMutableArray * fireDates; 
@property (nonatomic,readonly) NSMutableArray * cacheAppsforFullDebug; 
@property (nonatomic,retain) NSMutableArray * dailyLaunchArrays; 
@property (nonatomic,retain) NSMutableArray * recentLaunchArrays; 
@property (nonatomic,retain) NSMutableArray * weeklyLaunchArrays; 
@property (nonatomic,retain) NSMutableArray * appForecastArray; 
@property (nonatomic,retain) NSMutableArray * dataForecastArray; 
@property (assign,nonatomic) unsigned long long appForecastQuality; 
@property (assign,nonatomic) unsigned long long dataForecastQuality; 
@property (nonatomic,retain) NSMutableArray * powerFetchForecastArray; 
@property (nonatomic,retain) NSMutableArray * powerPushForecastArray; 
@property (nonatomic,retain) NSMutableArray * dailyAppForecastSlots; 
@property (nonatomic,retain) NSMutableArray * dailyDataBudgetSlots; 
@property (nonatomic,retain) NSMutableArray * dailyDataBGBudgetSlots; 
@property (nonatomic,retain) NSMutableArray * dailyDataNDISCBudgetSlots; 
@property (nonatomic,retain) NSMutableArray * dailyPowerFetchBudgetSlots; 
@property (nonatomic,retain) NSMutableArray * dailyPowerPushBudgetSlots; 
@property (nonatomic,retain) NSMutableArray * dailyPowerNDISCBudgetSlots; 
@property (nonatomic,readonly) long long globalMinSlotData;                            //@synthesize globalMinSlotData=_globalMinSlotData - In the implementation block
@property (nonatomic,readonly) long long globalDataCarryCap; 
@property (nonatomic,readonly) long long globalDataBudgetCap; 
@property (nonatomic,readonly) long long BGDataBudgetCap; 
@property (nonatomic,readonly) long long BGMinSlotData;                                //@synthesize BGMinSlotData=_BGMinSlotData - In the implementation block
@property (nonatomic,readonly) long long BGDataCarryCap; 
@property (nonatomic,readonly) long long globalTimeThreshold;                          //@synthesize globalTimeThreshold=_globalTimeThreshold - In the implementation block
@property (nonatomic,readonly) float globalNonactivePWPC;                              //@synthesize globalNonactivePWPC=_globalNonactivePWPC - In the implementation block
@property (nonatomic,readonly) float globalFetchPWPC;                                  //@synthesize globalFetchPWPC=_globalFetchPWPC - In the implementation block
@property (nonatomic,readonly) float globalPushPWPC;                                   //@synthesize globalPushPWPC=_globalPushPWPC - In the implementation block
@property (nonatomic,readonly) float dataWifiMultiplier;                               //@synthesize dataWifiMultiplier=_dataWifiMultiplier - In the implementation block
@property (nonatomic,readonly) float dataCellMultiplier;                               //@synthesize dataCellMultiplier=_dataCellMultiplier - In the implementation block
@property (nonatomic,readonly) bool enableLiveListCheck;                               //@synthesize enableLiveListCheck=_enableLiveListCheck - In the implementation block
@property (assign,nonatomic) bool enableBlackListCheck;                                //@synthesize enableBlackListCheck=_enableBlackListCheck - In the implementation block
@property (nonatomic,readonly) bool enableOpportunisticFetchCheck;                     //@synthesize enableOpportunisticFetchCheck=_enableOpportunisticFetchCheck - In the implementation block
@property (nonatomic,readonly) bool enableForeGroundAppCheck;                          //@synthesize enableForeGroundAppCheck=_enableForeGroundAppCheck - In the implementation block
@property (nonatomic,readonly) bool enableBudgetCheck;                                 //@synthesize enableBudgetCheck=_enableBudgetCheck - In the implementation block
@property (assign) long long endofdayDataBudget; 
@property (assign) long long endofdayBGDataBudget; 
@property (assign) long long endofdayNDISCDataBudget; 
-(void)dealloc;
-(id)init;
-(void).cxx_destruct;
-(void)save:(id)arg1 ;
-(void)logAll:(aslclientRef)arg1 withMsg:(aslmsgRef)arg2 withLevel:(int)arg3 ;
-(void)logLight:(aslclientRef)arg1 withMsg:(aslmsgRef)arg2 withLevel:(int)arg3 ;
-(int)reloadConfiguration;
-(void)saveContext:(id)arg1 ;
-(void)restore:(id)arg1 ;
-(id)recentLaunchArrays;
-(id)dailyLaunchArrays;
-(id)weeklyLaunchArrays;
-(void)setDataForecastQuality:(unsigned long long)arg1 ;
-(id)dataForecastArray;
-(unsigned long long)dataForecastQuality;
-(id)appForecastArray;
-(void)setAppForecastQuality:(unsigned long long)arg1 ;
-(unsigned long long)appForecastQuality;
-(id)powerFetchForecastArray;
-(id)powerPushForecastArray;
-(void)setIsDataResourceAvailable:(bool)arg1 ;
-(void)setIsFetchPowerResourceAvailable:(bool)arg1 ;
-(void)setIsFetchPushPowerResourceAvailable:(bool)arg1 ;
-(float)dataWifiMultiplier;
-(float)dataCellMultiplier;
-(void)resetAppsAliveInLSTList;
-(void)updateAppsAliveInLSTList:(id)arg1 ;
-(id)fireDates;
-(void)setFireDates:(id)arg1 ;
-(id)dailyAppForecastSlots;
-(void)addPredictedSlotsToDailyOutOfBandQueue:(id)arg1 ;
-(long long)calculateSlotMinDataBudget:(const char*)arg1 ;
-(long long)calculateDailyDataBudgetFor:(const char*)arg1 ;
-(void)convertPCdistributionToInt:(id)arg1 fetchOver:(float)arg2 array:(id)arg3 dailyInt:(int)arg4 ;
-(int)addToOutOfBandAppList:(long long)arg1 withCacheDict:(id)arg2 withAppList:(id)arg3 ;
-(bool)getInCallStatus;
-(id)popFirstSlotInDailyBudgetQueue:(id)arg1 ;
-(void)addPredictedSlotsToDailyAppForecastQueue:(id)arg1 ;
-(void)addPredictedSlotsToDailyDataBudgetQueue:(id)arg1 forcastquality:(long long)arg2 ;
-(void)addPredictedSlotsToDailyPowerBudgetQueue:(id)arg1 forcastquality:(long long)arg2 batteryCapacity:(id)arg3 ;
-(bool)getAppsAliveInLSTList:(id)arg1 ;
-(bool)isOutOfBand;
-(id)getOutOfBandAppList;
-(bool)hasResourcesAvailable:(bool)arg1 forTriggerType:(int)arg2 ;
-(bool)isChargeOnWifiOn;
-(bool)isDeviceInCall;
-(void)setIsDeviceInCall:(bool)arg1 ;
-(bool)isDeviceUnderThermalPressure;
-(void)setIsDeviceUnderThermalPressure:(bool)arg1 ;
-(bool)isDeviceInGoodCellularCondition;
-(bool)isDataResourceAvailable;
-(bool)isFetchPowerResourceAvailable;
-(bool)isFetchPushPowerResourceAvailable;
-(bool)doUniformBudget;
-(void)setDoUniformBudget:(bool)arg1 ;
-(bool)isWIFIConnected;
-(bool)isBatteryChargerConnected;
-(void)setIsBatteryChargerConnected:(bool)arg1 ;
-(bool)hasCellConnected;
-(bool)hasWifiConnected;
-(id)appsAliveInLSTDict;
-(void)setAppsAliveInLSTDict:(id)arg1 ;
-(id)cacheAppsforFullDebug;
-(void)setDailyLaunchArrays:(id)arg1 ;
-(void)setRecentLaunchArrays:(id)arg1 ;
-(void)setWeeklyLaunchArrays:(id)arg1 ;
-(void)setAppForecastArray:(id)arg1 ;
-(void)setDataForecastArray:(id)arg1 ;
-(void)setPowerFetchForecastArray:(id)arg1 ;
-(void)setPowerPushForecastArray:(id)arg1 ;
-(void)setDailyAppForecastSlots:(id)arg1 ;
-(id)dailyDataBudgetSlots;
-(void)setDailyDataBudgetSlots:(id)arg1 ;
-(id)dailyDataBGBudgetSlots;
-(void)setDailyDataBGBudgetSlots:(id)arg1 ;
-(id)dailyPowerFetchBudgetSlots;
-(void)setDailyPowerFetchBudgetSlots:(id)arg1 ;
-(id)dailyPowerPushBudgetSlots;
-(void)setDailyPowerPushBudgetSlots:(id)arg1 ;
-(id)dailyPowerNDISCBudgetSlots;
-(void)setDailyPowerNDISCBudgetSlots:(id)arg1 ;
-(id)dailyDataNDISCBudgetSlots;
-(void)setDailyDataNDISCBudgetSlots:(id)arg1 ;
-(long long)globalDataCarryCap;
-(long long)globalDataBudgetCap;
-(long long)BGDataBudgetCap;
-(long long)BGDataCarryCap;
-(long long)endofdayDataBudget;
-(void)setEndofdayDataBudget:(long long)arg1 ;
-(long long)endofdayBGDataBudget;
-(void)setEndofdayBGDataBudget:(long long)arg1 ;
-(long long)endofdayNDISCDataBudget;
-(void)setEndofdayNDISCDataBudget:(long long)arg1 ;
-(long long)globalMinSlotData;
-(long long)BGMinSlotData;
-(long long)globalTimeThreshold;
-(float)globalNonactivePWPC;
-(float)globalFetchPWPC;
-(float)globalPushPWPC;
-(bool)enableLiveListCheck;
-(bool)enableBlackListCheck;
-(void)setEnableBlackListCheck:(bool)arg1 ;
-(bool)enableOpportunisticFetchCheck;
-(bool)enableForeGroundAppCheck;
-(bool)enableBudgetCheck;
@end

