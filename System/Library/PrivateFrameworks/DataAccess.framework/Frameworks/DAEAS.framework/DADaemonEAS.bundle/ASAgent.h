/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:01:03 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DAEAS.framework/DADaemonEAS.bundle/DADaemonEAS
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <DADaemonEAS/DADaemonEAS-Structs.h>
#import <DADaemonSupport/DAAgent.h>
#import <DADaemonEAS/ASFolderHierarchyUpdateConsumer.h>
#import <DADaemonEAS/ASFolderHierarchyLocalChangeConsumer.h>
#import <DADaemonEAS/DAPreferredDaysToSyncDidChangeObserver.h>
#import <DADaemonEAS/DAContactsUpdateConsumer.h>
#import <DADaemonEAS/DAEventsUpdateConsumer.h>
#import <DADaemonEAS/DAToDosUpdateConsumer.h>
#import <DADaemonEAS/DANotesUpdateConsumer.h>
#import <DADaemonEAS/DAMessageSendConsumer.h>
#import <DADaemonEAS/DADataclassLockWatcher.h>
#import <BulletinBoard/ABPredicateDelegate.h>
#import <DADaemonEAS/DAMessageMoveRequestConsumer.h>

@class NSMutableDictionary, NSMutableArray, NSMutableSet, NSLock;

@interface ASAgent : DAAgent <ASFolderHierarchyUpdateConsumer, ASFolderHierarchyLocalChangeConsumer, DAPreferredDaysToSyncDidChangeObserver, DAContactsUpdateConsumer, DAEventsUpdateConsumer, DAToDosUpdateConsumer, DANotesUpdateConsumer, DAMessageSendConsumer, DADataclassLockWatcher, ABPredicateDelegate, DAMessageMoveRequestConsumer> {

	CFDictionaryRef _eventCalendarsByFolderId;
	CFDictionaryRef _toDoCalendarsByFolderId;
	CFDictionaryRef _contactStoresByFolderId;
	NSMutableDictionary* _noteStoreObjectIdsByFolderId;
	NSMutableArray* _outstandingFolderRequests;
	NSMutableSet* _currentlySyncingFolderIds;
	NSLock* _folderItemSyncRequestLock;
	NSMutableDictionary* _folderIdToSequentialFailureCount;
	NSMutableDictionary* _folderIdToSequentialServerErrorCount;
	int _numLocalFolderUpdatesInFlight;
	void* _matchedRecord;
	bool _isShuttingDown;
	/*^block*/ id _calUnitTestMergedRequestsBlock;

}
+(void)cleanUpFilesForAccountWithId:(id)arg1 ;
-(id)_copyCalendarItemMoveActionsInCalendar:(void*)arg1 dataHandler:(id)arg2 deleteActionsByFolderId:(id)arg3 ;
-(id)_copyABActionsInContainer:(void*)arg1 existingActions:(id)arg2 dataHandler:(id)arg3 wantPreserveActions:(bool)arg4 outChangeContext:(/*function pointer*/ void**)arg5 ;
-(id)_copyCalendarItemActionsInContainer:(void*)arg1 existingActions:(id)arg2 dataHandler:(id)arg3 wantPreserveActions:(bool)arg4 outChangeContext:(/*function pointer*/ void**)arg5 ;
-(id)_copyNotesActionsInNoteStore:(id)arg1 existingActions:(id)arg2 dataHandler:(id)arg3 wantPreserveActions:(bool)arg4 outChangeSet:(id*)arg5 ;
-(void)_addSimpleChangeForType:(int)arg1 changedItemId:(id)arg2 addedIds:(id)arg3 modifiedIds:(id)arg4 deletedIds:(id)arg5 collapsedIds:(id)arg6 ;
-(void)_addChangeForType:(int)arg1 changedItemId:(id)arg2 changeId:(id)arg3 addedIdsToChangeId:(id)arg4 modifiedIdsToChangeId:(id)arg5 deletedIdsToChangeId:(id)arg6 pseudoDeletedIdsToChangeId:(id)arg7 changeIdsToClear:(id)arg8 ;
-(id)_dbExternalIdForLocalId:(int)arg1 dataclass:(int)arg2 ;
-(void)_handleChangeOnEventWithExchangeId:(id)arg1 localId:(int)arg2 changeType:(int)arg3 eventChangeId:(id)arg4 hasSignificantAttributeChanges:(bool)arg5 container:(void*)arg6 dataHandler:(id)arg7 addedIdsToEventChangeId:(id)arg8 modifiedIdsToEventChangeId:(id)arg9 deletedIdsToEventChangeId:(id)arg10 pseudoDeletedIdsToEventChangeId:(id)arg11 eventChangeIdsToClear:(id)arg12 localToExchangeIdMap:(id)arg13 outShouldSaveDB:(bool*)arg14 ;
-(void)_faultInCalendarSubentitiesInCalendar:(void*)arg1 addedIdsToEventChangeId:(id)arg2 modifiedIdsToEventChangeId:(id)arg3 deletedIdsToEventChangeId:(id)arg4 pseudoDeletedIdsToEventChangeId:(id)arg5 localToExchangeIdMap:(id)arg6 eventChangeIdsToClear:(id)arg7 outRecurrenceId:(int*)arg8 outAlarmId:(int*)arg9 outAttendeeId:(int*)arg10 dataHandler:(id)arg11 ;
-(bool)predicateShouldContinue:(id)arg1 ;
-(bool)predicateShouldContinue:(id)arg1 afterFindingRecord:(void*)arg2 ;
-(id)waiterID;
-(void)_appendSyncRequestForFoldersOfDataclasses:(int)arg1 remoteChanges:(bool)arg2 ;
-(void)_refirePendingCalendarInvitations;
-(void)_appendSyncRequestForFolders:(id)arg1 remoteChanges:(bool)arg2 ;
-(void)_nilOutContainersForDataclasses:(int)arg1 ;
-(void)_appendFolderHierarchyChangesForFoldersOfDataclasses:(int)arg1 ;
-(void)_appendSyncRequestForFoldersOfDataclasses:(int)arg1 ;
-(void)folderContentsUpdate:(id)arg1 ;
-(void*)_copyExistingABRecordForContact:(ASContact*)arg1 matchOnAttributes:(bool)arg2 inStore:(void*)arg3 ;
-(void*)_copyExistingCalRecordForEvent:(ASEvent*)arg1 matchOnAttributes:(bool)arg2 inCalendar:(void*)arg3 ;
-(void*)_copyExistingCalRecordForToDo:(ASToDo*)arg1 matchOnAttributes:(bool)arg2 inCalendar:(void*)arg3 ;
-(id)_copyExistingNoteRecordForNote:(ASNote*)arg1 matchOnAttributes:(bool)arg2 inNoteStore:(id)arg3 ;
-(void)_appendSyncRequest:(id)arg1 ;
-(void)_noteSyncForFolderWithId:(id)arg1 andTitle:(id)arg2 finishedWithSuccess:(bool)arg3 ;
-(void)_queueServerFailureResyncForFolderWithId:(id)arg1 isInitialSync:(bool)arg2 ;
-(void)_fireWaitingFolderItemSyncRequests;
-(void)_folderItemsSyncTask:(id)arg1 failedWithErrorCode:(int)arg2 ;
-(void)_sendMailTask:(id)arg1 failedWithErrorCode:(int)arg2 ;
-(void)_moveItemsTask:(id)arg1 failedWithErrorCode:(int)arg2 ;
-(void*)_copyExistingLocalItemForExchangeItem:(id)arg1 matchOnAttributes:(bool)arg2 inContainer:(void*)arg3 ;
-(bool)_handleAction:(id)arg1 inFolderWithId:(id)arg2 dataclass:(int)arg3 isInitialSync:(bool)arg4 resultingChangeActionsForServer:(id)arg5 eventUUIDsToDrop:(id)arg6 eventUUIDSWithDroppedDeletes:(id)arg7 ;
-(bool)_detectDuplicatedEventFromExchangeEvent:(id)arg1 inFolderWithId:(id)arg2 isInitialSync:(bool)arg3 eventUUIDsToDrop:(id)arg4 eventUUIDSWithDroppedDeletes:(id)arg5 resultingChangeActionsForServer:(id)arg6 outEvent:(id*)arg7 outLocalItem:(const void*)arg8 outDidTouchDB:(bool*)arg9 ;
-(bool)_clearChangeHistoriesWithChangeIdContext:(void*)arg1 dataclass:(int)arg2 inFolderWithId:(id)arg3 pushedActions:(id)arg4 ;
-(void)_syncResultForFolder:(id)arg1 newTag:(id)arg2 previousTag:(id)arg3 actions:(id)arg4 results:(id)arg5 changeIdContext:(void*)arg6 isInitialSync:(bool)arg7 moreAvailable:(bool)arg8 dataclass:(int)arg9 resultingChangeActionsForServer:(id)arg10 pushedActions:(id)arg11 rejectedServerIds:(id)arg12 eventsWithPendingInvitationEmails:(id)arg13 ;
-(void)_finishInitialSyncForFolder:(id)arg1 dataclass:(int)arg2 ;
-(void)_wrapperSyncResultForFolder:(id)arg1 dataclass:(int)arg2 newTag:(id)arg3 previousTag:(id)arg4 actions:(id)arg5 results:(id)arg6 changeIdContext:(void*)arg7 isInitialSync:(bool)arg8 moreAvailable:(bool)arg9 pushedActions:(id)arg10 rejectedServerIds:(id)arg11 ;
-(bool)_finishWithInvitationEvent:(void*)arg1 eventUID:(id)arg2 expectedResponse:(int)arg3 wasMyInvite:(bool)arg4 isStillInvite:(bool)arg5 ;
-(void)_reallyApplyMessageSentWithContext:(void*)arg1 ;
-(void)_reallyFinishInvitationBatch:(id)arg1 ;
-(void)_appendSyncRequest:(id)arg1 atBeginning:(bool)arg2 ;
-(void)_reallySendMoves:(id)arg1 ;
-(void)_reallySyncRequest:(id)arg1 ;
-(void)_syncRequest:(id)arg1 ;
-(bool)_getHierarchyChangeForDataclass:(int)arg1 changedItemId:(int*)arg2 changeType:(int*)arg3 externalId:(id*)arg4 changeTableIndices:(CFArrayRef)arg5 ;
-(bool)_handleLocallyChangedFolderWithChangedItemId:(int)arg1 changeType:(int)arg2 externalId:(id)arg3 changeTableIndices:(CFArrayRef)arg4 dataclass:(int)arg5 ;
-(void)notesFolderWithId:(id)arg1 failedToSyncWithStatus:(int)arg2 error:(id)arg3 ;
-(void)finishWithInvitationBatch:(id)arg1 ;
-(void)meetingResponseFinishedWithStatus:(int)arg1 error:(id)arg2 successfulResponses:(id)arg3 failedResponses:(id)arg4 ;
-(bool)_markEventWithLocalIDAsNeedingInvitationEmail:(int)arg1 parentId:(int)arg2 ;
-(void)_calUnitTestsSetCallbackBlockForRequestMerge:(/*^block*/ id)arg1 ;
-(void)_appendSyncRequestForFolders:(id)arg1 ;
-(void)syncResultForContactsFolder:(id)arg1 newTag:(id)arg2 previousTag:(id)arg3 newSyncToken:(id)arg4 actions:(id)arg5 results:(id)arg6 changeIdContext:(SCD_Struct_AS0*)arg7 isInitialSync:(bool)arg8 moreAvailable:(bool)arg9 pushedActions:(id)arg10 ;
-(void)syncResultForEventsFolder:(id)arg1 newTag:(id)arg2 previousTag:(id)arg3 actions:(id)arg4 results:(id)arg5 changeIdContext:(SCD_Struct_AS1*)arg6 isInitialSync:(bool)arg7 moreAvailable:(bool)arg8 pushedActions:(id)arg9 rejectedServerIds:(id)arg10 ;
-(void)syncResultForToDosFolder:(id)arg1 newTag:(id)arg2 previousTag:(id)arg3 actions:(id)arg4 results:(id)arg5 changeIdContext:(SCD_Struct_AS1*)arg6 isInitialSync:(bool)arg7 moreAvailable:(bool)arg8 pushedActions:(id)arg9 rejectedServerIds:(id)arg10 ;
-(void)syncResultForNotesFolder:(id)arg1 noteContext:(id)arg2 newTag:(id)arg3 previousTag:(id)arg4 actions:(id)arg5 results:(id)arg6 changeSet:(id)arg7 notesToDeleteAfterSync:(id)arg8 isInitialSync:(bool)arg9 moreAvailable:(bool)arg10 ;
-(void)actionFailed:(int)arg1 forTask:(id)arg2 error:(id)arg3 ;
-(void)messageSentWithContext:(void*)arg1 ;
-(void)resultsForMessageMove:(id)arg1 ;
-(void)startMonitoring;
-(void)dealloc;
-(void)_tearDownABNotifications;
-(void)_tearDownCalNotifications;
-(void)_tearDownNotesNotifications;
-(id)_noteAccountObject:(bool)arg1 ;
-(void*)_newABSourceForDAFolder:(id)arg1 ;
-(void*)_containerForFolderWithId:(id)arg1 dataclass:(int)arg2 ;
-(void*)_newCalCalendarForDAFolder:(id)arg1 ;
-(id)_newNoteSourceForDAFolder:(id)arg1 ;
-(void)_syncAllContactFoldersWithRemoteChanges:(bool)arg1 ;
-(void)_syncAllEventsFoldersWithRemoteChanges:(bool)arg1 ;
-(void)_syncAllToDosFoldersWithRemoteChanges:(bool)arg1 ;
-(void)_syncAllNotesFoldersWithRemoteChanges:(bool)arg1 ;
-(id)foldersForFolderIDs:(id)arg1 andDataclasses:(int)arg2 ;
-(void)_syncAllContactsEventsToDosAndNotesFolders;
-(void)_openLocalDBConnections;
-(bool)_abBestEffortApplyNewFolders:(id)arg1 oldFolders:(id)arg2 shouldCreateFoldersMissingInDB:(bool)arg3 ;
-(bool)_calBestEffortApplyNewFolders:(id)arg1 oldFolders:(id)arg2 shouldCreateFoldersMissingInDB:(bool)arg3 ;
-(bool)_notesBestEffortApplyNewFolders:(id)arg1 oldFolders:(id)arg2 shouldCreateFoldersMissingInDB:(bool)arg3 ;
-(void)_cacheFoldersForDataclasses:(int)arg1 ;
-(void)_removeABSourceForDAFolder:(id)arg1 ;
-(void)_removeCalCalendarForDAFolder:(id)arg1 ;
-(void)_removeNoteSourceForDAFolder:(id)arg1 ;
-(void)_updateFolderHierarchyRequireChangedFolders:(bool)arg1 ;
-(bool)_closeLocalDBConnectionsWithoutSaving;
-(void)_verifySearchStore;
-(void)refreshFolderListRequireChangedFolders:(bool)arg1 isUserRequested:(bool)arg2 ;
-(void)folderHierarchyUpdateNotification:(id)arg1 ;
-(void)folderHierarchyUpdateRequireChangedFoldersNotification:(id)arg1 ;
-(void)_setUpABNotifications;
-(void)_setUpCalNotifications;
-(void)_setUpNotesNotifications;
-(id)_parentIdFromEventId:(id)arg1 ;
-(void)folderHierarchySuccessfullyUpdated:(void*)arg1 withNumChangedFolders:(unsigned long long)arg2 ;
-(void)folderHierarchyFailedToUpdate:(void*)arg1 withStatus:(int)arg2 andError:(id)arg3 ;
-(void)localChangeForFolder:(id)arg1 finishedWithStatus:(int)arg2 andError:(id)arg3 completionBlock:(/*^block*/ id)arg4 ;
-(void)preferredDaysToSyncDidChange;
-(void)syncFolderIDs:(id)arg1 forDataclasses:(int)arg2 isUserRequested:(bool)arg3 ;
-(void)_handleDaemonBackedLocalFolderChangeWithDBChangeIndices:(CFArrayRef)arg1 oldFolders:(id)arg2 status:(int)arg3 error:(id)arg4 ;
-(void)processDAFolderChange:(id)arg1 withCompletionBlock:(/*^block*/ id)arg2 ;
-(void)processMeetingRequestDatas:(id)arg1 deliveryIdsToClear:(id)arg2 deliveryIdsToSoftClear:(id)arg3 inFolderWithId:(id)arg4 callback:(/*^block*/ id)arg5 ;
-(void)requestAgentStopMonitoringWithCompletionBlock:(/*^block*/ id)arg1 ;
-(id)_exchangeIdForLocalId:(id)arg1 inContainer:(void*)arg2 dataclass:(int)arg3 redirectToParent:(bool)arg4 ;
-(id)_localIdForExchangeId:(id)arg1 inContainer:(void*)arg2 dataclass:(int)arg3 ;
-(id)_syncKeyForFolderWithId:(id)arg1 ;
-(void)_setSyncKey:(id)arg1 forFolderWithId:(id)arg2 ;
-(id)initWithAccount:(id)arg1 ;
@end

