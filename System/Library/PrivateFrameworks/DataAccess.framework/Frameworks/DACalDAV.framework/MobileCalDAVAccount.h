/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:01:01 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DACalDAV.framework/DACalDAV
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <DACalDAV/DACalDAV-Structs.h>
#import <DataAccess/DAAccount.h>

@class NSMutableDictionary, MobileCalDAVPrincipal, NSMutableSet, NSString, CalDAVPrincipalSearchPropertySet, CoreDAVDiscoveryTaskGroup, MobileCalDAVAccountRefreshActor, CalDAVRefreshContext, DACoreDAVLogger, CalDAVServerVersion, DACoreDAVTaskManager, NSDictionary, NSURL, NSSet, NSTimeZone, NSDate;

@interface MobileCalDAVAccount : DAAccount {

	NSMutableDictionary* _principals;
	MobileCalDAVPrincipal* _mainPrincipal;
	int _preferredEventDaysToSync;
	int _preferredToDoDaysToSync;
	NSMutableSet* _calendars;
	bool _subscribedCalendarsChanged;
	NSString* _collectionSetName;
	CalDAVPrincipalSearchPropertySet* _searchPropertySet;
	CoreDAVDiscoveryTaskGroup* _checkValidityTaskGroup;
	MobileCalDAVAccountRefreshActor* _actor;
	bool _isRefreshing;
	bool _isSpinning;
	bool _needsAccountPropertyRefresh;
	CalDAVRefreshContext* _refreshContext;
	NSMutableSet* _searchTaskSet;
	DACoreDAVLogger* _curLogger;
	CalDAVServerVersion* _serverVersion;
	NSMutableDictionary* _itemIDsToMoveActions;
	NSMutableSet* _movedItemURLStrings;
	int _wasMigrated;
	bool _searchQueriesShouldCancel;
	int _calDAVAccountVersion;

}

@property (nonatomic,readonly) DACoreDAVTaskManager * taskManager; 
@property (retain) MobileCalDAVPrincipal * mainPrincipal;                       //@synthesize mainPrincipal=_mainPrincipal - In the implementation block
@property (readonly) NSDictionary * principals;                                 //@synthesize principals=_principals - In the implementation block
@property (retain) NSURL * collectionSetURL; 
@property (retain) id searchPropertySet; 
@property (retain) NSString * overriddenServer; 
@property (retain) NSString * overriddenScheme; 
@property (assign) int overriddenPort; 
@property (assign) bool isWritable; 
@property (assign) bool wasMigrated; 
@property (assign) bool needsAccountPropertyRefresh;                            //@synthesize needsAccountPropertyRefresh=_needsAccountPropertyRefresh - In the implementation block
@property (assign) bool isRefreshing;                                           //@synthesize isRefreshing=_isRefreshing - In the implementation block
@property (readonly) NSMutableDictionary * itemIDsToMoveActions;                //@synthesize itemIDsToMoveActions=_itemIDsToMoveActions - In the implementation block
@property (readonly) NSSet * movedItemURLStrings;                               //@synthesize movedItemURLStrings=_movedItemURLStrings - In the implementation block
@property (readonly) NSSet * calendars; 
@property (nonatomic,retain) NSDictionary * subscribedCalendars; 
@property (nonatomic,copy) NSString * calendarHomeSyncToken; 
@property (assign) int calDAVAccountVersion;                                    //@synthesize calDAVAccountVersion=_calDAVAccountVersion - In the implementation block
@property (assign) CalDAVServerVersion * serverVersion; 
@property (assign) int preferredEventDaysToSync;                                //@synthesize preferredEventDaysToSync=_preferredEventDaysToSync - In the implementation block
@property (assign) int preferredToDoDaysToSync;                                 //@synthesize preferredToDoDaysToSync=_preferredToDoDaysToSync - In the implementation block
@property (readonly) NSTimeZone * viewedTimeZone; 
@property (readonly) NSDate * ocurrenceCacheStartDate; 
@property (readonly) NSDate * ocurrenceCacheEndDate; 
@property (readonly) bool shouldFilterEventSyncTimeRange; 
@property (readonly) bool shouldFilterTodoSyncTimeRange; 
@property (readonly) bool shouldFilterSyncTimeRangeForInbox; 
@property (readonly) bool shouldUseCalendarHomeSyncReport; 
@property (readonly) bool supportsReminders; 
@property (readonly) bool supportsEvents; 
@property (retain) CalDAVRefreshContext * refreshContext;                       //@synthesize refreshContext=_refreshContext - In the implementation block
@property (assign) bool searchQueriesShouldCancel;                              //@synthesize searchQueriesShouldCancel=_searchQueriesShouldCancel - In the implementation block
-(id)calendars;
-(void)removeCalendar:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(bool)isRefreshing;
-(void)noteHomeSetOnDifferentHost:(id)arg1 ;
-(void)task:(id)arg1 didFinishWithError:(id)arg2 ;
-(void)setPrincipalURL:(id)arg1 ;
-(void)discoveryTask:(id)arg1 gotAccountInfo:(id)arg2 error:(id)arg3 ;
-(long long)coreDAVLogLevel;
-(long long)coreDAVOutputLevel;
-(void)coreDAVLogDiagnosticMessage:(id)arg1 atLevel:(long long)arg2 ;
-(bool)shouldLogTransmittedData;
-(void)coreDAVLogTransmittedDataPartial:(id)arg1 ;
-(void)coreDAVTransmittedDataFinished;
-(void)retainPowerAssertion;
-(void)releasePowerAssertion;
-(id)principalPath;
-(void)setPrincipalPath:(id)arg1 ;
-(id)mainPrincipal;
-(void)addPrincipal:(id)arg1 ;
-(void)setSearchPropertySet:(id)arg1 ;
-(void)setIsWritable:(bool)arg1 ;
-(void)setServerVersion:(id)arg1 ;
-(void)setNeedsAccountPropertyRefresh:(bool)arg1 ;
-(bool)saveModifiedPropertiesOnBackingAccount;
-(bool)upgradeAccount;
-(id)overriddenServer;
-(int)overriddenPort;
-(id)overriddenScheme;
-(void)_updateCalendarStore:(bool)arg1 ;
-(void*)copyCalStore;
-(id)serverVersion;
-(id)viewedTimeZone;
-(int)preferredEventDaysToSync;
-(int)preferredToDoDaysToSync;
-(bool)shouldFilterEventSyncTimeRange;
-(bool)shouldFilterTodoSyncTimeRange;
-(id)_calendarConstraintsResource;
-(id)calendarHomeSyncToken;
-(id)_calendarConstraintsPath;
-(bool)supportsReminders;
-(bool)supportsEvents;
-(bool)_updateCalendarStoreProperties:(void*)arg1 ;
-(bool)_updateCalendarStoreNoDBOpen:(bool)arg1 ;
-(void)_clearOrphanedCalendarItemChangesOfType:(int)arg1 withContext:(id)arg2 goodCalendarIds:(id)arg3 ;
-(void)_clearOrphanedChangesWithChangesCall:(/*function pointer*/ void*)arg1 clearChanges:(/*function pointer*/ void*)arg2 withContext:(id)arg3 ;
-(bool)_saveModifiedPrincipalsOnBackingAccount;
-(bool)_saveModifiedSubscribedCalendarsOnBackingAccount;
-(id)refreshContext;
-(bool)wasMigrated;
-(void)setWasMigrated:(bool)arg1 ;
-(void)_clearOrphanedChangesWithContext:(id)arg1 ;
-(void)setRefreshContext:(id)arg1 ;
-(void)setIsRefreshing:(bool)arg1 ;
-(id)_collectActionsFromMoveDictionary:(CFDictionaryRef)arg1 forDataclass:(id)arg2 outShouldSave:(bool*)arg3 ;
-(void)_collectMoveActions;
-(id)searchPropertySet;
-(id)collectionSetURL;
-(id)wellKnownPaths;
-(id)_powerAssertionContext;
-(id)_powerAssertionGroupIdentifier;
-(void)ingestBackingAccountInfoProperties;
-(void)setSubscribedCalendars:(id)arg1 ;
-(id)subscribedCalendars;
-(void)setOverriddenServer:(id)arg1 ;
-(void)setOverriddenPort:(int)arg1 ;
-(void)setOverriddenScheme:(id)arg1 ;
-(id)serverBaseURL;
-(void)setCollectionSetURL:(id)arg1 ;
-(void)addCalendar:(id)arg1 ;
-(void)removeCalendarWithURL:(id)arg1 ;
-(void)reloadCalendars;
-(void)removePrincipal:(id)arg1 ;
-(id)ocurrenceCacheStartDate;
-(id)ocurrenceCacheEndDate;
-(bool)shouldFilterSyncTimeRangeForInbox;
-(bool)shouldUseCalendarHomeSyncReport;
-(void)setCalendarHomeSyncToken:(id)arg1 ;
-(id)spinnerIdentifiers;
-(void)cancelRefreshWithCompletion:(/*^block*/ id)arg1 ;
-(void)refreshActor:(id)arg1 didCompleteWithError:(id)arg2 ;
-(void)refreshWithContext:(id)arg1 ;
-(void)dropPowerAssertions;
-(void)reattainPowerAssertions;
-(bool)isCalDAVAccount;
-(bool)needsAccountPropertyRefresh;
-(id)itemIDsToMoveActions;
-(id)movedItemURLStrings;
-(void)setMainPrincipal:(id)arg1 ;
-(id)principals;
-(void)setPreferredEventDaysToSync:(int)arg1 ;
-(void)setPreferredToDoDaysToSync:(int)arg1 ;
-(bool)searchQueriesShouldCancel;
-(void)setSearchQueriesShouldCancel:(bool)arg1 ;
-(int)calDAVAccountVersion;
-(void)setCalDAVAccountVersion:(int)arg1 ;
-(id)taskManager;
-(id)initWithBackingAccountInfo:(id)arg1 ;
-(bool)accountHasSignificantPropertyChangesFromOldAccountInfo:(id)arg1 ;
-(void)discoverInitialPropertiesWithConsumer:(id)arg1 ;
-(void)_reallyCancelSearchQuery:(id)arg1 ;
-(void)_reallyCancelAllSearchQueries;
-(void)_reallyPerformSearchQuery:(id)arg1 ;
-(bool)_reallySearchQueriesRunning;
-(bool)isEqualToAccount:(id)arg1 ;
-(id)localizedIdenticalAccountFailureMessage;
-(id)localizedInvalidPasswordMessage;
-(id)onBehalfOfBundleIdentifier;
-(void)_setSpinning:(bool)arg1 ;
-(void)setAccountDescription:(id)arg1 ;
-(bool)isWritable;
@end

