/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:01:01 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DACalDAV.framework/DACalDAV
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol CalDAVPrincipal <NSObject,CoreDAVAccountInfoProvider>
@property (readonly) NSString * uid; 
@property (readonly) <CalDAVAccount> * account; 
@property (readonly) <CoreDAVTaskManager> * taskManager; 
@property (retain) NSSet * calendarUserAddresses; 
@property (retain) NSString * fullName; 
@property (retain) NSURL * calendarHomeURL; 
@property (retain) NSString * calendarHomeSyncToken; 
@property (retain) NSURL * principalURL; 
@property (retain) NSURL * defaultCalendarURL; 
@property (retain) NSURL * notificationCollectionURL; 
@property (retain) NSString * notificationCollectionCTag; 
@property (retain) NSURL * inboxURL; 
@property (retain) NSString * inboxCTag; 
@property (retain) NSURL * outboxURL; 
@property (retain) NSURL * dropBoxURL; 
@property (retain) NSString * notificationURLString; 
@property (retain) NSDictionary * pushTransports; 
@property (retain) NSString * calendarHomePushKey; 
@property (retain) NSNumber * quotaFreeBytes; 
@property (retain) NSString * supportedCalendarComponentSets; 
@property (assign) bool isDelegate; 
@property (assign) bool isWritable; 
@property (assign) bool canCreateCalendars; 
@property (assign) bool isEnabled; 
@property (readonly) bool isMergeSync; 
@property (readonly) bool isEnabledForEvents; 
@property (readonly) bool isEnabledForTodos; 
@property (readonly) NSDateComponents * eventFilterStartDate; 
@property (readonly) NSDateComponents * eventFilterEndDate; 
@property (readonly) NSDateComponents * todoFilterStartDate; 
@property (readonly) NSDateComponents * todoFilterEndDate; 
@property (assign) bool isExpandPropertyReportSupported; 
@property (assign) bool supportsFreebusy; 
@property (readonly) bool supportsExtendedCalendarQuery; 
@property (readonly) NSSet * calendars; 
@property (readonly) NSSet * addedCalendars; 
@property (readonly) NSSet * modifiedCalendars; 
@property (readonly) NSSet * deletedCalendarURLs; 
@optional
-(void)prepareCalendarsForSyncWithCompletionBlock:(/*^block*/ id)arg1;
-(id)defaultEventCalendarTitle;
-(id)defaultTodoCalendarTitle;

@required
-(id)calendars;
-(void)removeCalendar:(id)arg1;
-(bool)isEnabled;
-(void)setIsEnabled:(bool)arg1;
-(id)uid;
-(id)pushTransports;
-(void)setPushTransports:(id)arg1;
-(void)setPrincipalURL:(id)arg1;
-(bool)isExpandPropertyReportSupported;
-(void)setIsWritable:(bool)arg1;
-(id)calendarHomeURL;
-(id)supportedCalendarComponentSets;
-(id)calendarHomeSyncToken;
-(bool)canCreateCalendars;
-(void)setCalendarHomeSyncToken:(id)arg1;
-(id)calendarUserAddresses;
-(id)defaultCalendarURL;
-(id)notificationCollectionURL;
-(id)notificationCollectionCTag;
-(id)inboxURL;
-(id)inboxCTag;
-(id)outboxURL;
-(id)dropBoxURL;
-(id)notificationURLString;
-(id)calendarHomePushKey;
-(bool)isDelegate;
-(bool)supportsFreebusy;
-(id)quotaFreeBytes;
-(bool)supportsExtendedCalendarQuery;
-(id)calendarOfType:(int)arg1 atURL:(id)arg2 withOptions:(id)arg3;
-(void)removecalendarWithURL:(id)arg1;
-(void)setCalendarUserAddresses:(id)arg1;
-(void)setCalendarHomeURL:(id)arg1;
-(void)setDefaultCalendarURL:(id)arg1;
-(void)setNotificationCollectionURL:(id)arg1;
-(void)setNotificationCollectionCTag:(id)arg1;
-(void)setInboxURL:(id)arg1;
-(void)setInboxCTag:(id)arg1;
-(void)setOutboxURL:(id)arg1;
-(void)setDropBoxURL:(id)arg1;
-(void)setNotificationURLString:(id)arg1;
-(void)setCalendarHomePushKey:(id)arg1;
-(void)setQuotaFreeBytes:(id)arg1;
-(void)setSupportedCalendarComponentSets:(id)arg1;
-(void)setIsDelegate:(bool)arg1;
-(void)setCanCreateCalendars:(bool)arg1;
-(bool)isMergeSync;
-(bool)isEnabledForEvents;
-(bool)isEnabledForTodos;
-(id)eventFilterStartDate;
-(id)eventFilterEndDate;
-(id)todoFilterStartDate;
-(id)todoFilterEndDate;
-(void)setIsExpandPropertyReportSupported:(bool)arg1;
-(void)setSupportsFreebusy:(bool)arg1;
-(id)addedCalendars;
-(id)modifiedCalendars;
-(id)deletedCalendarURLs;
-(id)taskManager;
-(id)principalURL;
-(id)account;
-(bool)isWritable;
-(id)fullName;
-(void)setFullName:(id)arg1;
@end

