/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:01:06 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DASubCal.framework/DASubCal
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <DataAccess/DAAccount.h>

@class NSData, NSString, NSDictionary, NSURL, DACoreDAVTaskManager;

@interface SubCalAccount : DAAccount {

	NSData* _tmpICSData;
	bool _didTrySSL;
	bool _isManagedCalendar;
	bool _isHolidaySubscribedCalendar;
	int _subCalAccountVersion;

}

@property (assign,nonatomic) bool shouldRemoveAlarms; 
@property (nonatomic,retain) NSString * syncId; 
@property (nonatomic,retain) NSDictionary * externalRepresentation; 
@property (nonatomic,readonly) NSURL * subscriptionURL; 
@property (nonatomic,retain) NSString * calDAVURLString; 
@property (nonatomic,readonly) NSString * calendarExternalId; 
@property (assign,nonatomic) bool isManagedCalendar;                             //@synthesize isManagedCalendar=_isManagedCalendar - In the implementation block
@property (assign,nonatomic) bool isHolidaySubscribedCalendar;                   //@synthesize isHolidaySubscribedCalendar=_isHolidaySubscribedCalendar - In the implementation block
@property (nonatomic,readonly) DACoreDAVTaskManager * taskManager; 
@property (assign,nonatomic) int subCalAccountVersion;                           //@synthesize subCalAccountVersion=_subCalAccountVersion - In the implementation block
-(int)subCalAccountVersion;
-(bool)isHolidaySubscribedCalendar;
-(void)setIsHolidaySubscribedCalendar:(bool)arg1 ;
-(void)setHost:(id)arg1 ;
-(void)dealloc;
-(id)subscriptionURL;
-(void)removeDBSyncData;
-(bool)isSubscribedCalendarAccount;
-(id)taskManager;
-(id)initWithBackingAccountInfo:(id)arg1 ;
-(bool)accountHasSignificantPropertyChangesFromOldAccountInfo:(id)arg1 ;
-(void)discoverInitialPropertiesWithConsumer:(id)arg1 ;
-(bool)isEqualToAccount:(id)arg1 ;
-(id)localizedIdenticalAccountFailureMessage;
-(id)localizedInvalidPasswordMessage;
-(id)onBehalfOfBundleIdentifier;
-(id)externalRepresentation;
-(void)setExternalRepresentation:(id)arg1 ;
-(void)handleTrustChallenge:(id)arg1 forTask:(id)arg2 ;
-(id)tmpICSData;
-(void)setTmpICSData:(id)arg1 ;
-(id)calendarExternalId;
-(bool)isManagedCalendar;
-(void)refreshAllCalendars:(bool)arg1 ;
-(id)calDAVURLString;
-(bool)shouldRemoveAlarms;
-(void)clearTmpICSData;
-(void)saveTmpICSData;
-(void)quickValidate:(id)arg1 ;
-(bool)hasSubscribedCalendarAtURL:(id)arg1 ;
-(void)_checkValidityWithConsumer:(id)arg1 quickValidate:(bool)arg2 forceSSL:(bool)arg3 ;
-(void)_checkValidityWithConsumer:(id)arg1 quickValidate:(bool)arg2 ;
-(id)_tmpICSCalendarPath;
-(id)syncId;
-(void)setCalDAVURLString:(id)arg1 ;
-(void)subCalValidationTask:(id)arg1 finishedWithError:(id)arg2 calendarName:(id)arg3 calendarData:(id)arg4 ;
-(void)upgradeAccountSpecificPropertiesOnAccount:(id)arg1 inStore:(id)arg2 parentAccount:(id)arg3 ;
-(void)setSyncId:(id)arg1 ;
-(void)setShouldRemoveAlarms:(bool)arg1 ;
-(void)setIsManagedCalendar:(bool)arg1 ;
-(void)setSubCalAccountVersion:(int)arg1 ;
-(id)accountDescription;
-(void)setAccountDescription:(id)arg1 ;
@end

