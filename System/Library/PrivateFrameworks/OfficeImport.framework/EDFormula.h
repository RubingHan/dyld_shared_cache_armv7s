/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:01:47 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <OfficeImport/OfficeImport-Structs.h>
#import <OfficeImport/EDFormulaBuilding.h>

@interface EDFormula : NSObject <EDFormulaBuilding> {

	CFDataRef mPackedData;

}
+(id)formula;
+(id)messageForWarning:(int)arg1 ;
-(void)unarchiveFromData:(CFDataRef)arg1 offset:(unsigned long long*)arg2 ;
-(void)archiveByAppendingToMutableData:(CFDataRef)arg1 ;
-(EDToken*)tokenAtIndex:(unsigned)arg1 ;
-(void)dealloc;
-(id)init;
-(unsigned)tokenCount;
-(bool)copyTokenAtIndex:(unsigned)arg1 fromFormula:(id)arg2 ;
-(char*)addToken:(int)arg1 extendedDataLength:(unsigned)arg2 ;
-(int)tokenTypeAtIndex:(unsigned)arg1 ;
-(char*)extendedDataForTokenAtIndex:(unsigned)arg1 extendedDataIndex:(unsigned)arg2 length:(unsigned*)arg3 ;
-(bool)addArrayWithCol:(int)arg1 andRow:(int)arg2 ;
-(void)setWarning:(int)arg1 ;
-(char*)lastExtendedDataForTokenAtIndex:(unsigned)arg1 length:(unsigned*)arg2 ;
-(bool)isSupportedFormula;
-(bool)isCleaned;
-(void)removeAllTokens;
-(bool)setupTokensWithTokensCount:(unsigned)arg1 tokensWithDataCount:(unsigned)arg2 extendedDataLength:(unsigned)arg3 extendedDataCount:(unsigned)arg4 ;
-(void)setCleaned:(bool)arg1 ;
-(id)originalFormulaString;
-(void)replaceTokenTypeAtIndex:(unsigned)arg1 withType:(int)arg2 ;
-(void)populateXlPtg:(XlPtg*)arg1 index:(unsigned)arg2 ;
-(bool)copyTokenFromXlPtg:(XlPtg*)arg1 ;
-(bool)isBaseFormula;
-(ChVector<XlPtg *>*)xlPtgs;
-(char*)setExtendedDataForLastTokenAtIndex:(unsigned)arg1 length:(unsigned)arg2 ;
-(bool)addToken:(int)arg1 extendedDataLength:(unsigned)arg2 extendedDataCount:(unsigned)arg3 ;
-(char*)addToken:(int)arg1 extendedDataLength:(unsigned)arg2 numArgs:(int)arg3 ;
-(bool)convertToList:(unsigned)arg1 withFinalParen:(bool)arg2 ;
-(bool)convertRefs:(unsigned)arg1 toTypes:(int*)arg2 ;
-(bool)shrinkSpanningRefAtArgIndex:(unsigned)arg1 ;
-(bool)insertExternalName:(unsigned long long)arg1 withLink:(unsigned long long)arg2 atIndex:(unsigned)arg3 ;
-(bool)convertToList:(unsigned)arg1 ;
-(bool)convertToIntersect:(unsigned)arg1 ;
-(bool)convertLastRefsToArea;
-(id)lastTokenRefOrArea3dLinkRefIsValid:(bool*)arg1 withEDLinks:(id)arg2 ;
-(void)markLastTokenAsDuration;
-(void)markLastTokenAsSpanningRefVertically:(bool)arg1 withMin:(unsigned short)arg2 andMax:(unsigned short)arg3 ;
-(int)warningType;
-(char*)setExtendedDataAtIndex:(unsigned)arg1 extendedDataIndex:(unsigned)arg2 length:(unsigned)arg3 ;
-(void)setupExtendedDataForTokenAtIndex:(unsigned)arg1 extendedDataLength:(unsigned)arg2 extendedDataCount:(unsigned)arg3 ;
-(unsigned)firstTokenIndexForArgAtIndex:(unsigned)arg1 ;
-(bool)removeTokenAtIndex:(unsigned)arg1 ;
-(id)saveArgs:(unsigned)arg1 andDelete:(bool)arg2 ;
-(id)initWithFormula:(id)arg1 ;
-(unsigned)countExtendedDataForTokenAtIndex:(unsigned)arg1 ;
-(bool)replaceTokenAtIndex:(unsigned)arg1 withFormula:(id)arg2 formulaTokenIndex:(unsigned)arg3 ;
-(void)setOriginalFormulaString:(id)arg1 ;
-(id)warning;
-(id)warningParameter;
-(void)setWarningParameter:(id)arg1 ;
-(bool)isContainsRelativeReferences;
-(void)updateContainsRelativeReferences:(bool)arg1 ;
-(bool)isCleanedWithEvaluationStack;
-(void)updateCleanedWithEvaluationStack:(bool)arg1 ;
-(bool)isSharedFormula;
@end

