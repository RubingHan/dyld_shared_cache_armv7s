/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:01:10 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/AVConference.framework/AVConference
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
#import <AVConference/AVConference-Structs.h>
@class NSMutableDictionary, NSObject;

@interface VCTransport : NSObject {

	tagHANDLE* tpHandle;
	NSMutableDictionary* iceBlocks;
	NSObject<OS_dispatch_queue>* delegateQueue;

}
+(id)sharedInstance;
-(void)dealloc;
-(id)init;
-(void)cleanup;
-(int)detailedErrorCodeForConnectionWithCallID:(unsigned)arg1 ;
-(int)stopConnectivityCheckForCallID:(unsigned)arg1 ;
-(int)discardRelayBindingForCallID:(unsigned)arg1 ;
-(bool)ipPortStillExists:(tagIPPORT*)arg1 requiresWifi:(bool)arg2 ;
-(void)registerICEBlockForCallID:(unsigned)arg1 block:(/*^block*/ id)arg2 ;
-(int)setSKEState:(SKEStateOpaqueRef)arg1 forCallID:(unsigned)arg2 ;
-(int)processRemoteInterfaceChange:(unsigned)arg1 remoteData:(void*)arg2 remoteLen:(int)arg3 ;
-(int)sendUDPPacketReliableEncrypted:(id)arg1 localIPPort:(tagIPPORT*)arg2 destinationIPPort:(tagIPPORT*)arg3 oftType:(int)arg4 ;
-(int)updateInterfaceList:(bool)arg1 isUpdateNeeded:(int*)arg2 ;
-(int)getConnectionDataForCallID:(unsigned)arg1 version:(unsigned char)arg2 useCompressedData:(bool)arg3 pConnectionData:(void*)arg4 connectDataSizeInBytes:(int*)arg5 relayDictionary:(CFDictionaryRef)arg6 interfaceUpdate:(bool)arg7 nonCellularCandidateTimeout:(double)arg8 ;
-(int)getLoopbackIP:(tagIPPORT*)arg1 ;
-(int)setupDTLSSecurity:(unsigned)arg1 connectionResult:(tagCONNRESULT*)arg2 completionHandler:(/*^block*/ id)arg3 ;
-(int)setICETimeout:(double)arg1 ;
-(int)processConnectionResultChange:(tagCONNRESULT*)arg1 newResult:(tagCONNRESULT*)arg2 ;
-(int)flushBasebandQueue:(void*)arg1 ;
-(int)getSignalStrength:(int*)arg1 signalRaw:(int*)arg2 signalGrade:(int*)arg3 ;
-(int)getCellTechForCallID:(unsigned)arg1 localCellTech:(int*)arg2 isLocalCellularQoSEnabled:(int*)arg3 remoteCellTech:(int*)arg4 isRemoteCellularQoSEnabled:(int*)arg5 ;
-(int)setupBaseband:(tagCONNRESULT*)arg1 ;
-(int)updateQoS:(bool)arg1 ;
-(int)updateICERoleForCallID:(unsigned)arg1 role:(int)arg2 remoteCallID:(unsigned)arg3 sessionID:(CFStringRef)arg4 ;
-(int)setForceRelayForCallID:(unsigned)arg1 ;
-(int)setForceIPv6ForCallID:(unsigned)arg1 ;
-(int)startConnectionCheckForCallID:(unsigned)arg1 remoteConnectionDataBlob:(id)arg2 relayDictionary:(id)arg3 iceTimeout:(double)arg4 securityIdentity:(SecIdentityRef)arg5 skeState:(SKEStateOpaqueRef)arg6 usedRelay:(int*)arg7 ;
-(int)updateQualityIndicator:(int)arg1 isIPv6:(bool)arg2 ;
-(void)setARPLHandler:(/*^block*/ id)arg1 ;
-(void)iceConnectedForCallID:(unsigned)arg1 result:(tagCONNRESULT*)arg2 didReceivePacket:(int)arg3 useRelay:(int)arg4 secretKey:(CFDataRef)arg5 skeResult:(int)arg6 ;
@end

