/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:01:09 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/AVConference.framework/AVConference
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol AVConferenceDelegate;
#import <AVConference/AVConference-Structs.h>
@class AVConferenceXPCClient, NSObject, NSDictionary, CALayer, NSTimer;

@interface AVConference : NSObject {

	id weakAVConference;
	AVConferenceXPCClient* connection;
	id opaqueConf;
	bool useServer;
	bool runningInServer;
	NSObject<AVConferenceDelegate>* delegate;
	NSDictionary* serverBag;
	CALayer* remoteLayerFront;
	CALayer* remoteLayerBack;
	CALayer* remoteSubLayerFront;
	CALayer* remoteSubLayerBack;
	bool shouldDisplayVideoInfoLayer;
	bool shouldDisplayVideoInfoLayer_;
	bool shouldDisplayNetworkQualityGraph_;
	NSTimer* networkQualityUpdateTimer_;
	CALayer* networkQualityGraphLayer_;

}

@property (assign) bool shouldDisplayNetworkQualityGraph; 
@property (assign) bool shouldDisplayVideoInfoLayer; 
@property (getter=isUsingViceroyBlobFormat) bool useViceroyBlobFormat; 
@property (assign) NSObject<AVConferenceDelegate> * delegate; 
@property (assign,getter=isMicrophoneMuted,nonatomic) bool microphoneMuted; 
@property (assign,getter=isOutputMeteringEnabled,nonatomic) bool outputMeteringEnabled; 
@property (assign,getter=isInputMeteringEnabled,nonatomic) bool inputMeteringEnabled; 
@property (readonly) float outputMeterLevel; 
@property (readonly) float inputMeterLevel; 
@property (assign,nonatomic) bool requiresWifi; 
@property (readonly) int localFrameHeight; 
@property (readonly) int localFrameWidth; 
@property (getter=isSpeakerPhoneEnabled) bool enableSpeakerPhone; 
@property (readonly) unsigned natType; 
@property (retain) CALayer * networkQualityGraphLayer; 
@property (retain) NSTimer * networkQualityUpdateTimer; 
+(void)refreshLoggingParameters;
+(void)setAudioSessionProperties:(id)arg1 ;
+(void)startAudioSession;
+(void)stopAudioSession;
+(unsigned)doBlockingConnectionCheck:(bool)arg1 ;
+(unsigned)doBlockingConnectionCheck;
+(short)addressPointerFromBlob:(id)arg1 ;
+(id)externalAddressForSelfConnectionBlob:(id)arg1 ;
-(void)serverDied;
-(void)registerBlocksForVCNotifications;
-(void)deregisterBlocksForVCNotifications;
-(int)getConferenceOperatingMode;
-(void)setConferenceOperatingMode:(int)arg1 ;
-(void)setRemoteVideoLayerContentsRect:(CGRect)arg1 camera:(int)arg2 ;
-(void)serverReconnected;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(id)delegate;
-(bool)setActive:(bool)arg1 ;
-(void)handleGKSConnectivitySettingsUpdate:(id)arg1 ;
-(void)updateGKSConnectivitySettings;
-(void)setShouldDisplayNetworkQualityGraph:(bool)arg1 ;
-(bool)shouldDisplayNetworkQualityGraph;
-(void)setShouldDisplayVideoInfoLayer:(bool)arg1 ;
-(bool)shouldDisplayVideoInfoLayer;
-(void)listenForNotifications;
-(void)stopListeningForNotifications;
-(void)setRemoteVideoLayer:(void*)arg1 ;
-(void)setRemoteVideoBackLayer:(void*)arg1 ;
-(id)newRandomParticipantID;
-(void)startNetworkQualityUpdateTimer;
-(void)updateCapabilities:(id)arg1 ;
-(bool)startConnectionWithCallID:(long long)arg1 oldCallID:(long long)arg2 usingInviteData:(id)arg3 isCaller:(bool)arg4 relayResponseDict:(id)arg5 didOriginateRelayRequest:(bool)arg6 capabilities:(id)arg7 error:(id*)arg8 ;
-(double)networkQualityForCallID:(long long)arg1 ;
-(id)networkQualityGraphLayer;
-(float)networkQuality;
-(id)networkQualityUpdateTimer;
-(bool)updateNetworkQualityGraph;
-(void)setNetworkQualityUpdateTimer:(id)arg1 ;
-(id)localScreenAttributesForVideoAttributes:(id)arg1 ;
-(void)setLocalScreenAttributes:(id)arg1 ;
-(unsigned)doBlockingConnectionCheck;
-(long long)initializeNewCall;
-(void)warmupForCall;
-(bool)isUsingViceroyBlobFormat;
-(void)setUseViceroyBlobFormat:(bool)arg1 ;
-(void)setSetSessionID:(id)arg1 forCallID:(long long)arg2 ;
-(void)addGKSCallEvent:(id)arg1 sessionID:(id)arg2 ;
-(void)sendARPLData:(id)arg1 toCallID:(long long)arg2 ;
-(void)inviteDictionaryForCallID:(long long)arg1 remoteInviteDictionary:(id)arg2 nonCellularCandidateTimeout:(double)arg3 block:(/*^block*/ id)arg4 queue:(id)arg5 ;
-(id)callMetadataForCallID:(long long)arg1 ;
-(void)setPeerCN:(id)arg1 callID:(long long)arg2 ;
-(void)setSessionID:(id)arg1 callID:(long long)arg2 ;
-(bool)requiresWifi;
-(void)setRequiresWifi:(bool)arg1 ;
-(id)convertBlobtoOldBlob:(id)arg1 ;
-(id)convertBlobtoNewBlob:(id)arg1 ;
-(bool)startConnectionWithCallID:(long long)arg1 usingInviteData:(id)arg2 isCaller:(bool)arg3 relayResponseDict:(id)arg4 didOriginateRelayRequest:(bool)arg5 capabilities:(id)arg6 error:(id*)arg7 ;
-(void)stopCallID:(long long)arg1 ;
-(void)remoteCancelledCallID:(long long)arg1 ;
-(void)sendProtobuf:(id)arg1 withType:(long long)arg2 forCallID:(long long)arg3 ;
-(void)setCallReport:(long long)arg1 withReport:(id)arg2 ;
-(long long)lastActiveCallID;
-(void)setLastActiveCallID:(long long)arg1 ;
-(void)receivedRealTimeData:(id)arg1 fromParticipantID:(id)arg2 ;
-(void)processRemoteIPChange:(id)arg1 callID:(long long)arg2 ;
-(bool)isOutputMeteringEnabled;
-(void)setOutputMeteringEnabled:(bool)arg1 ;
-(bool)isInputMeteringEnabled;
-(void)setInputMeteringEnabled:(bool)arg1 ;
-(float)outputMeterLevel;
-(bool)getIsAudioPaused:(bool*)arg1 callID:(long long)arg2 error:(id*)arg3 ;
-(bool)getIsVideoPaused:(bool*)arg1 callID:(long long)arg2 error:(id*)arg3 ;
-(float)inputMeterLevel;
-(void)setMicrophoneMuted:(bool)arg1 ;
-(bool)isMicrophoneMuted;
-(id)currentAudioInputDevice;
-(bool)setAudioInputDevice:(id)arg1 ;
-(void)stopNetworkQualityUpdateTimer;
-(void*)remoteVideoLayer;
-(void*)remoteVideoBackLayer;
-(double)localFramerateForCallID:(long long)arg1 ;
-(double)localBitrateForCallID:(long long)arg1 ;
-(double)remoteFramerateForCallID:(long long)arg1 ;
-(double)remoteBitrateForCallID:(long long)arg1 ;
-(int)localFrameHeight;
-(int)localFrameWidth;
-(int)remoteFrameHeightForCallID:(long long)arg1 ;
-(int)remoteFrameWidthForCallID:(long long)arg1 ;
-(double)remotePacketLossRateForCallID:(long long)arg1 ;
-(double)localPacketLossRateForCallID:(long long)arg1 ;
-(double)roundTripTimeForCallID:(long long)arg1 ;
-(id)statsForCallID:(long long)arg1 ;
-(void)setEnableSpeakerPhone:(bool)arg1 ;
-(bool)isSpeakerPhoneEnabled;
-(unsigned)natType;
-(bool)setPauseAudio:(bool)arg1 callID:(long long)arg2 error:(id*)arg3 ;
-(bool)setPauseVideo:(bool)arg1 callID:(long long)arg2 error:(id*)arg3 ;
-(bool)setServerInfo:(id)arg1 ;
-(void)videoConference:(id)arg1 didStartSession:(bool)arg2 withCallID:(unsigned)arg3 error:(id)arg4 ;
-(void)videoConference:(id)arg1 didStartSession:(bool)arg2 withCallID:(unsigned)arg3 withUserInfo:(id)arg4 error:(id)arg5 ;
-(void)videoConference:(id)arg1 didStopWithCallID:(unsigned)arg2 error:(id)arg3 ;
-(void)videoConference:(id)arg1 didStopWithCallID:(unsigned)arg2 error:(id)arg3 callMetadata:(id)arg4 ;
-(void)videoConference:(id)arg1 localIPChange:(id)arg2 withCallID:(unsigned)arg3 ;
-(void)videoConference:(id)arg1 receivedNoRemotePacketsForTime:(double)arg2 callID:(unsigned)arg3 ;
-(void)videoConference:(id)arg1 remoteMediaStalled:(bool)arg2 callID:(unsigned)arg3 ;
-(void)videoConference:(id)arg1 didReceiveFirstRemoteFrameForCallID:(unsigned)arg2 ;
-(void)videoConference:(id)arg1 didRemoteVideoAttributesChange:(id)arg2 forCallID:(unsigned)arg3 ;
-(void)videoConference:(id)arg1 remoteAudioPaused:(bool)arg2 callID:(unsigned)arg3 ;
-(void)videoConference:(id)arg1 remoteVideoPaused:(bool)arg2 callID:(unsigned)arg3 ;
-(void)videoConference:(id)arg1 didRemoteScreenAttributesChange:(id)arg2 forCallID:(unsigned)arg3 ;
-(void)videoConference:(id)arg1 updateInputMeterLevel:(float)arg2 ;
-(void)videoConference:(id)arg1 updateOutputMeterLevel:(float)arg2 ;
-(void)videoConference:(id)arg1 inititiateRelayRequest:(unsigned)arg2 requestDict:(id)arg3 ;
-(void)videoConference:(id)arg1 sendRelayUpdate:(unsigned)arg2 updateDict:(id)arg3 ;
-(void)videoConference:(id)arg1 cancelRelayRequest:(unsigned)arg2 requestDict:(id)arg3 ;
-(void)videoConference:(id)arg1 videoQualityNotificationForCallID:(unsigned)arg2 isDegraded:(bool)arg3 isRemote:(bool)arg4 ;
-(void)videoConference:(id)arg1 withCallID:(unsigned)arg2 networkHint:(bool)arg3 ;
-(void)videoConference:(id)arg1 didReceiveARPLData:(id)arg2 forCallID:(unsigned)arg3 ;
-(void)videoConference:(id)arg1 didChangeLocalVariablesForCallID:(unsigned)arg2 ;
-(void)processRelayRequestResponse:(long long)arg1 responseDict:(id)arg2 didOriginateRequest:(bool)arg3 ;
-(void)processRelayUpdate:(long long)arg1 updateDict:(id)arg2 didOriginateRequest:(bool)arg3 ;
-(void)processCancelRelayRequest:(long long)arg1 cancelDict:(id)arg2 didOriginateRequest:(bool)arg3 ;
-(void)setNetworkQualityGraphLayer:(id)arg1 ;
@end

