/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:01:09 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/AVConference.framework/AVConference
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <AVConference/AVConference-Structs.h>
@class NSMutableArray, NSString, NSMutableDictionary, NSNumber, NSDictionary;

@interface SDPMini : NSObject {

	NSMutableArray* _videoAttributes;
	NSString* _sdpUsername;
	NSMutableDictionary* _audioParameters;
	NSString* origin;
	NSMutableArray* audioPayloads;
	NSMutableArray* secondaryAudioPayloads;
	NSMutableArray* videoPayloads;
	NSString* sessionIP;
	NSNumber* audioRTPPort;
	NSNumber* audioRTCPPort;
	NSNumber* audioRTPID;
	NSNumber* videoRTPPort;
	NSNumber* videoRTCPPort;
	NSNumber* videoRTPID;
	bool allowRTCPFB;
	NSNumber* answerBandwidth;
	NSNumber* maxBandwidth;
	bool allowsDynamicMaxBitrate;
	bool allowsContentsChangeWithAspectPreservation;
	NSDictionary* featuresListDict;
	NSNumber* aacBlockSize;
	NSNumber* audioUnitModel;
	bool allowAudioRecording;

}

@property (nonatomic,retain) NSString * origin; 
@property (nonatomic,readonly) NSMutableArray * audioPayloads; 
@property (nonatomic,readonly) NSMutableArray * secondaryAudioPayloads; 
@property (nonatomic,readonly) NSMutableArray * videoPayloads; 
@property (nonatomic,retain) NSString * sessionIP; 
@property (nonatomic,retain) NSNumber * audioRTPPort; 
@property (nonatomic,retain) NSNumber * audioRTCPPort; 
@property (nonatomic,retain) NSNumber * audioRTPID; 
@property (nonatomic,retain) NSNumber * videoRTPPort; 
@property (nonatomic,retain) NSNumber * videoRTCPPort; 
@property (nonatomic,retain) NSNumber * videoRTPID; 
@property (assign,nonatomic) bool allowRTCPFB; 
@property (nonatomic,retain) NSNumber * answerBandwidth; 
@property (nonatomic,retain) NSNumber * maxBandwidth; 
@property (assign,nonatomic) bool allowsDynamicMaxBitrate; 
@property (nonatomic,retain) NSDictionary * featuresListDict; 
@property (assign,nonatomic) bool allowsContentsChangeWithAspectPreservation; 
@property (nonatomic,retain) NSNumber * aacBlockSize; 
@property (nonatomic,retain) NSNumber * audioUnitModel; 
@property (assign,nonatomic) bool allowAudioRecording; 
-(void)createVideoImageAttr:(int)arg1 direction:(int)arg2 dimensions:(imageTag*)arg3 count:(int)arg4 ;
-(id)videoImageAttributes:(int)arg1 ;
-(id)getVideoSendImages:(id)arg1 ;
-(void)fillImageStruct:(id)arg1 imageStruct:(imageTag*)arg2 ;
-(id)getVideoRecvImages:(id)arg1 ;
-(void)getNegotiatedResolutionForPayload:(int)arg1 withRule:(id)arg2 direction:(int)arg3 result:(imageTag*)arg4 remoteSupportsHD:(bool)arg5 ;
-(void)addVideoImageAttr:(id)arg1 ForPayload:(int)arg2 ;
-(bool)supportImage:(id)arg1 width:(int)arg2 height:(int)arg3 rate:(int)arg4 ;
-(void)fillImageArray:(id)arg1 imageArray:(imageTag*)arg2 ;
-(bool)videoDisplayAttribute:(int*)arg1 withHeight:(int*)arg2 ;
-(int)rulesFramerate:(int)arg1 ;
-(void)rulesImageSize:(int)arg1 pWidth:(int*)arg2 pHeight:(int*)arg3 ;
-(void)setUseSbr:(bool)arg1 blockSize:(int)arg2 forAACFormat:(int)arg3 ;
-(bool)getUseSbr:(bool*)arg1 blockSize:(int*)arg2 forAACFormat:(int)arg3 ;
-(void)setVideoRTCPFB:(bool)arg1 useNACK:(bool)arg2 ;
-(void)parseSDPFromString:(id)arg1 ;
-(id)parseIP:(id)arg1 ;
-(void)parseBandwidth:(id)arg1 ;
-(void)parseMedia:(id)arg1 ;
-(void)parseSessionAttributes:(id)arg1 ;
-(void)parseAudioMediaAttributes:(id)arg1 ;
-(void)parseVideoMediaAttributes:(id)arg1 ;
-(id)parseRTPID:(id)arg1 ;
-(id)parseRTCPPort:(id)arg1 ;
-(void)parseAudioFormatAttribute:(id)arg1 ;
-(id)composeSessionString;
-(id)composeAudioString;
-(id)composeVideoString;
-(id)composeBandwidthString;
-(id)composeFLSString;
-(id)composeAudioFMTPForPayload:(id)arg1 ;
-(id)SDPUsername;
-(void)dealloc;
-(id)init;
-(id)origin;
-(void)setOrigin:(id)arg1 ;
-(id)initWithString:(id)arg1 ;
-(bool)setVideoPayloads:(int*)arg1 count:(int)arg2 ;
-(id)toStringWithVideoEnabled:(bool)arg1 ;
-(id)audioPayloads;
-(id)secondaryAudioPayloads;
-(id)videoPayloads;
-(id)sessionIP;
-(void)setSessionIP:(id)arg1 ;
-(id)audioRTPPort;
-(void)setAudioRTPPort:(id)arg1 ;
-(id)audioRTCPPort;
-(void)setAudioRTCPPort:(id)arg1 ;
-(id)audioRTPID;
-(void)setAudioRTPID:(id)arg1 ;
-(id)videoRTPPort;
-(void)setVideoRTPPort:(id)arg1 ;
-(id)videoRTCPPort;
-(void)setVideoRTCPPort:(id)arg1 ;
-(id)videoRTPID;
-(void)setVideoRTPID:(id)arg1 ;
-(bool)allowRTCPFB;
-(void)setAllowRTCPFB:(bool)arg1 ;
-(id)answerBandwidth;
-(void)setAnswerBandwidth:(id)arg1 ;
-(id)maxBandwidth;
-(void)setMaxBandwidth:(id)arg1 ;
-(bool)allowsDynamicMaxBitrate;
-(void)setAllowsDynamicMaxBitrate:(bool)arg1 ;
-(id)featuresListDict;
-(void)setFeaturesListDict:(id)arg1 ;
-(id)aacBlockSize;
-(void)setAacBlockSize:(id)arg1 ;
-(id)audioUnitModel;
-(void)setAudioUnitModel:(id)arg1 ;
-(bool)allowsContentsChangeWithAspectPreservation;
-(void)setAllowsContentsChangeWithAspectPreservation:(bool)arg1 ;
-(bool)allowAudioRecording;
-(void)setAllowAudioRecording:(bool)arg1 ;
@end

