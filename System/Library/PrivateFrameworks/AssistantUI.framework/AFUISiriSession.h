/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:00:39 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/AssistantUI.framework/AssistantUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AssistantUI/AFAssistantUIService.h>
#import <AssistantUI/AFSpeechDelegate.h>
#import <AssistantUI/AFUIStateMachineDelegate.h>
#import <AssistantUI/AFUISiriSession.h>

@protocol AFUISiriSession <NSObject>
@required
-(void)end;
-(void)preheat;
-(void)setIsStark:(bool)arg1;
-(void)setLockState:(unsigned long long)arg1;
-(void)forceAudioSessionActive;
-(void)rollbackClearContext;
-(void)setOverriddenApplicationContext:(id)arg1 includeSmsInContext:(id)arg2;
-(void)startRequestWithOptions:(id)arg1;
-(void)stopRequestWithOptions:(id)arg1;
-(void)updateRequestOptions:(id)arg1;
-(void)sendReplyCommand:(id)arg1;
-(void)telephonyRequestCompleted;
-(void)stopRecordingSpeech;
-(void)cancelSpeechRequest;
-(void)startCorrectedRequestWithText:(id)arg1 correctionIdentifier:(id)arg2;
-(void)performAceCommand:(id)arg1 conflictHandler:(/*^block*/ id)arg2;
-(void)performAceCommand:(id)arg1;
-(void)resultDidChangeForAceCommand:(id)arg1;
-(void)requestDidPresent;
-(void)clearContext;
-(void)setAlertContext;
-(void)setApplicationContext;
-(void)resetContext;
@end


@protocol OS_dispatch_queue, AFUISiriSessionDelegate, AFUISiriSessionLocalDataSource, AFUISiriSessionLocalDelegate;
@class NSObject, AFUIStateMachine, AFUISpeechSynthesis, AFConnection, AFUIDialogPhase;

@interface AFUISiriSession : NSObject <AFAssistantUIService, AFSpeechDelegate, AFUIStateMachineDelegate, AFUISiriSession> {

	NSObject<OS_dispatch_queue>* _delegateQueue;
	bool _currentRequestDidPresent;
	AFUIStateMachine* _stateMachine;
	AFUISpeechSynthesis* _speechSynthesis;
	bool _eyesFree;
	<AFUISiriSessionDelegate>* _delegate;
	<AFUISiriSessionLocalDataSource>* _localDataSource;
	<AFUISiriSessionLocalDelegate>* _localDelegate;
	AFConnection* _connection;
	AFUIDialogPhase* _dialogPhase;

}

@property (nonatomic,retain) <AFUISiriSessionDelegate> * delegate;                                   //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic,__weak) <AFUISiriSessionLocalDataSource> * localDataSource;              //@synthesize localDataSource=_localDataSource - In the implementation block
@property (assign,nonatomic,__weak) <AFUISiriSessionLocalDelegate> * localDelegate;                  //@synthesize localDelegate=_localDelegate - In the implementation block
@property (assign,getter=isEyesFree,nonatomic) bool eyesFree;                                        //@synthesize eyesFree=_eyesFree - In the implementation block
@property (getter=_connection,nonatomic,readonly) AFConnection * connection;                         //@synthesize connection=_connection - In the implementation block
@property (setter=_setDialogPhase:,nonatomic,retain) AFUIDialogPhase * dialogPhase;                  //@synthesize dialogPhase=_dialogPhase - In the implementation block
+(bool)isSiriAvailable;
+(void)beginMonitoringSiriAvailability;
+(id)effectiveCoreLocationBundle;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)delegate;
-(long long)_state;
-(void)end;
-(void).cxx_destruct;
-(id)_connection;
-(void)preheat;
-(void)setIsStark:(bool)arg1 ;
-(void)setLockState:(unsigned long long)arg1 ;
-(void)forceAudioSessionActive;
-(void)rollbackClearContext;
-(void)setOverriddenApplicationContext:(id)arg1 includeSmsInContext:(id)arg2 ;
-(void)startRequestWithOptions:(id)arg1 ;
-(void)stopRequestWithOptions:(id)arg1 ;
-(void)updateRequestOptions:(id)arg1 ;
-(void)sendReplyCommand:(id)arg1 ;
-(void)telephonyRequestCompleted;
-(void)stopRecordingSpeech;
-(void)cancelSpeechRequest;
-(void)startCorrectedRequestWithText:(id)arg1 correctionIdentifier:(id)arg2 ;
-(void)performAceCommand:(id)arg1 conflictHandler:(/*^block*/ id)arg2 ;
-(void)performAceCommand:(id)arg1 ;
-(void)resultDidChangeForAceCommand:(id)arg1 ;
-(void)requestDidPresent;
-(void)_outputVoiceDidChange:(id)arg1 ;
-(void)_voiceOverStatusDidChange:(id)arg1 ;
-(void)_siriAvailabilityDidChange:(id)arg1 ;
-(void)_performBlockWithDelegate:(/*^block*/ id)arg1 ;
-(id)_stateMachine;
-(void)_startDirectActionRequestWithString:(id)arg1 appID:(id)arg2 withMessageInContext:(id)arg3 ;
-(void)_startSpeechPronunciationRequestWithContext:(id)arg1 options:(id)arg2 ;
-(void)_startRequestWithText:(id)arg1 ;
-(void)_startSpeechRequestWithSpeechFileAtURL:(id)arg1 ;
-(void)_startSpeechRequestWithOptions:(id)arg1 ;
-(void)_startRequestWithFinalOptions:(id)arg1 ;
-(id)_preparedSpeechRequestWithRequestOptions:(id)arg1 ;
-(void)_setDialogPhase:(id)arg1 ;
-(void)_handleUnlockDeviceCommand:(id)arg1 ;
-(void)_handleRequestUpdateViewsCommand:(id)arg1 ;
-(void)_performTransitionForEvent:(long long)arg1 ;
-(void)_requestDidFinishWithError:(id)arg1 ;
-(float)recordingPowerLevel;
-(void)_requestWillStart;
-(void)_requestContextWithCompletion:(/*^block*/ id)arg1 ;
-(bool)_hasActiveRequest;
-(void)_startRequestWithBlock:(/*^block*/ id)arg1 ;
-(id)localDataSource;
-(void)_performAceCommand:(id)arg1 forRequestUpdateViewsCommand:(id)arg2 afterDelay:(double)arg3 ;
-(void)assistantConnectionRequestWillStart:(id)arg1 ;
-(void)assistantConnectionDismissAssistant:(id)arg1 ;
-(void)assistantConnectionRequestFinished:(id)arg1 ;
-(void)assistantConnection:(id)arg1 receivedCommand:(id)arg2 ;
-(void)assistantConnection:(id)arg1 requestFailedWithError:(id)arg2 requestClass:(id)arg3 ;
-(void)assistantConnection:(id)arg1 openURL:(id)arg2 completion:(/*^block*/ id)arg3 ;
-(void)assistantConnection:(id)arg1 shouldSpeak:(bool)arg2 ;
-(void)assistantConnection:(id)arg1 didChangeAudioSessionID:(unsigned)arg2 ;
-(void)assistantConnectionSpeechRecordingWillBegin:(id)arg1 ;
-(void)assistantConnection:(id)arg1 speechRecordingDidBeginOnAVRecordRoute:(id)arg2 ;
-(void)assistantConnectionSpeechRecordingDidEnd:(id)arg1 ;
-(void)assistantConnectionSpeechRecordingDidCancel:(id)arg1 ;
-(void)assistantConnection:(id)arg1 speechRecordingDidFail:(id)arg2 ;
-(void)assistantConnectionDidChangeAudioRecordingPower:(id)arg1 ;
-(void)assistantConnection:(id)arg1 speechRecognized:(id)arg2 ;
-(void)stateMachine:(id)arg1 didTransitionFromState:(long long)arg2 forEvent:(long long)arg3 ;
-(id)stateMachine:(id)arg1 descriptionForEvent:(long long)arg2 ;
-(id)initWithConnection:(id)arg1 delegateQueue:(id)arg2 ;
-(void)setLocalDataSource:(id)arg1 ;
-(id)speechSynthesis;
-(bool)isPreventingActivationGesture;
-(bool)isListening;
-(id)underlyingConnection;
-(id)localDelegate;
-(void)setLocalDelegate:(id)arg1 ;
-(bool)isEyesFree;
-(void)clearContext;
-(id)dialogPhase;
-(void)setEyesFree:(bool)arg1 ;
-(void)setAlertContext;
-(void)setApplicationContext;
-(void)resetContext;
@end

