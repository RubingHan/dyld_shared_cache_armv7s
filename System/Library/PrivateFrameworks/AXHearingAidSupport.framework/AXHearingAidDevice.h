/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:00:30 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/AXHearingAidSupport.framework/AXHearingAidSupport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AXHearingAidSupport/CBPeripheralDelegate.h>
#import <AXHearingAidSupport/CBPeripheralPairingDelegate.h>

@class AXTimer, NSString, NSArray, AXHearingAidMode, CBPeripheral, NSMutableDictionary, NSDate;

@interface AXHearingAidDevice : NSObject <CBPeripheralDelegate, CBPeripheralPairingDelegate> {

	double _leftVolume;
	double _rightVolume;
	double _leftMicrophoneVolume;
	double _rightMicrophoneVolume;
	double _leftStreamVolume;
	double _rightStreamVolume;
	bool _keepInSync;
	bool _finishedLoading;
	long long initialLoadToken;
	AXTimer* _propertyWriteTimer;
	bool _isListeningForStreamingChanges;
	bool isPaired;
	bool isConnecting;
	bool isPersistent;
	NSString* leftUUID;
	NSString* rightUUID;
	NSString* name;
	NSString* manufacturer;
	NSString* model;
	NSString* leftFirmwareVersion;
	NSString* rightFirmwareVersion;
	NSString* leftHardwareVersion;
	NSString* rightHardwareVersion;
	double rightBatteryLevel;
	double leftBatteryLevel;
	NSArray* rightPrograms;
	NSArray* leftPrograms;
	AXHearingAidMode* currentRightProgram;
	AXHearingAidMode* currentLeftProgram;
	CBPeripheral* leftPeripheral;
	CBPeripheral* rightPeripheral;
	long long leftLoadedProperties;
	long long rightLoadedProperties;
	NSMutableDictionary* leftPropertiesLoadCount;
	NSMutableDictionary* rightPropertiesLoadCount;
	NSString* leftPeripheralUUID;
	NSString* rightPeripheralUUID;
	long long leftWriteRequestProperties;
	long long rightWriteRequestProperties;
	long long leftProgramVersion;
	long long rightProgramVersion;
	long long _leftWriteResponseProperties;
	long long _rightWriteResponseProperties;
	NSDate* _leftBatteryLowDate;
	NSDate* _rightBatteryLowDate;

}

@property (assign,nonatomic) bool isPaired; 
@property (assign,nonatomic) bool isConnecting; 
@property (assign,nonatomic) bool keepInSync;                                             //@synthesize keepInSync=_keepInSync - In the implementation block
@property (assign,nonatomic) bool isPersistent; 
@property (nonatomic,retain) NSString * name; 
@property (nonatomic,retain) NSString * manufacturer; 
@property (nonatomic,retain) NSString * model; 
@property (nonatomic,retain) NSString * leftFirmwareVersion; 
@property (nonatomic,retain) NSString * rightFirmwareVersion; 
@property (nonatomic,retain) NSString * leftHardwareVersion; 
@property (nonatomic,retain) NSString * rightHardwareVersion; 
@property (nonatomic,retain) NSString * rightUUID; 
@property (nonatomic,retain) NSString * leftUUID; 
@property (nonatomic,retain) NSString * leftPeripheralUUID; 
@property (nonatomic,retain) NSString * rightPeripheralUUID; 
@property (assign,nonatomic) double rightMicrophoneVolume;                                //@synthesize rightMicrophoneVolume=_rightMicrophoneVolume - In the implementation block
@property (assign,nonatomic) double leftMicrophoneVolume;                                 //@synthesize leftMicrophoneVolume=_leftMicrophoneVolume - In the implementation block
@property (assign,nonatomic) double rightStreamVolume;                                    //@synthesize rightStreamVolume=_rightStreamVolume - In the implementation block
@property (assign,nonatomic) double leftStreamVolume;                                     //@synthesize leftStreamVolume=_leftStreamVolume - In the implementation block
@property (assign,nonatomic) double rightBatteryLevel; 
@property (assign,nonatomic) double leftBatteryLevel; 
@property (nonatomic,copy) NSArray * rightPrograms; 
@property (nonatomic,copy) NSArray * leftPrograms; 
@property (nonatomic,retain) CBPeripheral * leftPeripheral; 
@property (nonatomic,retain) CBPeripheral * rightPeripheral; 
@property (nonatomic,retain) AXHearingAidMode * currentRightProgram; 
@property (nonatomic,retain) AXHearingAidMode * currentLeftProgram; 
@property (assign,nonatomic) long long leftLoadedProperties; 
@property (assign,nonatomic) long long rightLoadedProperties; 
@property (assign,nonatomic) long long leftWriteRequestProperties; 
@property (assign,nonatomic) long long rightWriteRequestProperties; 
@property (assign,nonatomic) long long leftWriteResponseProperties;                       //@synthesize leftWriteResponseProperties=_leftWriteResponseProperties - In the implementation block
@property (assign,nonatomic) long long rightWriteResponseProperties;                      //@synthesize rightWriteResponseProperties=_rightWriteResponseProperties - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * leftPropertiesLoadCount; 
@property (nonatomic,retain) NSMutableDictionary * rightPropertiesLoadCount; 
@property (assign,nonatomic) long long leftProgramVersion; 
@property (assign,nonatomic) long long rightProgramVersion; 
@property (nonatomic,retain) NSDate * leftBatteryLowDate;                                 //@synthesize leftBatteryLowDate=_leftBatteryLowDate - In the implementation block
@property (nonatomic,retain) NSDate * rightBatteryLowDate;                                //@synthesize rightBatteryLowDate=_rightBatteryLowDate - In the implementation block
+(id)characteristicsUUIDs;
-(bool)isConnected;
-(id)rssi;
-(bool)isConnecting;
-(void)dealloc;
-(id)description;
-(void)_init;
-(void)setName:(id)arg1 ;
-(id)name;
-(id)model;
-(void)connect;
-(bool)isPersistent;
-(void)disconnect;
-(id)valueForProperty:(long long)arg1 ;
-(bool)leftAvailable;
-(bool)rightAvailable;
-(bool)isPaired;
-(double)leftBatteryLevel;
-(double)rightBatteryLevel;
-(void)setLeftPrograms:(id)arg1 ;
-(void)setRightPrograms:(id)arg1 ;
-(void)setLeftFirmwareVersion:(id)arg1 ;
-(void)setRightFirmwareVersion:(id)arg1 ;
-(void)setLeftHardwareVersion:(id)arg1 ;
-(void)setRightHardwareVersion:(id)arg1 ;
-(id)deviceUUID;
-(id)leftPrograms;
-(id)rightPrograms;
-(id)programs;
-(void)setLeftSelectedProgram:(id)arg1 ;
-(void)setRightSelectedProgram:(id)arg1 ;
-(id)leftSelectedProgram;
-(id)rightSelectedProgram;
-(bool)didLoadRequiredProperties;
-(void)loadRequiredProperties;
-(void)setLeftBatteryLevel:(double)arg1 ;
-(void)setRightBatteryLevel:(double)arg1 ;
-(void)setLeftUUID:(id)arg1 ;
-(void)setRightUUID:(id)arg1 ;
-(void)setIsPaired:(bool)arg1 ;
-(void)setLeftBatteryLowDate:(id)arg1 ;
-(void)setRightBatteryLowDate:(id)arg1 ;
-(bool)containsPeripheralWithUUID:(id)arg1 ;
-(bool)didLoadBasicProperties;
-(void)setLeftMicrophoneVolume:(double)arg1 ;
-(void)setRightMicrophoneVolume:(double)arg1 ;
-(void)setLeftStreamVolume:(double)arg1 ;
-(void)setRightStreamVolume:(double)arg1 ;
-(void)selectProgram:(id)arg1 ;
-(id)selectedPrograms;
-(id)selectedProgramIndexes;
-(void)setKeepInSync:(bool)arg1 ;
-(bool)keepInSync;
-(double)rightMicrophoneVolume;
-(double)leftMicrophoneVolume;
-(double)rightStreamVolume;
-(double)leftStreamVolume;
-(void)setIsConnecting:(bool)arg1 ;
-(id)leftFirmwareVersion;
-(id)rightFirmwareVersion;
-(id)leftHardwareVersion;
-(id)rightHardwareVersion;
-(id)rightUUID;
-(id)leftUUID;
-(id)leftPeripheralUUID;
-(void)setLeftPeripheralUUID:(id)arg1 ;
-(id)rightPeripheralUUID;
-(void)setRightPeripheralUUID:(id)arg1 ;
-(id)leftBatteryLowDate;
-(id)rightBatteryLowDate;
-(void)setLeftPropertiesLoadCount:(id)arg1 ;
-(void)setRightPropertiesLoadCount:(id)arg1 ;
-(void)setCurrentLeftProgram:(id)arg1 ;
-(void)setCurrentRightProgram:(id)arg1 ;
-(void)setLeftPeripheral:(id)arg1 ;
-(void)peripheral:(id)arg1 didUpdateCharacteristic:(id)arg2 ;
-(void)setIsPersistent:(bool)arg1 ;
-(id)leftPeripheral;
-(id)rightPeripheral;
-(long long)rightLoadedProperties;
-(void)setRightLoadedProperties:(long long)arg1 ;
-(long long)leftLoadedProperties;
-(void)setLeftLoadedProperties:(long long)arg1 ;
-(id)rightPropertiesLoadCount;
-(id)leftPropertiesLoadCount;
-(void)updateName;
-(void)setNotify:(bool)arg1 forPeripheral:(id)arg2 ;
-(void)loadProperties:(long long)arg1 forPeripheral:(id)arg2 withRetryPeriod:(double)arg3 ;
-(void)loadBasicProperties;
-(bool)peripheral:(id)arg1 didLoadProperty:(long long)arg2 ;
-(id)currentLeftProgram;
-(void)mateWithDevice:(id)arg1 ;
-(long long)peripheral:(id)arg1 propertyForCharacteristic:(id)arg2 ;
-(void)loadFailedProperties;
-(void)readValueForCharacteristic:(id)arg1 fromPeripheral:(id)arg2 ;
-(unsigned char)volumeValueForProperty:(long long)arg1 andPeripheral:(id)arg2 ;
-(void)writeInt:(unsigned char)arg1 toPeripheral:(id)arg2 forProperty:(long long)arg3 ;
-(void)_sendDelayedWrites;
-(id)peripheral:(id)arg1 characteristicForProperty:(long long)arg2 ;
-(long long)leftWriteResponseProperties;
-(void)setLeftWriteResponseProperties:(long long)arg1 ;
-(long long)rightWriteResponseProperties;
-(void)setRightWriteResponseProperties:(long long)arg1 ;
-(void)delayWriteProperty:(long long)arg1 forPeripheral:(id)arg2 ;
-(void)setRightPeripheral:(id)arg1 ;
-(void)readProperty:(long long)arg1 fromPeripheral:(id)arg2 ;
-(long long)rightProgramVersion;
-(long long)leftProgramVersion;
-(id)peripheral:(id)arg1 characteristicForUUID:(id)arg2 ;
-(id)persistentRepresentation;
-(void)peripheralDidUpdateName:(id)arg1 ;
-(void)peripheral:(id)arg1 didDiscoverServices:(id)arg2 ;
-(void)peripheral:(id)arg1 didDiscoverCharacteristicsForService:(id)arg2 error:(id)arg3 ;
-(void)peripheral:(id)arg1 didUpdateValueForCharacteristic:(id)arg2 error:(id)arg3 ;
-(void)peripheral:(id)arg1 didWriteValueForCharacteristic:(id)arg2 error:(id)arg3 ;
-(void)peripheral:(id)arg1 didFinishPairingWithResult:(id)arg2 ;
-(void)peripheralDidUnpair:(id)arg1 ;
-(id)initWithPeripheral:(id)arg1 ;
-(id)initWithPersistentRepresentation:(id)arg1 ;
-(void)connectionDidChange;
-(id)deviceDescription;
-(void)peripheral:(id)arg1 didInvalidateServices:(id)arg2 ;
-(bool)addPeripheral:(id)arg1 ;
-(id)currentRightProgram;
-(long long)leftWriteRequestProperties;
-(void)setLeftWriteRequestProperties:(long long)arg1 ;
-(long long)rightWriteRequestProperties;
-(void)setRightWriteRequestProperties:(long long)arg1 ;
-(void)setLeftProgramVersion:(long long)arg1 ;
-(void)setRightProgramVersion:(long long)arg1 ;
-(void)setModel:(id)arg1 ;
-(void)setManufacturer:(id)arg1 ;
-(id)manufacturer;
-(void)setValue:(id)arg1 forProperty:(long long)arg2 ;
@end

