/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:01:20 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/IMCore.framework/IMCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <IMCore/IMCore-Structs.h>
#import <IMFoundation/IMDirectlyObservableObject.h>
#import <CoreFoundation/NSCoding.h>

@class NSString, IMAccount, NSDictionary, NSDate, NSSet, IMPerson, NSArray, NSData, NSAttributedString, NSMutableArray, NSURL, IMServiceImpl;

@interface IMHandle : IMDirectlyObservableObject <NSCoding> {

	NSString* _guid;
	IMAccount* _account;
	NSString* _id;
	NSString* _uncanonicalID;
	NSString* _countryCode;
	NSDictionary* _otherServiceIDs;
	NSDate* _idleSince;
	NSDate* _feedUpdatedDate;
	NSDictionary* _extraProps;
	NSDictionary* _certs;
	NSSet* _groups;
	IMPerson* _person;
	NSString* _abFirstName;
	NSString* _abLastName;
	NSString* _abFullName;
	NSString* _abNickname;
	NSString* _displayID;
	NSString* _firstName;
	NSString* _lastName;
	NSString* _fullName;
	NSString* _nickname;
	NSArray* _emails;
	NSString* _normalizedFormOfID;
	NSString* _IDWithoutResource;
	NSString* _IDWithTrimmedServer;
	NSString* _uniqueName;
	NSData* _pictureData;
	NSString* _statusMsg;
	NSString* _processedStatusMsg;
	NSAttributedString* _richStatusMsg;
	NSDate* _whenWentOffline;
	NSDate* _whenStatusChanged;
	NSString* _prevStatusMsg;
	NSMutableArray* _notificationNameQueue;
	NSMutableArray* _notificationQueue;
	NSURL* _statusURL;
	CFPhoneNumberRef _phoneNumberRef;
	NSString* _formattedNumber;
	bool _hasCheckedPhoneNumber;
	unsigned long long _status;
	unsigned long long _prevStatus;
	unsigned long long _capabilities;
	unsigned _authRequestStatus;
	unsigned long long _resourceIndex;
	long long _IDStatus;
	bool _isRetainingAccount;
	bool _blockNotifications;
	bool _hasTemporaryWatch;
	bool _isMobile;
	bool _isBot;
	bool _isAnonymous;
	bool _beingTornDown;
	bool _hasCheckedCardMap;
	bool _isRegistered;
	long long _priority;
	int _addressBookIdentifier;
	int _notificationQueueCount;
	NSURL* _statusMessageURL;

}

@property (nonatomic,readonly) bool hasNoConferencingCaps; 
@property (nonatomic,readonly) NSString * ID;                                                   //@synthesize id=_id - In the implementation block
@property (nonatomic,retain) NSString * originalID;                                             //@synthesize uncanonicalID=_uncanonicalID - In the implementation block
@property (nonatomic,retain) NSString * countryCode;                                            //@synthesize countryCode=_countryCode - In the implementation block
@property (nonatomic,readonly) NSString * displayID; 
@property (nonatomic,readonly) NSString * normalizedID; 
@property (nonatomic,readonly) bool hasName; 
@property (nonatomic,readonly) NSString * name; 
@property (nonatomic,readonly) NSString * fullName; 
@property (nonatomic,readonly) NSString * uniqueName;                                           //@synthesize uniqueName=_uniqueName - In the implementation block
@property (nonatomic,readonly) NSString * nameAndID; 
@property (nonatomic,readonly) NSString * nameAndEmail; 
@property (nonatomic,readonly) NSString * firstName; 
@property (nonatomic,readonly) NSString * lastName; 
@property (nonatomic,readonly) NSString * nickname; 
@property (nonatomic,readonly) IMAccount * account;                                             //@synthesize account=_account - In the implementation block
@property (nonatomic,readonly) IMServiceImpl * service; 
@property (assign,nonatomic) long long IDStatus;                                                //@synthesize IDStatus=_IDStatus - In the implementation block
@property (nonatomic,readonly) NSURL * statusURL;                                               //@synthesize statusURL=_statusURL - In the implementation block
@property (nonatomic,retain) NSURL * statusMessageAsURL;                                        //@synthesize statusMessageURL=_statusMessageURL - In the implementation block
@property (nonatomic,readonly) unsigned long long status; 
@property (nonatomic,readonly) NSString * statusMessage; 
@property (nonatomic,readonly) NSString * nameOfStatus; 
@property (nonatomic,readonly) NSAttributedString * richStatusMessage;                          //@synthesize richStatusMsg=_richStatusMsg - In the implementation block
@property (nonatomic,readonly) NSString * offlineString; 
@property (nonatomic,readonly) unsigned long long previousStatus;                               //@synthesize prevStatus=_prevStatus - In the implementation block
@property (nonatomic,readonly) NSString * previousStatusMessage;                                //@synthesize prevStatusMsg=_prevStatusMsg - In the implementation block
@property (nonatomic,readonly) double timeSinceWentOffline; 
@property (nonatomic,readonly) double timeSinceStatusChanged; 
@property (nonatomic,readonly) unsigned authRequestStatus;                                      //@synthesize authRequestStatus=_authRequestStatus - In the implementation block
@property (nonatomic,readonly) double idleTime; 
@property (nonatomic,readonly) NSString * idleString; 
@property (nonatomic,readonly) NSDate * feedUpdatedDate;                                        //@synthesize feedUpdatedDate=_feedUpdatedDate - In the implementation block
@property (assign,nonatomic) long long priority;                                                //@synthesize priority=_priority - In the implementation block
@property (nonatomic,readonly) bool canBeAdded; 
@property (nonatomic,readonly) bool canBeDeleted; 
@property (nonatomic,readonly) unsigned long long capabilities; 
@property (nonatomic,readonly) bool isBot;                                                      //@synthesize isBot=_isBot - In the implementation block
@property (nonatomic,readonly) bool isBuddy; 
@property (nonatomic,readonly) bool isLoginIMHandle; 
@property (nonatomic,readonly) bool isVisiblyBlocked; 
@property (assign,setter=setBlocked:,nonatomic) bool isBlocked; 
@property (nonatomic,readonly) bool isAnonymous; 
@property (nonatomic,readonly) bool isSystemUser; 
@property (nonatomic,readonly) bool isMobile;                                                   //@synthesize isMobile=_isMobile - In the implementation block
@property (nonatomic,readonly) bool isLoginIMHandleForAnyAccount; 
@property (nonatomic,readonly) NSString * mobileDeviceName; 
@property (nonatomic,readonly) bool watchingIMHandle; 
@property (nonatomic,readonly) NSData * pictureData;                                            //@synthesize pictureData=_pictureData - In the implementation block
@property (nonatomic,retain) NSDictionary * otherServiceIDs;                                    //@synthesize otherServiceIDs=_otherServiceIDs - In the implementation block
@property (nonatomic,readonly) NSDictionary * extraProperties;                                  //@synthesize extraProps=_extraProps - In the implementation block
@property (nonatomic,readonly) NSString * email; 
@property (nonatomic,readonly) NSArray * emails; 
@property (setter=setIMPerson:,nonatomic,retain) IMPerson * person;                             //@synthesize person=_person - In the implementation block
@property (nonatomic,readonly) int addressBookIdentifier;                                       //@synthesize addressBookIdentifier=_addressBookIdentifier - In the implementation block
@property (nonatomic,readonly) NSArray * groupsArray; 
@property (nonatomic,readonly) NSSet * groups; 
@property (nonatomic,readonly) bool hasOtherSiblings; 
@property (nonatomic,readonly) NSSet * siblings; 
@property (nonatomic,readonly) NSArray * siblingsArray; 
@property (nonatomic,readonly) NSArray * accountSiblingsArray; 
@property (nonatomic,readonly) NSArray * existingAccountSiblingsArray; 
@property (nonatomic,readonly) id bestSibling; 
@property (nonatomic,readonly) id bestAccountSibling; 
@property (nonatomic,readonly) bool isConferenceAvailable; 
@property (nonatomic,readonly) bool hasConferencing; 
@property (nonatomic,readonly) bool hasVideo; 
@property (nonatomic,readonly) bool hasMultiwayVideo; 
@property (nonatomic,readonly) bool hasAudio; 
@property (nonatomic,readonly) bool hasMultiwayAudio; 
@property (nonatomic,readonly) NSString * resource; 
@property (nonatomic,readonly) NSString * IDWithoutResource; 
@property (nonatomic,readonly) NSString * server; 
@property (nonatomic,readonly) NSString * accountTypeName; 
@property (nonatomic,readonly) NSString * guid;                                                 //@synthesize guid=_guid - In the implementation block
@property (nonatomic,readonly) NSString * _displayNameWithAbbreviation; 
@property (nonatomic,readonly) bool supportsARDMuxing; 
@property (nonatomic,readonly) bool hasLocation; 
@property (nonatomic,readonly) bool hasResource; 
@property (nonatomic,readonly) id imHandleWithoutResource; 
@property (nonatomic,readonly) id existingIMHandleWithoutResource; 
@property (nonatomic,readonly) bool hasServer; 
@property (nonatomic,readonly) IMPerson * _cachedPerson; 
@property (nonatomic,readonly) NSArray * dependentIMHandles; 
@property (nonatomic,readonly) bool areABPropertiesRecent; 
@property (setter=_setIsRegisteredWithRegistrar:) bool _isRegisteredWithRegistrar;              //@synthesize isRegistered=_isRegistered - In the implementation block
@property (nonatomic,retain) NSData * customPictureData; 
+(id)filterIMHandlesForBestAccountSiblings:(id)arg1 ;
+(id)imHandlesForIMPerson:(id)arg1 ;
+(void)_loadStatusNames;
+(id)bestIMHandleInArray:(id)arg1 ;
+(id)nameOfStatus:(unsigned long long)arg1 ;
+(void)setNotificationsEnabled:(bool)arg1 ;
+(bool)notificationsEnabled;
+(id)filterIMHandlesForAccountSiblings:(id)arg1 onAccount:(id)arg2 ;
-(bool)hasNoConferencingCaps;
-(id)imHandleRegistrarGUID;
-(void)_sendRemoteLogDumpRequest:(id)arg1 ;
-(void)_sendRemoteLogDumpRequest;
-(id)publicAPIPropertiesDictionary;
-(void)beginNotificationQueue;
-(void)releaseNotificationQueue;
-(bool)shouldQueueNotifications;
-(id)groups;
-(bool)isBlocked;
-(id)service;
-(void)_postNotificationName:(id)arg1 userInfo:(id)arg2 ;
-(void)_registerForNotifications;
-(oneway void)release;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)init;
-(unsigned long long)hash;
-(id)description;
-(id)server;
-(id)copyWithZone:(NSZone)arg1 ;
-(id)name;
-(long long)priority;
-(id)uniqueName;
-(void)setPriority:(long long)arg1 ;
-(unsigned long long)status;
-(id)person;
-(long long)compareIDs:(id)arg1 ;
-(bool)matchesIMHandle:(id)arg1 ;
-(id)imHandleForOtherAccount:(id)arg1 ;
-(int)addressBookIdentifier;
-(id)originalID;
-(id)displayNameForChat:(id)arg1 ;
-(id)_displayNameWithAbbreviation;
-(long long)IDStatus;
-(void)requestIDStatus;
-(id)nameAndID;
-(void)setEmail:(id)arg1 ;
-(id)ID;
-(id)bestAccountSibling;
-(void)_removeAccountReference:(id)arg1 ;
-(long long)compareAccountNames:(id)arg1 ;
-(unsigned)authRequestStatus;
-(bool)isBuddy;
-(void)setCustomPictureData:(id)arg1 key:(id)arg2 ;
-(void)_stopRetainingAccount:(id)arg1 ;
-(void)postNotificationName:(id)arg1 ;
-(void)propertiesChanged:(id)arg1 ;
-(void)_updateOriginalID:(id)arg1 ;
-(void)_setOriginalID:(id)arg1 ;
-(id)initWithAccount:(id)arg1 ID:(id)arg2 alreadyCanonical:(bool)arg3 knownIDStatus:(int)arg4 ;
-(bool)_setCapabilities:(unsigned long long)arg1 ;
-(id)initWithAccount:(id)arg1 ID:(id)arg2 alreadyCanonical:(bool)arg3 ;
-(id)resource;
-(id)otherServiceIDs;
-(bool)watchingIMHandle;
-(void)setHasTemporaryWatch:(bool)arg1 ;
-(bool)resetABPerson;
-(id)_cachedPerson;
-(void)setIMPerson:(id)arg1 ;
-(void)statusChanged:(unsigned long long)arg1 message:(id)arg2 ;
-(bool)isLoginIMHandle;
-(void)statusChanged:(unsigned long long)arg1 ;
-(long long)compareStatus:(id)arg1 ;
-(void)_setCountryCode:(id)arg1 ;
-(void)_setOriginalID:(id)arg1 updateSiblings:(bool)arg2 ;
-(id)existingChatSiblingsArray;
-(void)setAnonymous:(bool)arg1 ;
-(bool)isAnonymous;
-(id)groupsArray;
-(id)bestIMHandleForService:(id)arg1 ;
-(void)_postNotification:(id)arg1 ;
-(id)existingIMHandleWithoutResource;
-(bool)areABPropertiesRecent;
-(void)resetABProperties;
-(void)_clearABProperties;
-(void)resetUniqueName;
-(void)sendNotificationABPersonChanged;
-(bool)_hasABName;
-(bool)_hasServiceNameProperties;
-(id)_formattedPhoneNumber;
-(bool)hasServer;
-(id)_IDWithTrimmedServer;
-(id)_nameUsingUnique:(bool)arg1 ;
-(id)_abPersonCreateIfNeeded;
-(void)setFirstName:(id)arg1 lastName:(id)arg2 ;
-(void)_setABPersonFirstName:(id)arg1 lastName:(id)arg2 ;
-(void)_setBaseFirstName:(id)arg1 lastName:(id)arg2 fullName:(id)arg3 ;
-(void)setEmails:(id)arg1 andUpdateABPerson:(bool)arg2 ;
-(void)setFirstName:(id)arg1 lastName:(id)arg2 fullName:(id)arg3 andUpdateABPerson:(bool)arg4 ;
-(void)setEmail:(id)arg1 andUpdateABPerson:(bool)arg2 ;
-(id)extraProperties;
-(bool)hasResource;
-(id)IDWithoutResource;
-(id)accountSiblingsArray;
-(void)_createPhoneNumberRefIfNeeded;
-(bool)isMobile;
-(bool)supportsARDMuxing;
-(double)timeSinceWentOffline;
-(id)bestIMHandleForAccount:(id)arg1 onService:(id)arg2 inGroup:(id)arg3 otherThan:(id)arg4 ;
-(id)existingAccountSiblingsArray;
-(bool)isBetterThanIMHandle:(id)arg1 ;
-(id)siblings;
-(void)setCapabilities:(unsigned long long)arg1 ;
-(void)_setExtraProperties:(id)arg1 ;
-(bool)_isMyIDInList:(id)arg1 ;
-(id)imHandleWithoutResource;
-(void)setStatus:(unsigned long long)arg1 message:(id)arg2 richMessage:(id)arg3 ;
-(void)_updateStatusBasedOnAuthRequestStatus;
-(double)timeSinceStatusChanged;
-(double)idleTime;
-(void)_filterStatusMessage;
-(void)_clearStatusMessageURLCache;
-(id)_nameForComparisonPreferFirst:(bool)arg1 ;
-(id)normalizedID;
-(id)chatSiblingsArray;
-(id)_chatSiblingsArray;
-(bool)hasVideo;
-(bool)hasAudio;
-(id)pictureData;
-(void)customPictureDataChanged:(id)arg1 key:(id)arg2 ;
-(void)_unregisterFromIMPersonPictureChanges;
-(void)_registerForIMPersonPictureChanges;
-(id)initWithAccount:(id)arg1 ID:(id)arg2 ;
-(id)_handleInfo;
-(void)_setOriginalID:(id)arg1 countryCode:(id)arg2 updateSiblings:(bool)arg3 ;
-(id)nameAndEmail;
-(void)clearABPerson;
-(void)_clearABPersonLookup;
-(void)setLocalNickname:(id)arg1 ;
-(bool)canBeAdded;
-(bool)isSystemUser;
-(void)setIsMobile:(bool)arg1 ;
-(void)setIsBot:(bool)arg1 ;
-(id)mobileDeviceName;
-(bool)isLoginIMHandleForAnyAccount;
-(CFPhoneNumberRef)phoneNumberRef;
-(void)requestValueOfProperty:(id)arg1 ;
-(void)setValue:(id)arg1 ofExtraProperty:(id)arg2 ;
-(id)bestIMHandleForAccount:(id)arg1 ;
-(id)bestSibling;
-(bool)isVisiblyBlocked;
-(void)setBlocked:(bool)arg1 ;
-(unsigned)sortOrderInGroup:(id)arg1 ;
-(id)accountTypeName;
-(id)dependentIMHandles;
-(void)setAuthRequestStatus:(unsigned)arg1 ;
-(void)setPersonStatus:(unsigned long long)arg1 ;
-(void)statusMessageChanged:(id)arg1 ;
-(id)nameOfStatus;
-(void)_setIDStatus:(long long)arg1 ;
-(void)setIdleSince:(id)arg1 ;
-(void)setFeedUpdatedDate:(id)arg1 ;
-(void)setStatusURLFromString:(id)arg1 ;
-(id)offlineString;
-(id)idleString;
-(long long)compareFirstNames:(id)arg1 ;
-(long long)compareLastNames:(id)arg1 ;
-(long long)compareNormalizedIDs:(id)arg1 ;
-(bool)hasOtherSiblings;
-(id)siblingsArray;
-(bool)isAccountSiblingOf:(id)arg1 ;
-(bool)isSiblingOf:(id)arg1 ;
-(bool)_isChatSiblingOf:(id)arg1 ;
-(id)_chatSiblings;
-(id)_bestChatSibling;
-(bool)hasConferencing;
-(bool)isConferenceAvailable;
-(bool)hasMultiwayVideo;
-(bool)hasMultiwayAudio;
-(void)_sendAutomationData:(id)arg1 properties:(id)arg2 ;
-(void)_sendCommand:(id)arg1 properties:(id)arg2 ;
-(void)_imPersonPictureChanged:(id)arg1 ;
-(id)customPictureData;
-(void)setCustomPictureData:(id)arg1 ;
-(bool)_isRegisteredWithRegistrar;
-(void)_setIsRegisteredWithRegistrar:(bool)arg1 ;
-(id)statusURL;
-(unsigned long long)previousStatus;
-(id)feedUpdatedDate;
-(id)previousStatusMessage;
-(id)richStatusMessage;
-(void)setOtherServiceIDs:(id)arg1 ;
-(bool)isBot;
-(void)setIDStatus:(long long)arg1 ;
-(id)statusMessageAsURL;
-(void)setStatusMessageAsURL:(id)arg1 ;
-(id)guid;
-(id)account;
-(bool)canBeDeleted;
-(unsigned long long)capabilities;
-(id)statusMessage;
-(void)setImageData:(id)arg1 ;
-(void)setUniqueName:(id)arg1 ;
-(id)countryCode;
-(id)firstName;
-(id)lastName;
-(id)fullName;
-(id)email;
-(id)emails;
-(void)setEmails:(id)arg1 ;
-(bool)hasName;
-(bool)hasLocation;
-(id)displayID;
-(void)finalize;
-(bool)hasCapability:(unsigned long long)arg1 ;
-(id)nickname;
@end

