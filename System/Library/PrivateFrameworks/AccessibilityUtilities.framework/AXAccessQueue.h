/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:00:32 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
@class NSString, NSObject;

@interface AXAccessQueue : NSObject {

	NSString* _threadLocalStorageKey;
	NSObject<OS_dispatch_queue>* _concurrentQueue;
	unsigned long long _specialBehaviors;

}

@property (nonatomic,readonly) NSString * label; 
@property (nonatomic,copy) NSString * threadLocalStorageKey;                             //@synthesize threadLocalStorageKey=_threadLocalStorageKey - In the implementation block
@property (nonatomic,retain) NSObject<OS_dispatch_queue> * concurrentQueue;              //@synthesize concurrentQueue=_concurrentQueue - In the implementation block
@property (assign,nonatomic) unsigned long long specialBehaviors;                        //@synthesize specialBehaviors=_specialBehaviors - In the implementation block
@property (nonatomic,readonly) bool behavesAsMainQueue; 
@property (nonatomic,readonly) bool behavesWithoutErrorReporting; 
+(id)mainAccessQueue;
+(id)backgroundAccessQueue;
-(void)dealloc;
-(id)init;
-(id)description;
-(id)label;
-(void)performSynchronousReadingBlock:(/*^block*/ id)arg1 ;
-(void)performSynchronousWritingBlock:(/*^block*/ id)arg1 ;
-(id)_initWithLabel:(id)arg1 appendUUIDToLabel:(bool)arg2 specialBehaviors:(unsigned long long)arg3 ;
-(void)performAsynchronousWritingBlock:(/*^block*/ id)arg1 ;
-(id)initWithParentClass:(Class)arg1 description:(id)arg2 appendUUIDToLabel:(bool)arg3 ;
-(bool)canOnlyReadInCurrentExecutionThread;
-(void)afterDelay:(double)arg1 processWritingBlock:(/*^block*/ id)arg2 ;
-(void)performAsynchronousReadingBlock:(/*^block*/ id)arg1 ;
-(bool)canWriteInCurrentExecutionThread;
-(void)afterDelay:(double)arg1 processReadingBlock:(/*^block*/ id)arg2 ;
-(id)initWithLabel:(id)arg1 appendUUIDToLabel:(bool)arg2 ;
-(void)setSpecialBehaviors:(unsigned long long)arg1 ;
-(void)setThreadLocalStorageKey:(id)arg1 ;
-(void)setConcurrentQueue:(id)arg1 ;
-(bool)behavesAsMainQueue;
-(id)concurrentQueue;
-(unsigned long long)specialBehaviors;
-(void)_performBlock:(/*^block*/ id)arg1 withDispatchFunction:(/*function pointer*/ void*)arg2 synchronously:(bool)arg3 accessQueueContext:(unsigned long long)arg4 ;
-(unsigned long long)_accessQueueContextInCurrentExecutionThread;
-(bool)behavesWithoutErrorReporting;
-(id)threadLocalStorageKey;
-(bool)canReadInCurrentExecutionThread;
@end

