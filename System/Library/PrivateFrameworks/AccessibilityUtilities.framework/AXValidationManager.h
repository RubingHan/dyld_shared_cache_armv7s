/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:00:32 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@class NSString, NSMutableArray;

@interface AXValidationManager : NSObject {

	bool _shouldLogToConsole;
	bool _shouldCrashOnError;
	bool _shouldReportToServer;
	bool _forceDoNotReport;
	bool _debugBuild;
	unsigned long long _numberOfValidationErrors;
	NSString* _validationTargetName;
	NSString* _overrideProcessName;
	NSMutableArray* _consoleErrorMessages;

}

@property (assign,nonatomic) bool forceDoNotReport;                                    //@synthesize forceDoNotReport=_forceDoNotReport - In the implementation block
@property (nonatomic,copy) NSString * validationTargetName;                            //@synthesize validationTargetName=_validationTargetName - In the implementation block
@property (nonatomic,copy) NSString * overrideProcessName;                             //@synthesize overrideProcessName=_overrideProcessName - In the implementation block
@property (assign,getter=isDebugBuild,nonatomic) bool debugBuild;                      //@synthesize debugBuild=_debugBuild - In the implementation block
@property (assign,nonatomic) bool shouldLogToConsole;                                  //@synthesize shouldLogToConsole=_shouldLogToConsole - In the implementation block
@property (assign,nonatomic) bool shouldCrashOnError;                                  //@synthesize shouldCrashOnError=_shouldCrashOnError - In the implementation block
@property (assign,nonatomic) bool shouldReportToServer;                                //@synthesize shouldReportToServer=_shouldReportToServer - In the implementation block
@property (assign,nonatomic) unsigned long long numberOfValidationErrors;              //@synthesize numberOfValidationErrors=_numberOfValidationErrors - In the implementation block
@property (nonatomic,retain) NSMutableArray * consoleErrorMessages;                    //@synthesize consoleErrorMessages=_consoleErrorMessages - In the implementation block
+(id)sharedInstance;
-(void)dealloc;
-(id)init;
-(void)setOverrideProcessName:(id)arg1 ;
-(void)setValidationTargetName:(id)arg1 ;
-(void)setConsoleErrorMessages:(id)arg1 ;
-(void)performValidations:(/*^block*/ id)arg1 withPreValidationHandler:(/*^block*/ id)arg2 postValidationHandler:(/*^block*/ id)arg3 safeCategoryInstallationHandler:(/*^block*/ id)arg4 ;
-(void)setNumberOfValidationErrors:(unsigned long long)arg1 ;
-(void)setForceDoNotReport:(bool)arg1 ;
-(void)setDebugBuild:(bool)arg1 ;
-(void)setShouldLogToConsole:(bool)arg1 ;
-(void)setShouldCrashOnError:(bool)arg1 ;
-(void)setShouldReportToServer:(bool)arg1 ;
-(id)validationTargetName;
-(unsigned long long)numberOfValidationErrors;
-(void)_printConsoleReport:(bool)arg1 isDelayed:(bool)arg2 ;
-(void)installSafeCategories:(/*^block*/ id)arg1 afterDelay:(double)arg2 validationTargetName:(id)arg3 overrideProcessName:(id)arg4 forceDoNotReport:(bool)arg5 ;
-(bool)isDebugBuild;
-(id)consoleErrorMessages;
-(id)overrideProcessName;
-(bool)_validateClass:(id)arg1 hasMethod:(id)arg2 methodType:(int)arg3 returnType:(id)arg4 arguments:(id)arg5 ;
-(bool)validateProtocol:(id)arg1 hasMethod:(id)arg2 isInstanceMethod:(bool)arg3 isRequired:(bool)arg4 ;
-(bool)installSafeCategory:(id)arg1 canInteractWithTargetClass:(bool)arg2 ;
-(void)performValidations:(/*^block*/ id)arg1 withPreValidationHandler:(/*^block*/ id)arg2 postValidationHandler:(/*^block*/ id)arg3 ;
-(void)installSafeCategories:(/*^block*/ id)arg1 afterDelay:(double)arg2 validationTargetName:(id)arg3 overrideProcessName:(id)arg4 ;
-(bool)validateClass:(id)arg1 ;
-(bool)validateClass:(id)arg1 isKindOfClass:(id)arg2 ;
-(bool)validateClass:(id)arg1 hasInstanceVariable:(id)arg2 ;
-(bool)validateClass:(id)arg1 hasInstanceVariable:(id)arg2 withType:(char*)arg3 ;
-(bool)validateClass:(id)arg1 hasInstanceMethod:(id)arg2 ;
-(bool)validateClass:(id)arg1 hasClassMethod:(id)arg2 returnType:(char*)arg3 parameterCount:(unsigned long long)arg4 ;
-(bool)validateClass:(id)arg1 hasInstanceMethod:(id)arg2 returnType:(char*)arg3 parameterCount:(unsigned long long)arg4 ;
-(bool)validateClass:(id)arg1 hasClassMethod:(id)arg2 ;
-(bool)validateClass:(id)arg1 hasProperty:(id)arg2 ;
-(bool)validateClass:(id)arg1 conformsToProtocol:(id)arg2 ;
-(bool)validateProtocol:(id)arg1 hasOptionalInstanceMethod:(id)arg2 ;
-(bool)validateProtocol:(id)arg1 hasRequiredInstanceMethod:(id)arg2 ;
-(bool)validateProtocol:(id)arg1 hasOptionalClassMethod:(id)arg2 ;
-(bool)validateProtocol:(id)arg1 hasRequiredClassMethod:(id)arg2 ;
-(bool)validateProtocol:(id)arg1 hasProperty:(id)arg2 ;
-(bool)installSafeCategory:(id)arg1 ;
-(bool)shouldLogToConsole;
-(bool)shouldCrashOnError;
-(bool)shouldReportToServer;
-(bool)forceDoNotReport;
@end

