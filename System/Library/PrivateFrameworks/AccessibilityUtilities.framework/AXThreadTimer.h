/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:00:32 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AccessibilityUtilities/AXTimer.h>

@class NSThread, AXThreadTimerTask;

@interface AXThreadTimer : NSObject <AXTimer> {

	NSThread* _thread;
	/*^block*/ id _cancelBlock;
	AXThreadTimerTask* _task;

}

@property (getter=isCancelled,nonatomic,readonly) bool cancelled; 
@property (nonatomic,retain) AXThreadTimerTask * task;                         //@synthesize task=_task - In the implementation block
@property (getter=isActive,nonatomic,readonly) bool active; 
@property (getter=isPending,nonatomic,readonly) bool pending; 
-(void)dealloc;
-(bool)isActive;
-(bool)isCancelled;
-(void)cancel;
-(id)task;
-(void)afterDelay:(double)arg1 processBlock:(/*^block*/ id)arg2 ;
-(void)afterDelay:(double)arg1 processBlock:(/*^block*/ id)arg2 cancelBlock:(/*^block*/ id)arg3 ;
-(void)setTask:(id)arg1 ;
-(void)_runAfterDelay:(id)arg1 ;
-(id)initWithThread:(id)arg1 ;
-(bool)isPending;
@end

