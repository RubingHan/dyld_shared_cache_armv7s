/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:00:32 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@class AXLangMap, NSString, NSLocale, NSCharacterSet, AXLanguageManager;

@interface AXDialectMap : NSObject {

	AXLangMap* _langMap;
	NSString* _voiceName;
	NSLocale* _locale;
	NSString* _specificLanguageID;
	NSCharacterSet* _speakableCharacters;
	NSCharacterSet* _secondaryLanguageRange;

}

@property (nonatomic,readonly) NSString * languageNameInCurrentLocale; 
@property (nonatomic,readonly) NSString * languageNameInNativeLocale; 
@property (nonatomic,readonly) NSString * languageNameAndLocaleInCurrentLocale; 
@property (nonatomic,readonly) NSString * localeNameInCurrentLocale; 
@property (nonatomic,readonly) NSString * languageNameAndLocaleInNativeLocale; 
@property (assign,nonatomic) AXLangMap * langMap;                                            //@synthesize langMap=_langMap - In the implementation block
@property (nonatomic,retain) NSLocale * locale;                                              //@synthesize locale=_locale - In the implementation block
@property (nonatomic,copy) NSString * specificLanguageID;                                    //@synthesize specificLanguageID=_specificLanguageID - In the implementation block
@property (nonatomic,readonly) NSString * regionID; 
@property (nonatomic,copy) NSString * voiceName;                                             //@synthesize voiceName=_voiceName - In the implementation block
@property (nonatomic,retain) NSCharacterSet * speakableCharacters;                           //@synthesize speakableCharacters=_speakableCharacters - In the implementation block
@property (nonatomic,readonly) AXLanguageManager * langManager; 
@property (nonatomic,retain) NSCharacterSet * secondaryLanguageRange;                        //@synthesize secondaryLanguageRange=_secondaryLanguageRange - In the implementation block
-(void)dealloc;
-(id)description;
-(id)debugDescription;
-(void)setLocale:(id)arg1 ;
-(id)locale;
-(id)specificLanguageID;
-(id)basicDescription;
-(void)setSpeakableCharacters:(id)arg1 ;
-(void)setSecondaryLanguageRange:(id)arg1 ;
-(void)setSpecificLanguageID:(id)arg1 ;
-(void)setLangMap:(id)arg1 ;
-(id)langMap;
-(id)languageNameAndLocaleInCurrentLocale;
-(id)languageNameAndLocaleInNativeLocale;
-(id)langManager;
-(id)secondaryLanguageRange;
-(id)speakableCharacters;
-(bool)canSpeakCharacter:(unsigned short)arg1 ;
-(id)initWithLocale:(id)arg1 voiceName:(id)arg2 specificLanguageID:(id)arg3 speakableCharacters:(id)arg4 secondaryLanguageRange:(id)arg5 ;
-(id)languageNameInCurrentLocale;
-(id)languageNameInNativeLocale;
-(id)localeNameInCurrentLocale;
-(bool)isDialectSecondaryForCharacter:(unsigned short)arg1 ;
-(bool)canSpeakLongCharacter:(unsigned)arg1 ;
-(bool)canSpeakString:(id)arg1 ;
-(id)regionID;
-(id)voiceName;
-(void)setVoiceName:(id)arg1 ;
@end

