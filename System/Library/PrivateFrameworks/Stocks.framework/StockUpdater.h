/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:02:45 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/Stocks.framework/Stocks
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Stocks/XMLHTTPRequest.h>

@protocol StockUpdaterDelegate;
@class NSArray, NSMutableDictionary, QuoteParserData, NSError;

@interface StockUpdater : XMLHTTPRequest {

	NSArray* _requestStocks;
	bool _ignoreNewRequests;
	bool _isComprehensive;
	NSMutableDictionary* _cacheDurationForParts;
	<StockUpdaterDelegate>* _delegate;
	QuoteParserData* _quoteParserData;
	NSError* _lastError;
	/*^block*/ id _updateCompletionHandler;

}

@property (nonatomic,retain) NSArray * requestStocks;                               //@synthesize requestStocks=_requestStocks - In the implementation block
@property (assign,nonatomic) bool isComprehensive;                                  //@synthesize isComprehensive=_isComprehensive - In the implementation block
@property (assign,nonatomic,__weak) <StockUpdaterDelegate> * delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain) NSError * lastError;                                   //@synthesize lastError=_lastError - In the implementation block
@property (nonatomic,copy) id updateCompletionHandler;                              //@synthesize updateCompletionHandler=_updateCompletionHandler - In the implementation block
-(int)parseData:(id)arg1 ;
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(id)delegate;
-(void)cancel;
-(void).cxx_destruct;
-(void)failWithError:(id)arg1 ;
-(void)didParseData;
-(id)requestStocks;
-(void)setRequestStocks:(id)arg1 ;
-(bool)hadError;
-(void)_updateWithPartsTag:(id)arg1 forStocks:(id)arg2 ;
-(void)setUpdateCompletionHandler:(/*^block*/ id)arg1 ;
-(void)setLastError:(id)arg1 ;
-(id)_symbolTagsForRequestStocks;
-(void)_updateWithPostBody:(id)arg1 ;
-(void)setCacheTimeInterval:(double)arg1 forPartsTag:(id)arg2 ;
-(bool)isComprehensive;
-(void)setIsComprehensive:(bool)arg1 ;
-(id)lastError;
-(/*^block*/ id)updateCompletionHandler;
-(id)aggregateDictionaryDomain;
@end

