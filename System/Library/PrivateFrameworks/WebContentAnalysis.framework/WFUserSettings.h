/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:03:19 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/WebContentAnalysis.framework/WebContentAnalysis
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@class NSDictionary, NSString, WFWhitelistSiteBuffer, NSArray;

@interface WFUserSettings : NSObject {

	NSDictionary* _userSettings;
	NSString* _userName;
	WFWhitelistSiteBuffer* _contentFilterOverriddenWhiteListedSitesBuffer;
	WFWhitelistSiteBuffer* _contentFilterOverriddenBlackListedSitesBuffer;
	WFWhitelistSiteBuffer* _whiteListedSitesBuffer;

}

@property (nonatomic,copy) NSString * userName;                                                  //@synthesize userName=_userName - In the implementation block
@property (assign,nonatomic) long long restrictionType; 
@property (nonatomic,readonly) bool canEditRestrictionType; 
@property (nonatomic,retain) NSArray * contentFilterOverriddenWhiteListedSites; 
@property (nonatomic,readonly) bool canEditContentFilterOverriddenWhiteListedSites; 
@property (nonatomic,retain) NSArray * contentFilterOverriddenBlackListedSites; 
@property (nonatomic,readonly) bool canEditContentFilterOverriddenBlackListedSites; 
@property (nonatomic,retain) NSArray * whiteListAllowedSites; 
@property (nonatomic,readonly) bool canEditWhiteListAllowedSites; 
@property (assign,nonatomic) bool overridesAllowed; 
@property (nonatomic,readonly) bool canEditOverridesAllowed; 
+(id)metasitesPath;
+(id)_arrayByConvertingLinesInStringsAtPath:(id)arg1 ;
+(id)metasitesExceptionPath;
+(id)_metasiteDomainNamesArray;
+(id)_sharedMetasiteDomainNamesDictionary;
+(id)_sharedMetasiteExceptionsDomainNamesArray;
+(bool)_isURLMetasite:(id)arg1 ;
-(id)userName;
-(void)dealloc;
-(void)setUserName:(id)arg1 ;
-(bool)contentFilterListsAllowURL:(id)arg1 ;
-(bool)contentFilterOverridesEnabled;
-(bool)whiteListEnabled;
-(id)whiteListAllowedSites;
-(id)initWithUserName:(id)arg1 ;
-(long long)restrictionType;
-(bool)alwaysAllowHTTPS;
-(void)setAlwaysAllowHTTPS:(bool)arg1 ;
-(bool)overridesAllowed;
-(bool)contentFilterOverriddenBlackListContainsURL:(id)arg1 ;
-(bool)contentFilterEnabled;
-(bool)autoWhitelistContainsURL:(id)arg1 ;
-(bool)contentFilterOverriddenWhiteListContainsURL:(id)arg1 ;
-(bool)whiteListContainsURL:(id)arg1 ;
-(id)_managedDefaultsPath;
-(bool)_setManagedDefaults:(id)arg1 ;
-(id)_userSettingsForUser:(id)arg1 ;
-(bool)_addManagedDefaults:(id)arg1 ;
-(void)setRestrictionType:(long long)arg1 ;
-(id)contentFilterOverriddenWhiteListedSites;
-(id)contentFilterOverriddenBlackListedSites;
-(id)contentFilterOverriddenWhiteListedSitesBuffer;
-(bool)contentFilterOverriddenList:(id)arg1 containsURL:(id)arg2 ;
-(id)contentFilterOverriddenBlackListedSitesBuffer;
-(id)whiteListedSitesBuffer;
-(bool)canEditRestrictionType;
-(id)contentFilterOverriddenSites;
-(void)setContentFilterOverriddenWhiteListedSites:(id)arg1 ;
-(bool)canEditContentFilterOverriddenWhiteListedSites;
-(void)setContentFilterOverriddenBlackListedSites:(id)arg1 ;
-(bool)canEditContentFilterOverriddenBlackListedSites;
-(void)setWhiteListAllowedSites:(id)arg1 ;
-(bool)canEditWhiteListAllowedSites;
-(void)setOverridesAllowed:(bool)arg1 ;
-(bool)canEditOverridesAllowed;
-(bool)canEditAlwaysAllowHTTPS;
-(bool)restrictWebEnabled;
-(void)setRestrictWebEnabled:(bool)arg1 ;
-(void)setContentFilterEnabled:(bool)arg1 ;
-(void)setContentFilterOverridesEnabled:(bool)arg1 ;
-(void)setWhiteListEnabled:(bool)arg1 ;
@end

