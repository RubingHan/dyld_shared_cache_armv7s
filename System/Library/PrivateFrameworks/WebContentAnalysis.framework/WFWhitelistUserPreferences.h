/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:03:19 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/WebContentAnalysis.framework/WebContentAnalysis
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@class WFWhitelistSiteBuffer, NSString;

@interface WFWhitelistUserPreferences : NSObject {

	WFWhitelistSiteBuffer* filterWhitelist;
	WFWhitelistSiteBuffer* filterBlacklist;
	WFWhitelistSiteBuffer* webWhitelist;
	bool filterEnabled;
	bool whitelistEnabled;
	bool alwaysAllowHTTPS;
	NSString* username;

}

@property (assign) bool filterEnabled; 
@property (assign) bool whitelistEnabled; 
@property (assign) bool alwaysAllowHTTPS; 
@property (retain) NSString * username; 
@property (readonly) WFWhitelistSiteBuffer * filterWhitelist; 
@property (readonly) WFWhitelistSiteBuffer * filterBlacklist; 
@property (readonly) WFWhitelistSiteBuffer * webWhitelist; 
+(id)metasitesPath;
+(id)_arrayByConvertingLinesInStringsAtPath:(id)arg1 ;
+(id)metasitesExceptionPath;
+(id)_metasiteDomainNamesArray;
+(id)_sharedMetasiteDomainNamesDictionary;
+(id)_sharedMetasiteExceptionsDomainNamesArray;
+(id)preferencesPathForUsername:(id)arg1 ;
+(id)whitelistWithPreferences:(id)arg1 ;
+(id)_modificationDateForFileAtPath:(id)arg1 ;
+(id)_cachedWhitelistForPath:(id)arg1 username:(id)arg2 ;
+(bool)_isURLMetasite:(id)arg1 ;
+(id)whitelistForUser:(id)arg1 ;
+(id)defaultWhitelistForUser:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(id)description;
-(void)setUsername:(id)arg1 ;
-(id)username;
-(id)initWithPreferences:(id)arg1 ;
-(bool)isURLAllowed:(id)arg1 reason:(id*)arg2 shouldFilter:(bool*)arg3 foundOnList:(bool*)arg4 ;
-(bool)isURL:(id)arg1 onList:(id)arg2 ;
-(bool)isURLAllowed:(id)arg1 ;
-(id)pronounceOnPageURLString:(id)arg1 shouldFilter:(bool*)arg2 ;
-(bool)filterEnabled;
-(void)setFilterEnabled:(bool)arg1 ;
-(bool)whitelistEnabled;
-(void)setWhitelistEnabled:(bool)arg1 ;
-(bool)alwaysAllowHTTPS;
-(void)setAlwaysAllowHTTPS:(bool)arg1 ;
-(id)filterWhitelist;
-(id)filterBlacklist;
-(id)webWhitelist;
@end

