/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:02:41 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/SoftwareUpdateServices.framework/SoftwareUpdateServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <SoftwareUpdateServices/SUManagerClientInterface.h>

@protocol SUManagerClientDelegate;
@class NSXPCConnection, SUDescriptor;

@interface SUManagerClient : NSObject <SUManagerClientInterface> {

	NSXPCConnection* _serverConnection;
	<SUManagerClientDelegate>* _delegate;
	bool _connected;
	bool _serverIsExiting;
	int _clientType;
	bool _installing;
	SUDescriptor* _installDescriptor;

}

@property (assign,nonatomic) <SUManagerClientDelegate> * delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) int clientType;                                    //@synthesize clientType=_clientType - In the implementation block
@property (nonatomic,retain) SUDescriptor * installDescriptor;                  //@synthesize installDescriptor=_installDescriptor - In the implementation block
-(void)pauseDownload:(/*^block*/ id)arg1 ;
-(void)downloadDidFinish:(id)arg1 ;
-(id)_remoteInterface;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(id)delegate;
-(void)invalidate;
-(void)_invalidateConnection;
-(id)initWithDelegate:(id)arg1 ;
-(id)initWithDelegate:(id)arg1 clientType:(int)arg2 ;
-(void)setClientType:(int)arg1 ;
-(void)connectToServerIfNecessary;
-(id)_remoteInterfaceWithErrorHandler:(/*^block*/ id)arg1 connectIfNecessary:(bool)arg2 ;
-(void)_setClientType;
-(id)_remoteInterfaceWithErrorHandler:(/*^block*/ id)arg1 ;
-(void)isScanning:(/*^block*/ id)arg1 ;
-(void)scanForUpdates:(id)arg1 withResult:(/*^block*/ id)arg2 ;
-(void)isDownloading:(/*^block*/ id)arg1 ;
-(void)startDownload:(/*^block*/ id)arg1 ;
-(void)startDownloadWithMetadata:(id)arg1 withResult:(/*^block*/ id)arg2 ;
-(void)updateDownloadMetadata:(id)arg1 withResult:(/*^block*/ id)arg2 ;
-(void)purgeDownload:(/*^block*/ id)arg1 ;
-(void)download:(/*^block*/ id)arg1 ;
-(void)isUpdateReadyForInstallation:(/*^block*/ id)arg1 ;
-(void)installUpdate:(/*^block*/ id)arg1 ;
-(bool)createInstallationKeybag:(id)arg1 ;
-(void)scanRequestDidStartForOptions:(id)arg1 ;
-(void)scanRequestDidFinishForOptions:(id)arg1 update:(id)arg2 error:(id)arg3 ;
-(void)scanDidCompleteWithNewUpdateAvailable:(id)arg1 error:(id)arg2 ;
-(void)automaticDownloadDidFailToStartForNewUpdateAvailable:(id)arg1 withError:(id)arg2 ;
-(void)downloadWasInvalidatedForNewUpdateAvailable:(id)arg1 ;
-(void)downloadDidStart:(id)arg1 ;
-(void)downloadProgressDidChange:(id)arg1 ;
-(void)downloadDidFail:(id)arg1 withError:(id)arg2 ;
-(void)installDidStart:(id)arg1 ;
-(void)installDidFail:(id)arg1 withError:(id)arg2 ;
-(void)installDidFinish:(id)arg1 ;
-(void)noteConnectionDropped;
-(void)setInstallDescriptor:(id)arg1 ;
-(bool)isInstallationKeybagRequired;
-(void)noteServerExiting;
-(int)clientType;
-(id)installDescriptor;
-(void)resumeDownload:(/*^block*/ id)arg1 ;
-(void)cancelDownload:(/*^block*/ id)arg1 ;
@end

