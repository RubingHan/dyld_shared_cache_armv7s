/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:01:32 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/MobileBackup.framework/MobileBackup
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <MobileBackup/MobileBackup-Structs.h>
@interface MBManager : NSObject {

	id _delegate;

}

@property (assign,nonatomic) NSObject<MBManagerDelegate> * delegate;              //@synthesize delegate=_delegate - In the implementation block
-(void)setLogLevel:(int)arg1 ;
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(id)delegate;
-(id)_init;
-(void)cancel;
-(id)initWithDelegate:(id)arg1 eventQueue:(id)arg2 ;
-(id)restoreFilesForDomain:(id)arg1 relativePath:(id)arg2 pendingOnly:(bool)arg3 range:(NSRange)arg4 error:(id*)arg5 ;
-(bool)setupBackupWithPasscode:(id)arg1 error:(id*)arg2 ;
-(bool)isBackupEnabled;
-(void)setBackupEnabled:(bool)arg1 ;
-(void)syncBackupEnabled;
-(id)backupState;
-(id)backupList;
-(id)getBackupListWithError:(id*)arg1 ;
-(id)getBackupListWithFiltering:(bool)arg1 error:(id*)arg2 ;
-(bool)recordRestoreFailure:(id)arg1 error:(id*)arg2 ;
-(id)restoreFailuresForDataclass:(id)arg1 assetType:(id)arg2 range:(NSRange)arg3 ;
-(unsigned long long)countOfRestoreFailuresForDataclass:(id)arg1 assetType:(id)arg2 ;
-(void)startBackup;
-(bool)startBackupWithError:(id*)arg1 ;
-(bool)restoreFileExistsWithPath:(id)arg1 ;
-(bool)restoreDataExistsForApplicationWithBundleID:(id)arg1 size:(unsigned long long*)arg2 ;
-(id)restoreFilesForDomain:(id)arg1 error:(id*)arg2 ;
-(id)restoreFilesForDomain:(id)arg1 relativePath:(id)arg2 pendingOnly:(bool)arg3 error:(id*)arg4 ;
-(void)prioritizeRestoreFileWithPath:(id)arg1 ;
-(id)dateOfLastBackup;
-(id)dateOfNextScheduledBackup;
-(void)startRestoreForBackupUDID:(id)arg1 snapshotID:(unsigned long long)arg2 ;
-(bool)startRestoreForBackupUDID:(id)arg1 snapshotID:(unsigned long long)arg2 error:(id*)arg3 ;
-(bool)restoreFileWithPath:(id)arg1 error:(id*)arg2 ;
-(bool)restoreFileWithPath:(id)arg1 context:(id)arg2 error:(id*)arg3 ;
-(void)restoreFileWithPath:(id)arg1 ;
-(bool)restoreApplicationWithBundleID:(id)arg1 failed:(bool)arg2 error:(id*)arg3 ;
-(bool)restoreApplicationWithBundleID:(id)arg1 failed:(bool)arg2 context:(id)arg3 error:(id*)arg4 ;
-(bool)cancelApplicationRestoreWithBundleID:(id)arg1 error:(id*)arg2 ;
-(void)finishRestore;
-(void)insufficientFreeSpaceToRestore;
-(void)cancelRestore;
-(bool)deleteBackupUDID:(id)arg1 error:(id*)arg2 ;
-(bool)startScanWithError:(id*)arg1 ;
-(unsigned long long)nextBackupSize;
-(id)domainInfoForName:(id)arg1 ;
-(id)domainInfoList;
-(bool)removeDomainName:(id)arg1 error:(id*)arg2 ;
-(bool)isBackupEnabledForDomainName:(id)arg1 ;
-(void)setBackupEnabled:(bool)arg1 forDomainName:(id)arg2 ;
-(bool)extractItemFromBackupUDID:(id)arg1 snapshotID:(unsigned long long)arg2 domainName:(id)arg3 relativePath:(id)arg4 toPath:(id)arg5 error:(id*)arg6 ;
-(bool)addFileToBackupUDID:(id)arg1 snapshotID:(unsigned long long)arg2 domainName:(id)arg3 relativePath:(id)arg4 fromPath:(id)arg5 error:(id*)arg6 ;
-(bool)deleteItemFromBackupUDID:(id)arg1 snapshotID:(unsigned long long)arg2 domainName:(id)arg3 relativePath:(id)arg4 error:(id*)arg5 ;
-(id)getAppleIDsForBackupUDID:(id)arg1 snapshotID:(unsigned long long)arg2 error:(id*)arg3 ;
-(id)restoreInfo;
-(int)getLogLevel;
-(void)setAllowiTunesBackup:(bool)arg1 ;
-(bool)allowiTunesBackup;
-(void)rebootDevice;
-(id)initWithDelegate:(id)arg1 ;
-(id)restoreState;
@end

