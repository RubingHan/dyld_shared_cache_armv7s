/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:02:17 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/PhysicsKit.framework/PhysicsKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PhysicsKit/PhysicsKit-Structs.h>
#import <CoreFoundation/NSCopying.h>
#import <CoreFoundation/NSCoding.h>

@protocol NSObject;
@class PKPhysicsWorld, NSMutableArray, SKNode, NSArray;

@interface PKPhysicsBody : NSObject <NSCopying, NSCoding> {

	<NSObject>* _representedObject;
	unsigned* _bodyDef : 2BodyDef;
	unsigned* _body : 2Body;
	unsigned* _field : 2PKField;
	int _dynamicType;
	vector<PKPhysicsShape *, std::__1::allocator<PKPhysicsShape *> >* _shapes;
	PKPhysicsWorld* _world;
	NSMutableArray* _joints;
	bool _inUse;
	int _shapeType;
	CGPathRef _path;
	CGPoint _p0;
	CGPoint _p1;
	CGSize _size;
	double _radius;
	double _edgeRadius;
	CGImageRef _mask;
	double _canonicalXScale;
	double _canonicalYScale;
	/*^block*/ id _postStepBlock;

}

@property (nonatomic,readonly) SKNode * node; 
@property (nonatomic,readonly) vector<PKPhysicsShape ** _shapes; 
@property (assign,nonatomic) unsigned* _bodyDef : 2BodyDef; 
@property (assign,nonatomic) unsigned* _body : 2Body; 
@property (assign,nonatomic) unsigned* _fixtureDef : 2FixtureDef; 
@property (assign,nonatomic) unsigned* _fixture : 2Fixture; 
@property (assign,nonatomic) CGPoint position; 
@property (assign,nonatomic) double rotation; 
@property (assign,getter=isDynamic,nonatomic) bool dynamic; 
@property (assign,nonatomic) bool usesPreciseCollisionDetection; 
@property (assign,nonatomic) bool allowsRotation; 
@property (assign,getter=isResting,nonatomic) bool resting; 
@property (assign,nonatomic) double friction; 
@property (assign,nonatomic) double charge; 
@property (assign,nonatomic) double restitution; 
@property (assign,nonatomic) double linearDamping; 
@property (assign,nonatomic) double angularDamping; 
@property (assign,nonatomic) double density; 
@property (assign,nonatomic) double mass; 
@property (nonatomic,readonly) double area; 
@property (assign,nonatomic) double radius; 
@property (assign,nonatomic) bool affectedByGravity; 
@property (assign,nonatomic) unsigned categoryBitMask; 
@property (assign,nonatomic) unsigned collisionBitMask; 
@property (assign,nonatomic) unsigned contactTestBitMask; 
@property (nonatomic,readonly) NSArray * joints; 
@property (assign,nonatomic,__weak) <NSObject> * representedObject; 
@property (nonatomic,copy) id postStepBlock;                                     //@synthesize postStepBlock=_postStepBlock - In the implementation block
@property (assign,nonatomic) CGVector velocity; 
@property (assign,nonatomic) double angularVelocity; 
+(id)bodyWithCircleOfRadius:(double)arg1 center:(CGPoint)arg2 ;
+(id)bodyWithRectangleOfSize:(CGSize)arg1 edgeRadius:(double)arg2 ;
+(id)bodyWithRectangleOfSize:(CGSize)arg1 center:(CGPoint)arg2 edgeRadius:(double)arg3 ;
+(id)bodyWithBodies:(id)arg1 ;
+(id)bodyWithRectangleOfSize:(CGSize)arg1 center:(CGPoint)arg2 ;
+(id)bodyWithRectangleOfSize:(CGSize)arg1 ;
+(id)bodyWithCircleOfRadius:(double)arg1 ;
+(id)bodyWithEdgeLoopFromPath:(CGPathRef)arg1 ;
+(id)bodyWithEdgeFromPoint:(CGPoint)arg1 toPoint:(CGPoint)arg2 ;
+(id)bodyWithPolygonFromPath:(CGPathRef)arg1 ;
+(id)bodyWithEdgeChainFromPath:(CGPathRef)arg1 ;
-(id)_descriptionClassName;
-(id)node;
-(bool)_inUse;
-(bool)active;
-(id)_world;
-(void)setActive:(bool)arg1 ;
-(vector<PKPhysicsShape *, std::__1::allocator<PKPhysicsShape *> >*)_shapes;
-(unsigned*)_bodyDef;
-(id)_joints;
-(unsigned*)_fixture;
-(void)set_fixture:(unsigned*)arg1 ;
-(unsigned*)_fixtureDef;
-(void)set_fixtureDef:(unsigned*)arg1 ;
-(void)setIsSensor:(bool)arg1 ;
-(bool)isSensor;
-(void)set_world:(id)arg1 ;
-(void)set_joints:(id)arg1 ;
-(void)set_inUse:(bool)arg1 ;
-(void)set_bodyDef:(unsigned*)arg1 ;
-(void)set_body:(unsigned*)arg1 ;
-(unsigned*)_body;
-(void)setCanonicalScale:(double)arg1 yScale:(double)arg2 ;
-(void)reapplyScale:(double)arg1 yScale:(double)arg2 ;
-(id)_descriptionClassName;
-(void)applyForce:(CGPoint)arg1 ;
-(void)applyForce:(CGPoint)arg1 atPoint:(CGPoint)arg2 ;
-(void)applyTorque:(double)arg1 ;
-(void)applyImpulse:(CGVector)arg1 atPoint:(CGPoint)arg2 ;
-(void)applyAngularImpulse:(double)arg1 ;
-(id)allContactedBodies;
-(unsigned)contactTestBitMask;
-(id)joints;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)init;
-(id)description;
-(void)setVelocity:(CGVector)arg1 ;
-(void)setMass:(double)arg1 ;
-(double)charge;
-(id)copyWithZone:(NSZone)arg1 ;
-(void)setPosition:(CGPoint)arg1 ;
-(CGPoint)position;
-(void)setCharge:(double)arg1 ;
-(void)setResting:(bool)arg1 ;
-(void)setDynamic:(bool)arg1 ;
-(void)setCollisionBitMask:(unsigned)arg1 ;
-(void)setCategoryBitMask:(unsigned)arg1 ;
-(void)setFriction:(double)arg1 ;
-(void)setDensity:(double)arg1 ;
-(void)setAllowsRotation:(bool)arg1 ;
-(void)setRestitution:(double)arg1 ;
-(double)friction;
-(double)density;
-(void)setLinearDamping:(double)arg1 ;
-(void)setAngularDamping:(double)arg1 ;
-(bool)allowsRotation;
-(CGVector)velocity;
-(void)setRotation:(double)arg1 ;
-(double)rotation;
-(double)angularVelocity;
-(void)setAngularVelocity:(double)arg1 ;
-(double)restitution;
-(double)linearDamping;
-(double)angularDamping;
-(double)mass;
-(void)applyImpulse:(CGVector)arg1 ;
-(id).cxx_construct;
-(void).cxx_destruct;
-(id)representedObject;
-(void)setRepresentedObject:(id)arg1 ;
-(void)setAffectedByGravity:(bool)arg1 ;
-(void)setContactTestBitMask:(unsigned)arg1 ;
-(void)setPostStepBlock:(/*^block*/ id)arg1 ;
-(void)setUsesPreciseCollisionDetection:(bool)arg1 ;
-(unsigned)collisionBitMask;
-(unsigned)categoryBitMask;
-(void)applyUnscaledImpulse:(CGVector)arg1 atPoint:(CGPoint)arg2 ;
-(void)applyUnscaledForce:(CGVector)arg1 atPoint:(CGPoint)arg2 ;
-(void)applyUnscaledImpulse:(CGVector)arg1 ;
-(void)applyUnscaledForce:(CGVector)arg1 ;
-(id)initWithCircleOfRadius:(double)arg1 ;
-(id)initWithRectangleOfSize:(CGSize)arg1 ;
-(id)initWithEdgeFromPoint:(CGPoint)arg1 toPoint:(CGPoint)arg2 ;
-(id)initWithPolygonFromPath:(CGPathRef)arg1 ;
-(id)initWithEdgeChainFromPath:(CGPathRef)arg1 ;
-(id)initWithEdgeLoopFromPath:(CGPathRef)arg1 ;
-(void)set_allowSleep:(bool)arg1 ;
-(bool)isDynamic;
-(bool)usesPreciseCollisionDetection;
-(bool)isResting;
-(bool)affectedByGravity;
-(void)setRadius:(double)arg1 ;
-(double)radius;
-(double)area;
-(id)initWithCircleOfRadius:(double)arg1 center:(CGPoint)arg2 ;
-(id)initWithRectangleOfSize:(CGSize)arg1 center:(CGPoint)arg2 ;
-(id)initWithRectangleOfSize:(CGSize)arg1 center:(CGPoint)arg2 edgeRadius:(float)arg3 ;
-(id)initWithBodies:(id)arg1 ;
-(id)_descriptionFormat;
-(bool)_allowSleep;
-(/*^block*/ id)postStepBlock;
@end

