/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:02:55 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <StoreServices/StoreServices-Structs.h>
#import <StoreServices/SSXPCCoding.h>
#import <CoreFoundation/NSCopying.h>

@class NSMutableDictionary, NSNumber, NSString, NSDictionary;

@interface SSURLBagContext : NSObject <SSXPCCoding, NSCopying> {

	long long _allowedRetryCount;
	bool _allowsBootstrapCellularData;
	bool _allowsExpiredBags;
	long long _bagType;
	NSMutableDictionary* _httpHeaders;
	bool _ignoresCaches;
	NSNumber* _userIdentifier;
	bool _usesCachedBagsOnly;

}

@property (assign,nonatomic) long long allowedRetryCount;                   //@synthesize allowedRetryCount=_allowedRetryCount - In the implementation block
@property (assign,nonatomic) long long bagType;                             //@synthesize bagType=_bagType - In the implementation block
@property (nonatomic,readonly) NSString * cacheKey; 
@property (assign,nonatomic) bool ignoresCaches;                            //@synthesize ignoresCaches=_ignoresCaches - In the implementation block
@property (nonatomic,retain) NSNumber * userIdentifier;                     //@synthesize userIdentifier=_userIdentifier - In the implementation block
@property (nonatomic,copy) NSDictionary * allHTTPHeaders; 
@property (assign,nonatomic) bool allowsBootstrapCellularData;              //@synthesize allowsBootstrapCellularData=_allowsBootstrapCellularData - In the implementation block
@property (assign,nonatomic) bool allowsExpiredBags;                        //@synthesize allowsExpiredBags=_allowsExpiredBags - In the implementation block
@property (assign,nonatomic) bool usesCachedBagsOnly;                       //@synthesize usesCachedBagsOnly=_usesCachedBagsOnly - In the implementation block
+(id)contextWithBagType:(long long)arg1 ;
-(id)userIdentifier;
-(id)valueForHTTPHeaderField:(id)arg1 ;
-(void)setValue:(id)arg1 forHTTPHeaderField:(id)arg2 ;
-(void)dealloc;
-(id)init;
-(bool)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(id)copyWithZone:(NSZone)arg1 ;
-(id)cacheKey;
-(void)setIgnoresCaches:(bool)arg1 ;
-(id)initWithXPCEncoding:(id)arg1 ;
-(id)copyXPCEncoding;
-(bool)allowsBootstrapCellularData;
-(void)setAllowsBootstrapCellularData:(bool)arg1 ;
-(long long)allowedRetryCount;
-(long long)bagType;
-(id)allHTTPHeaders;
-(void)setAllHTTPHeaders:(id)arg1 ;
-(bool)allowsExpiredBags;
-(void)setAllowsExpiredBags:(bool)arg1 ;
-(bool)ignoresCaches;
-(bool)usesCachedBagsOnly;
-(void)setUsesCachedBagsOnly:(bool)arg1 ;
-(void)setBagType:(long long)arg1 ;
-(void)setUserIdentifier:(id)arg1 ;
-(void)setAllowedRetryCount:(long long)arg1 ;
@end

