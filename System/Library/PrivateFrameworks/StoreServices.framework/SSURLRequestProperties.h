/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:02:55 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <StoreServices/StoreServices-Structs.h>
#import <StoreServices/SSXPCCoding.h>
#import <CoreFoundation/NSCoding.h>
#import <CoreFoundation/NSCopying.h>
#import <CoreFoundation/NSMutableCopying.h>

@protocol OS_dispatch_queue;
@class NSString, NSData, NSObject, NSInputStream, NSDictionary, NSArray, NSURL;

@interface SSURLRequestProperties : NSObject <SSXPCCoding, NSCoding, NSCopying, NSMutableCopying> {

	long long _allowedRetryCount;
	bool _allowsBootstrapCellularData;
	unsigned long long _cachePolicy;
	NSString* _clientAuditBundleIdentifier;
	NSData* _clientAuditTokenData;
	NSString* _clientIdentifier;
	NSObject<OS_dispatch_queue>* _dispatchQueue;
	long long _expectedContentLength;
	NSData* _httpBody;
	NSInputStream* _httpBodyStream;
	NSDictionary* _httpHeaders;
	NSString* _httpMethod;
	bool _isITunesStoreRequest;
	long long _kbsyncType;
	bool _largeDownload;
	unsigned long long _networkServiceType;
	NSDictionary* _requestParameters;
	BOOL _requiresExtendedValidationCertificates;
	bool _requiresHTTPS;
	bool _shouldDecodeResponse;
	bool _shouldDisableCellular;
	bool _shouldDisableCellularFallback;
	bool _shouldProcessProtocol;
	bool _shouldSendSecureToken;
	bool _shouldSetCookies;
	double _timeoutInterval;
	NSString* _urlBagKey;
	long long _urlBagType;
	/*^block*/ id _urlBagURLBlock;
	NSArray* _urls;
	NSArray* _userAgentComponents;

}

@property (readonly) long long allowedRetryCount; 
@property (readonly) NSString * clientIdentifier; 
@property (readonly) unsigned long long cachePolicy; 
@property (readonly) long long expectedContentLength; 
@property (readonly) NSData * HTTPBody; 
@property (readonly) NSDictionary * HTTPHeaders; 
@property (readonly) NSString * HTTPMethod; 
@property (getter=isITunesStoreRequest,readonly) bool ITunesStoreRequest; 
@property (readonly) unsigned long long networkServiceType; 
@property (readonly) NSDictionary * requestParameters; 
@property (readonly) double timeoutInterval; 
@property (readonly) NSString * URLBagKey; 
@property (readonly) NSURL * URL; 
@property (readonly) NSArray * userAgentComponents; 
@property (readonly) bool allowsBootstrapCellularData; 
@property (readonly) bool canBeResolved; 
@property (readonly) NSString * clientAuditBundleIdentifier; 
@property (readonly) NSData * clientAuditTokenData; 
@property (readonly) NSInputStream * HTTPBodyStream; 
@property (readonly) long long KBSyncType; 
@property (getter=isLargeDownload,readonly) bool largeDownload; 
@property (readonly) bool requiresExtendedValidationCertificates; 
@property (readonly) bool requiresHTTPS; 
@property (readonly) bool shouldAddKBSyncData; 
@property (readonly) bool shouldDecodeResponse; 
@property (readonly) bool shouldDisableCellularFallback; 
@property (readonly) bool shouldDisableCellular; 
@property (readonly) bool shouldProcessProtocol; 
@property (readonly) bool shouldSendSecureToken; 
@property (readonly) bool shouldSetCookies; 
@property (readonly) long long URLBagType; 
@property (readonly) id URLBagURLBlock; 
@property (readonly) NSArray * URLs; 
-(unsigned long long)networkServiceType;
-(unsigned long long)cachePolicy;
-(double)timeoutInterval;
-(id)HTTPMethod;
-(id)HTTPBody;
-(id)HTTPBodyStream;
-(long long)expectedContentLength;
-(id)initWithURLRequest:(id)arg1 ;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)init;
-(bool)isEqual:(id)arg1 ;
-(id)description;
-(id)copyWithZone:(NSZone)arg1 ;
-(id)URL;
-(id)initWithURL:(id)arg1 ;
-(id)URLs;
-(id)mutableCopyWithZone:(NSZone)arg1 ;
-(id)initWithXPCEncoding:(id)arg1 ;
-(id)copyXPCEncoding;
-(bool)shouldDecodeResponse;
-(bool)isITunesStoreRequest;
-(bool)allowsBootstrapCellularData;
-(id)userAgentComponents;
-(long long)allowedRetryCount;
-(bool)shouldProcessProtocol;
-(bool)shouldSendSecureToken;
-(bool)shouldSetCookies;
-(id)clientAuditBundleIdentifier;
-(id)clientAuditTokenData;
-(bool)isLargeDownload;
-(long long)KBSyncType;
-(bool)requiresExtendedValidationCertificates;
-(bool)requiresHTTPS;
-(bool)shouldAddKBSyncData;
-(bool)shouldDisableCellular;
-(bool)shouldDisableCellularFallback;
-(id)clientIdentifier;
-(bool)canBeResolved;
-(id)requestParameters;
-(id)URLBagKey;
-(id)copyURLRequest;
-(long long)URLBagType;
-(/*^block*/ id)URLBagURLBlock;
-(id)HTTPHeaders;
-(id)_initCommon;
@end

