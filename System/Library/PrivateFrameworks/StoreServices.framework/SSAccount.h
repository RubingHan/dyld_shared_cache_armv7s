/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:02:54 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <StoreServices/StoreServices-Structs.h>
#import <StoreServices/SSXPCCoding.h>
#import <CoreFoundation/NSCopying.h>

@class NSString, NSData, NSLock, NSNumber;

@interface SSAccount : NSObject <SSXPCCoding, NSCopying> {

	long long _accountKind;
	NSString* _accountName;
	long long _accountScope;
	long long _accountSource;
	bool _active;
	bool _activeLockerAccount;
	long long _availableServiceTypes;
	NSData* _bioToken;
	NSString* _creditsString;
	bool _demo;
	bool _didFallbackToPassword;
	long long _enabledServiceTypes;
	NSString* _itunesPassSerialNumber;
	NSLock* _lock;
	bool _newCustomer;
	NSString* _secureToken;
	NSString* _storeFrontID;
	NSNumber* _uniqueIdentifier;

}

@property (assign) long long accountKind; 
@property (copy) NSString * accountName; 
@property (assign) long long accountScope; 
@property (assign) long long availableServiceTypes; 
@property (getter=isAuthenticated,readonly) bool authenticated; 
@property (copy) NSString * creditsString; 
@property (assign) long long enabledServiceTypes; 
@property (getter=isSocialEnabled) bool socialEnabled; 
@property (copy) NSString * storeFrontIdentifier; 
@property (retain) NSNumber * uniqueIdentifier; 
@property (assign) long long accountSource; 
@property (copy) NSString * secureToken; 
@property (getter=isDemoAccount) bool demoAccount; 
@property (getter=isActive) bool active; 
@property (getter=isActiveLockerAccount) bool activeLockerAccount; 
@property (copy) NSString * ITunesPassSerialNumber; 
@property (getter=isNewCustomer) bool newCustomer; 
-(bool)isAuthenticated;
-(void)dealloc;
-(id)init;
-(bool)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(bool)isActive;
-(id)copyWithZone:(NSZone)arg1 ;
-(void)setActive:(bool)arg1 ;
-(id)uniqueIdentifier;
-(void)setUniqueIdentifier:(id)arg1 ;
-(void)setAccountName:(id)arg1 ;
-(id)accountName;
-(void)setITunesPassSerialNumber:(id)arg1 ;
-(id)initWithXPCEncoding:(id)arg1 ;
-(id)copyXPCEncoding;
-(void)setLockdownDictionary:(id)arg1 ;
-(bool)isNewCustomer;
-(void)setDemoAccount:(bool)arg1 ;
-(bool)isDemoAccount;
-(void)_sendBlockingXPCMessage:(id)arg1 ;
-(long long)availableServiceTypes;
-(bool)didFallbackToPassword;
-(bool)isSocialEnabled;
-(long long)accountSource;
-(void)setAccountScope:(long long)arg1 ;
-(void)setAccountSource:(long long)arg1 ;
-(void)setDidFallbackToPassword:(bool)arg1 ;
-(void)setNewCustomer:(bool)arg1 ;
-(void)setAvailableServiceTypes:(long long)arg1 ;
-(void)setEnabledServiceTypes:(long long)arg1 ;
-(id)initDemoAccount;
-(void)acceptTermsAndConditions:(id)arg1 withCompletionBlock:(/*^block*/ id)arg2 ;
-(void)getDownloadKindsEligibleForContentRestoreWithBlock:(/*^block*/ id)arg1 ;
-(void)getPurchasedItemsForItems:(id)arg1 completionBlock:(/*^block*/ id)arg2 ;
-(void)getTermsAndConditionsWithBlock:(/*^block*/ id)arg1 ;
-(void)addAvailableServiceTypes:(long long)arg1 ;
-(void)getITunesMatchStatusWithCompletionBlock:(/*^block*/ id)arg1 ;
-(void)removeAvailableServiceTypes:(long long)arg1 ;
-(void)resetTransientData;
-(id)copyLockdownRepresentation;
-(bool)mergeValuesFromAccount:(id)arg1 ;
-(id)popBiometricToken;
-(void)setBiometricToken:(id)arg1 ;
-(id)storeFrontIdentifier;
-(id)creditsString;
-(long long)accountScope;
-(void)setStoreFrontIdentifier:(id)arg1 ;
-(void)setActiveLockerAccount:(bool)arg1 ;
-(id)secureToken;
-(void)setSecureToken:(id)arg1 ;
-(bool)isActiveLockerAccount;
-(long long)accountKind;
-(id)ITunesPassSerialNumber;
-(long long)enabledServiceTypes;
-(void)setCreditsString:(id)arg1 ;
-(void)setAccountKind:(long long)arg1 ;
-(void)addEnabledServiceTypes:(long long)arg1 ;
-(void)removeEnabledServiceTypes:(long long)arg1 ;
-(void)setSocialEnabled:(bool)arg1 ;
@end

