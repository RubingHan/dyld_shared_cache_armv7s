/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:02:39 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/ScreenReaderOutputServer.framework/ScreenReaderOutputServer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol SCROBrailleTranslatorProtocol;
#import <ScreenReaderOutputServer/ScreenReaderOutputServer-Structs.h>
@class NSLock, NSBundle;

@interface SCROBrailleTranslationManager : NSObject {

	NSLock* _contentLock;
	<SCROBrailleTranslatorProtocol>* _translator;
	NSBundle* _translatorBundle;
	bool _tableSupportsContractedBraille;
	bool _tableSupportsEightDotBraille;
	<SCROBrailleTranslatorProtocol>* _auxTranslator;
	NSBundle* _auxTranslatorBundle;
	bool _auxTableSupportsContractedBraille;
	bool _auxTableSupportsEightDotBraille;
	<SCROBrailleTranslatorProtocol>* _nemethTranslator;
	bool _alwaysUsesNemethCodeForTechnicalText;

}

@property (nonatomic,readonly) bool primaryTableSupportsContractedBraille;                //@synthesize tableSupportsContractedBraille=_tableSupportsContractedBraille - In the implementation block
@property (nonatomic,readonly) bool primaryTableSupportsEightDotBraille;                  //@synthesize tableSupportsEightDotBraille=_tableSupportsEightDotBraille - In the implementation block
@property (nonatomic,readonly) bool auxiliaryTableSupportsContractedBraille;              //@synthesize auxTableSupportsContractedBraille=_auxTableSupportsContractedBraille - In the implementation block
@property (nonatomic,readonly) bool auxiliaryTableSupportsEightDotBraille;                //@synthesize auxTableSupportsEightDotBraille=_auxTableSupportsEightDotBraille - In the implementation block
@property (assign,nonatomic) bool alwaysUsesNemethCodeForTechnicalText;                   //@synthesize alwaysUsesNemethCodeForTechnicalText=_alwaysUsesNemethCodeForTechnicalText - In the implementation block
+(id)allocWithZone:(NSZone)arg1 ;
+(void)initialize;
+(id)sharedManager;
-(oneway void)release;
-(id)retain;
-(void)dealloc;
-(id)init;
-(id)autorelease;
-(unsigned long long)retainCount;
-(id)copyWithZone:(NSZone)arg1 ;
-(void)setAuxiliaryTranslationTableWithTableIdentifier:(id)arg1 ;
-(id)auxiliaryTableIdentifier;
-(id)printBrailleForTechnicalText:(id)arg1 primaryTable:(bool)arg2 locations:(id*)arg3 ;
-(id)printBrailleForText:(id)arg1 primaryTable:(bool)arg2 contracted:(bool)arg3 eightDot:(bool)arg4 locations:(id*)arg5 ;
-(id)textForPrintBraille:(id)arg1 contracted:(bool)arg2 eightDot:(bool)arg3 locations:(id*)arg4 ;
-(bool)primaryTableSupportsEightDotBraille;
-(bool)primaryTableSupportsContractedBraille;
-(id)primaryTableIdentifier;
-(void)setPrimaryTranslationTableWithTableIdentifier:(id)arg1 ;
-(void)setAlwaysUsesNemethCodeForTechnicalText:(bool)arg1 ;
-(bool)alwaysUsesNemethCodeForTechnicalText;
-(id)_loadTableIdentifier:(id)arg1 bundle:(id*)arg2 existingBundle:(id)arg3 existingTranslator:(id)arg4 ;
-(id)_printBrailleForText:(id)arg1 primaryTable:(bool)arg2 contracted:(bool)arg3 eightDot:(bool)arg4 locations:(id*)arg5 isTechnical:(bool)arg6 ;
-(id)printBrailleForText:(id)arg1 contracted:(bool)arg2 eightDot:(bool)arg3 locations:(id*)arg4 ;
-(id)textForPrintBraille:(id)arg1 primaryTable:(bool)arg2 contracted:(bool)arg3 eightDot:(bool)arg4 locations:(id*)arg5 ;
-(bool)auxiliaryTableSupportsContractedBraille;
-(bool)auxiliaryTableSupportsEightDotBraille;
@end

