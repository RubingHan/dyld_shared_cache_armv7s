/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:03:16 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/VoiceMemos.framework/VoiceMemos
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <VoiceMemos/VoiceMemos-Structs.h>
#import <UIKit/UIViewController.h>
#import <GLKit/GLKViewDelegate.h>
#import <VoiceMemos/RCWaveformGeneratorSegmentOutputObserver.h>

@protocol RCWaveformDataSource, RCGLWaveformRendererDelegate;
@class EAGLContext, CADisplayLink, CALayer, RCUIConfiguration;

@interface RCGLWaveformRenderer : UIViewController <GLKViewDelegate, RCWaveformGeneratorSegmentOutputObserver> {

	EAGLContext* _eaglContext;
	CADisplayLink* _displayLink;
	unsigned _vertexBuffers[2];
	SCD_Struct_RC0 _renderedTimeRange;
	bool _renderedTimeRangeIsApproximatedWaveform;
	vector<float, std::__1::allocator<float> >* _waveformVertexData;
	unsigned long long _renderedWaveformVertices;
	unsigned _shaderProgram;
	int _projectionUniform;
	int _modelviewUniform;
	int _foregroundColorUniform;
	bool _buffersInitialized;
	bool _shadersInitialized;
	bool _preparedForRendering;
	bool _creatingSnapshot;
	bool _centerKeylineRendered;
	CGRect _lastViewportRect;
	double _cachedContentWidth;
	bool _contentWidthDirty;
	CALayer* _modelviewLayer;
	bool _isAnimatingModelview;
	bool _paused;
	<RCWaveformDataSource>* _dataSource;
	<RCGLWaveformRendererDelegate>* _rendererDelegate;
	double _spacingWidth;
	double _dataPointWidth;
	unsigned long long _renderingHint;
	RCUIConfiguration* _UIConfiguration;
	SCD_Struct_RC0 _visibleTimeRange;

}

@property (assign,nonatomic,__weak) <RCWaveformDataSource> * dataSource;                            //@synthesize dataSource=_dataSource - In the implementation block
@property (assign,nonatomic,__weak) <RCGLWaveformRendererDelegate> * rendererDelegate;              //@synthesize rendererDelegate=_rendererDelegate - In the implementation block
@property (assign,getter=isPaused,nonatomic) bool paused;                                           //@synthesize paused=_paused - In the implementation block
@property (assign,nonatomic) double spacingWidth;                                                   //@synthesize spacingWidth=_spacingWidth - In the implementation block
@property (assign,nonatomic) double dataPointWidth;                                                 //@synthesize dataPointWidth=_dataPointWidth - In the implementation block
@property (assign,nonatomic) SCD_Struct_RC0 visibleTimeRange;                                       //@synthesize visibleTimeRange=_visibleTimeRange - In the implementation block
@property (assign,nonatomic) unsigned long long renderingHint;                                      //@synthesize renderingHint=_renderingHint - In the implementation block
@property (nonatomic,copy) RCUIConfiguration * UIConfiguration;                                     //@synthesize UIConfiguration=_UIConfiguration - In the implementation block
+(id)waveformImageForRecording:(id)arg1 withImageSize:(CGSize)arg2 ;
-(bool)isPaused;
-(void)_willResignActiveNotification:(id)arg1 ;
-(void)_didBecomeActiveNotification:(id)arg1 ;
-(void)_setupNotifications;
-(void)_teardownNotifications;
-(void)dealloc;
-(void)setDataSource:(id)arg1 ;
-(void)reloadData;
-(id)dataSource;
-(void)animationDidStop:(id)arg1 finished:(bool)arg2 ;
-(id)initWithNibName:(id)arg1 bundle:(id)arg2 ;
-(void)loadView;
-(CGRect)visibleRect;
-(void)viewDidLoad;
-(void)willMoveToParentViewController:(id)arg1 ;
-(void)viewDidAppear:(bool)arg1 ;
-(void)viewWillDisappear:(bool)arg1 ;
-(void)setPaused:(bool)arg1 ;
-(id).cxx_construct;
-(double)contentWidth;
-(unsigned long long)renderingHint;
-(void)setRenderingHint:(unsigned long long)arg1 ;
-(void).cxx_destruct;
-(void)_setupShaders;
-(void)_stopUpdating;
-(void)_startUpdating;
-(void)setUIConfiguration:(id)arg1 ;
-(SCD_Struct_RC0)visibleTimeRange;
-(void)waveformGeneratorDidFinishLoading:(id)arg1 error:(id)arg2 ;
-(void)waveformGenerator:(id)arg1 didLoadWaveformSegment:(id)arg2 ;
-(id)UIConfiguration;
-(void)setVisibleTimeRange:(SCD_Struct_RC0)arg1 ;
-(void)_stopRendering;
-(void)prepareForRendering;
-(void)_startRendering;
-(void)_clearRenderingState;
-(float)_pixelsPerSecond;
-(bool)_currentViewportRequiresRenderingNewSegments;
-(void)_renderVisibleTimeRange;
-(void)_performOrDispatchToMainThread:(/*^block*/ id)arg1 ;
-(void)setVisibleTimeRange:(SCD_Struct_RC0)arg1 withAnimationDuration:(double)arg2 ;
-(float)_pixelOffsetForTime:(double)arg1 ;
-(void)_setNeedsRendering;
-(void)_updateForegroundColor;
-(void)_setupGL;
-(void)_setupBuffers;
-(void)_updateProjection;
-(double)_nonCachedContentWidth;
-(double)horizontalOffsetAtTime:(double)arg1 withVisibleTimeRange:(SCD_Struct_RC0)arg2 ;
-(float)_pixelsPerSecondWithVisibleTimeRange:(SCD_Struct_RC0)arg1 ;
-(double)timeAtHorizontalOffset:(double)arg1 withVisibleTimeRange:(SCD_Struct_RC0)arg2 ;
-(double)_timeForPixelOffset:(float)arg1 withVisibleTimeRange:(SCD_Struct_RC0)arg2 ;
-(double)horizontalOffsetAtTime:(double)arg1 ;
-(void)_draw:(id)arg1 ;
-(void)_renderSegments:(id)arg1 isApproximatedWaveform:(bool)arg2 ;
-(id)rendererDelegate;
-(id)_pathForShader:(id)arg1 ;
-(unsigned)_compileShaderOfType:(unsigned)arg1 pathToSource:(id)arg2 ;
-(void)_renderCenterKeylineIfNeeded;
-(void)_updateModelview;
-(void)_updateClearColor;
-(void)_logCompilationErrorForShader:(unsigned)arg1 ;
-(void)glkView:(id)arg1 drawInRect:(CGRect)arg2 ;
-(double)pointsPerSecondWithVisibleTimeRange:(SCD_Struct_RC0)arg1 ;
-(double)timeAtHorizontalOffset:(double)arg1 ;
-(id)rasterizeVisibleTimeRangeWithImageSize:(CGSize)arg1 ;
-(void)glkViewRenderingContextValidityDidChange:(id)arg1 ;
-(double)_timeForPixelOffset:(float)arg1 ;
-(void)setRendererDelegate:(id)arg1 ;
-(double)spacingWidth;
-(void)setSpacingWidth:(double)arg1 ;
-(double)dataPointWidth;
-(void)setDataPointWidth:(double)arg1 ;
@end

