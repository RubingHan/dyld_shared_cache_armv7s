/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:03:17 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/VoiceMemos.framework/VoiceMemos
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <VoiceMemos/VoiceMemos-Structs.h>
#import <VoiceMemos/RCCaptureAudioFileOutputRecordingDelegate.h>
#import <MediaPlayer/MPAVRoutingControllerDelegate.h>

@class AVCaptureConnection, RCCaptureAudioFileOutput, MPAVRoutingController, NSString, RCSavedRecording, NSMutableArray, RCAudioInputWaveformDataSource, NSDate;

@interface RCAudioInputDevice : NSObject <RCCaptureAudioFileOutputRecordingDelegate, MPAVRoutingControllerDelegate> {

	AVCaptureConnection* _captureConnection;
	RCCaptureAudioFileOutput* _captureAudioOutput;
	MPAVRoutingController* _routingController;
	NSString* _pickedRouteName;
	RCSavedRecording* _activeRecording;
	bool _activeRecordingShouldBeDeleted;
	int _activeRecordingLockFileFD;
	unsigned long long _backgroundTaskIdentifier;
	NSMutableArray* _prepareFinishedCompletionBlocks;
	long long _prepareToRecordState;
	bool _audioInputAvailable;
	bool _lastRecordingDidStop;
	bool _recordingSampleBuffers;
	bool _handlingRecordingDidFinishCapturing;
	bool _isInterrupted;
	/*^block*/ id _sampleBufferHandlerBlock;
	RCAudioInputWaveformDataSource* _activeWaveformDataSource;
	NSDate* _recordingStartDate;

}

@property (nonatomic,copy) id sampleBufferHandlerBlock;                                                //@synthesize sampleBufferHandlerBlock=_sampleBufferHandlerBlock - In the implementation block
@property (nonatomic,readonly) RCAudioInputWaveformDataSource * activeWaveformDataSource;              //@synthesize activeWaveformDataSource=_activeWaveformDataSource - In the implementation block
@property (nonatomic,readonly) RCSavedRecording * activeRecording;                                     //@synthesize activeRecording=_activeRecording - In the implementation block
@property (nonatomic,readonly) bool audioInputAvailable;                                               //@synthesize audioInputAvailable=_audioInputAvailable - In the implementation block
@property (nonatomic,readonly) bool isRecording; 
@property (nonatomic,readonly) bool isPaused; 
@property (nonatomic,readonly) bool isInterrupted;                                                     //@synthesize isInterrupted=_isInterrupted - In the implementation block
@property (nonatomic,readonly) bool isIdle; 
@property (nonatomic,retain) NSDate * recordingStartDate;                                              //@synthesize recordingStartDate=_recordingStartDate - In the implementation block
@property (nonatomic,readonly) double elapsedRecordingTime; 
@property (nonatomic,readonly) bool shouldSuspend; 
+(id)sharedInputDevice;
-(bool)isInterrupted;
-(bool)isRecording;
-(void)pauseRecording;
-(void)resumeRecording;
-(bool)isPaused;
-(void)routingControllerAvailableRoutesDidChange:(id)arg1 ;
-(bool)isIdle;
-(void)dealloc;
-(id)init;
-(id)_init;
-(void).cxx_destruct;
-(void)_applicationWillTerminate:(id)arg1 ;
-(void)captureOutput:(id)arg1 didPauseRecordingToOutputFileAtURL:(id)arg2 ;
-(void)captureOutput:(id)arg1 didResumeRecordingToOutputFileAtURL:(id)arg2 ;
-(void)endRecording;
-(void)captureOutput:(id)arg1 didFinishRecordingToOutputFileAtURL:(id)arg2 error:(id)arg3 ;
-(void)captureOutput:(id)arg1 didStartRecordingToOutputFileAtURL:(id)arg2 ;
-(void)captureOutput:(id)arg1 didOutputSampleBuffer:(opaqueCMSampleBufferRef)arg2 ;
-(void)captureOutput:(id)arg1 captureSessionDidTerminateWithError:(id)arg2 ;
-(id)activeWaveformDataSource;
-(id)activeRecording;
-(void)beginRecordingWithCustomRecordingLabel:(id)arg1 prepareFinishedCompletionBlock:(/*^block*/ id)arg2 ;
-(void)deleteActiveRecording;
-(void)setSampleBufferHandlerBlock:(/*^block*/ id)arg1 ;
-(bool)audioInputAvailable;
-(void)_availableModesDidChange:(id)arg1 ;
-(bool)isPreparing;
-(bool)_openCaptureSessionAndWaitUntilRunning;
-(void)_beginRecordingWithIntermediateRecordingURL:(id)arg1 creationDate:(id)arg2 ;
-(void)_setPostPrepareRequestedState:(long long)arg1 ;
-(void)_handleRecordingCaptureSessionDidError:(id)arg1 ;
-(/*^block*/ id)sampleBufferHandlerBlock;
-(void)_setDisableSBMediaHUD:(bool)arg1 ;
-(void)_handleRecordingDidFinalizeWritingOutputToURL:(id)arg1 ;
-(void)_closeCaptureSession;
-(void)_updateAudioInputAvailable;
-(void)_onMainQueueHandleRecordingDidFinishCapturingAfterCompletionSound;
-(bool)_attachInputToCaptureSession:(id)arg1 ;
-(double)elapsedRecordingTime;
-(bool)shouldSuspend;
-(id)recordingStartDate;
-(void)setRecordingStartDate:(id)arg1 ;
@end

