/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:02:18 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/PowerlogCoreLoggers.framework/PowerlogCoreLoggers
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PowerlogCoreLoggers/PowerlogCoreLoggers-Structs.h>
#import <PowerlogLoggerSupport/PLLogger.h>

@class NSDictionary;

@interface PLWiFiLogger : PLLogger {

	WiFiManagerClientRef wifiManager;
	WiFiDeviceClientRef wifiDevice;
	timeval lastTimeSinceEpoch;
	timeval nowTimeSinceEpoch;
	NSDictionary* last_WiFi_ret;
	unsigned lastWoWTimestamp;

}

@property (assign,nonatomic) WiFiManagerClientRef wifiManager; 
@property (assign,nonatomic) WiFiDeviceClientRef wifiDevice; 
-(void)dealloc;
-(id)init;
-(void)log;
-(WiFiManagerClientRef)wifiManager;
-(void)setWifiManager:(WiFiManagerClientRef)arg1 ;
-(void)handleWake:(id)arg1 ;
-(id)loggerFunctionCall:(short)arg1 withParameters:(id)arg2 ;
-(void)disableWiFiManagerLogging:(id)arg1 ;
-(bool)hasWiFi;
-(WiFiDeviceClientRef)wifiDevice;
-(bool)isWowSupported;
-(void)logNotification:(int)arg1 ;
-(void)setWifiDevice:(WiFiDeviceClientRef)arg1 ;
-(id)wifiStatus;
-(bool)isWiFiPowered;
-(id)ssidName;
-(id)channelNumber;
-(bool)isWowEnabled;
-(void)addEnhancedLoggingToEntry:(id)arg1 withWifiProperties:(id)arg2 ;
-(void)addBasicLoggingToEntry:(id)arg1 withWifiProperties:(id)arg2 ;
-(void)logWifiDebugWithWifiProperties:(id)arg1 ;
-(id)decodeWakeReason:(id)arg1 ;
-(void)addEnhancedWakeLoggingToEntry:(id)arg1 withData:(id)arg2 withReason:(id)arg3 ;
-(id)decodeEthertype:(unsigned short)arg1 ;
-(id)generateWiFiModuleEntry;
-(void)logWiFiModule;
-(long long)compareMilliseconds:(unsigned long long)arg1 to:(unsigned long long)arg2 withThreshold:(unsigned long long)arg3 ;
-(id)decodeWifiEventLinkReason:(unsigned)arg1 ;
-(void)findWiFiDevice;
-(bool)isWiFiManagerLoggingEnabled;
-(void)enableWiFiManagerLogging;
-(void)scheduleDisableWiFiManagerLogging;
-(bool)isWiFiWakeup:(id)arg1 ;
-(bool)didWakeTooOften;
-(void)logWifiWakeWithTime:(unsigned)arg1 withData:(id)arg2 withReason:(id)arg3 ;
-(void)logDataPacket:(id)arg1 ;
-(id)decodeWifiEventStatus:(unsigned)arg1 ;
-(void)logWiFiAvailableReason:(int)arg1 withSubReason:(int)arg2 ;
-(void)logWiFiRSSI:(float)arg1 withRawvalue:(int)arg2 ;
@end

