/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:02:24 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/Radio.framework/Radio
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Radio/RadioRequest.h>

@class SSURLConnectionRequest, RadioStation, NSData, RadioPlayEventCollection, RadioPlaybackContext;

@interface RadioGetTracksRequest : RadioRequest {

	unsigned long long _globalVersion;
	bool _includeCleanTracksOnly;
	unsigned long long _numberOfTracks;
	SSURLConnectionRequest* _request;
	RadioStation* _station;
	bool _shouldIncludeAsset;
	NSData* _heartbeatTokenData;
	RadioPlayEventCollection* _playEventCollection;
	RadioPlaybackContext* _playbackContext;
	long long _reasonType;

}

@property (assign,nonatomic) unsigned long long numberOfTracks;                         //@synthesize numberOfTracks=_numberOfTracks - In the implementation block
@property (nonatomic,copy) NSData * heartbeatTokenData;                                 //@synthesize heartbeatTokenData=_heartbeatTokenData - In the implementation block
@property (assign,nonatomic) bool includeCleanTracksOnly;                               //@synthesize includeCleanTracksOnly=_includeCleanTracksOnly - In the implementation block
@property (nonatomic,copy) RadioPlayEventCollection * playEventCollection;              //@synthesize playEventCollection=_playEventCollection - In the implementation block
@property (nonatomic,copy) RadioPlaybackContext * playbackContext;                      //@synthesize playbackContext=_playbackContext - In the implementation block
@property (assign,nonatomic) long long reasonType;                                      //@synthesize reasonType=_reasonType - In the implementation block
@property (assign,nonatomic) bool shouldIncludeAsset;                                   //@synthesize shouldIncludeAsset=_shouldIncludeAsset - In the implementation block
-(id)initWithStation:(id)arg1 globalVersion:(unsigned long long)arg2 ;
-(id)playbackContext;
-(long long)reasonType;
-(void)setPlaybackContext:(id)arg1 ;
-(void)setReasonType:(long long)arg1 ;
-(void)setShouldIncludeAsset:(bool)arg1 ;
-(unsigned long long)numberOfTracks;
-(void)setNumberOfTracks:(unsigned long long)arg1 ;
-(void)setHeartbeatTokenData:(id)arg1 ;
-(void)setIncludeCleanTracksOnly:(bool)arg1 ;
-(void)startWithCompletionHandler:(/*^block*/ id)arg1 ;
-(void)setPlayEventCollection:(id)arg1 ;
-(id)init;
-(void)cancel;
-(void).cxx_destruct;
-(bool)includeCleanTracksOnly;
-(id)heartbeatTokenData;
-(id)playEventCollection;
-(bool)shouldIncludeAsset;
@end

