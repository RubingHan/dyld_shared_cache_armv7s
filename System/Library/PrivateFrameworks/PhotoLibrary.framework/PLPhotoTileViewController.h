/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:02:05 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PhotoLibrary/PhotoLibrary-Structs.h>
#import <UIKit/UIViewController.h>
#import <UIKit/UIScrollViewDelegate.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <PhotoLibrary/PLCommentsViewControllerDelegate.h>

@protocol PLPhotoTileViewControllerDelegate, OS_dispatch_source;
@class UIImage, PLManagedAsset, PLImageScrollView, PLExpandableImageView, PLVideoView, UIImageView, PLPhotoTileBadgeView, PLPhotoTilePlaceholderView, PLCommentsViewController, UIGestureRecognizer, NSObject, PLTileContainerView;

@interface PLPhotoTileViewController : UIViewController <UIScrollViewDelegate, UIGestureRecognizerDelegate, PLCommentsViewControllerDelegate> {

	UIImage* _image;
	UIImage* _pendingImage;
	UIImage* _unscaledImage;
	PLManagedAsset* _modelPhoto;
	PLImageScrollView* _scrollView;
	PLExpandableImageView* _imageView;
	PLVideoView* _videoView;
	UIImageView* _gradientView;
	PLPhotoTileBadgeView* _badgeView;
	UIImageView* _reviewCheckmarkImageView;
	PLPhotoTilePlaceholderView* _placeholderView;
	PLCommentsViewController* _commentsViewController;
	UIGestureRecognizer* _singleTapGestureRecognizer;
	UIGestureRecognizer* _doubleTapGestureRecognizer;
	<PLPhotoTileViewControllerDelegate>* _tileDelegate;
	int _imageOrientation;
	CGSize _imageSize;
	CGRect _tileFrame;
	bool _zoomToFillInsteadOfToFit;
	bool _useLessThanMinZoomForZoomedOutTest;
	bool _allowZoomToFill;
	id _orientationDelegate;
	float _cropRectZoomScale;
	CGRect _cropOverlayRect;
	CGRect _cropRect;
	double _doubleTapZoomScale;
	double _minZoomScale;
	double _zoomToFillScale;
	int _mode;
	long long _lastDisplayedOrientation;
	bool _clientIsTemporarilyWallpaper;
	bool _userDidAdjustWallpaper;
	float _wallpaperPortraitZoomScale;
	float _wallpaperLandscapeZoomScale;
	float _zoomScaleBeforeZooming;
	CGRect _cropRectBeforeDragging;
	bool _force1XCroppedImage;
	bool _forceNativeScreenScale;
	bool _centerContentVertically;
	/*^block*/ id _didEndZoomingBlock;
	NSObject<OS_dispatch_source>* _dispatchTimer;
	double _dispatchStartTime;
	double _dispatchTimeElapsed;
	bool _hasNotedZoom;
	unsigned _imageIsThumbnail : 1;
	unsigned _isTVOut : 1;
	unsigned _zooming : 1;
	unsigned _autoZooming : 1;
	unsigned _zoomGesturesEnabled : 1;
	unsigned _userDidZoom : 1;
	unsigned _ignoreZoomChange : 1;
	unsigned _tileParentIsPageController : 1;
	unsigned _lockedUnderCropOverlay : 1;
	unsigned _viewDidAppear : 1;
	unsigned _viewWillAppear : 1;
	unsigned _didRequestFullSizeImage : 1;
	unsigned _useZoomScaleForCropRect : 1;
	unsigned _photoShouldBeHDRBadged : 1;
	unsigned _HDRBadgeShouldBeHidden : 1;
	unsigned _avalancheBadgeShouldBeHidden : 1;
	unsigned _photoShouldBeAvalancheBadged : 1;
	unsigned _badgeShouldBeVisible : 1;
	unsigned _didSetHDRForModelPhoto : 1;
	unsigned _commentsTableVisible : 1;
	PLTileContainerView* _containerView;
	bool _reviewing;
	bool _picked;
	UIEdgeInsets _overlayInsets;

}

@property (nonatomic,readonly) PLManagedAsset * photo; 
@property (nonatomic,retain) UIImage * thumbnailImage; 
@property (assign,nonatomic) CGRect tileFrame; 
@property (nonatomic,retain) UIImage * unscaledImage;                                          //@synthesize unscaledImage=_unscaledImage - In the implementation block
@property (assign,nonatomic) bool centerContentVertically;                                     //@synthesize centerContentVertically=_centerContentVertically - In the implementation block
@property (assign,nonatomic) UIEdgeInsets overlayInsets;                                       //@synthesize overlayInsets=_overlayInsets - In the implementation block
@property (assign,nonatomic) bool forceNativeScreenScale;                                      //@synthesize forceNativeScreenScale=_forceNativeScreenScale - In the implementation block
@property (assign,nonatomic) bool force1XCroppedImage;                                         //@synthesize force1XCroppedImage=_force1XCroppedImage - In the implementation block
@property (nonatomic,readonly) PLCommentsViewController * commentsViewController;              //@synthesize commentsViewController=_commentsViewController - In the implementation block
@property (nonatomic,readonly) bool commentsTableIsVisible; 
@property (assign,nonatomic) bool reviewing;                                                   //@synthesize reviewing=_reviewing - In the implementation block
@property (assign,nonatomic) bool picked;                                                      //@synthesize picked=_picked - In the implementation block
+(CGSize)tileSize;
+(CGSize)tvOutTileSize;
+(id)newPhotoTileViewControllerWithFrame:(CGRect)arg1 imageRef:(CGImageRef)arg2 imageOrientation:(long long)arg3 allowZoomToFill:(bool)arg4 mode:(int)arg5 ;
+(id)newPhotoTileViewControllerWithFrame:(CGRect)arg1 image:(id)arg2 allowZoomToFill:(bool)arg3 mode:(int)arg4 ;
+(id)newPhotoTileViewControllerWithFrame:(CGRect)arg1 modelPhoto:(id)arg2 mode:(int)arg3 ;
+(bool)shouldShowPlaceholderForAsset:(id)arg1 ;
-(long long)_imageOrientation;
-(id)_newOriginalImageForPickerFromCachedData;
-(id)videoView;
-(void)setVideoView:(id)arg1 ;
-(void)setPicked:(bool)arg1 ;
-(void)dealloc;
-(id)init;
-(id)description;
-(void)scrollViewDidZoom:(id)arg1 ;
-(void)scrollViewWillBeginDragging:(id)arg1 ;
-(void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(bool)arg2 ;
-(void)scrollViewDidEndDecelerating:(id)arg1 ;
-(id)viewForZoomingInScrollView:(id)arg1 ;
-(void)scrollViewWillBeginZooming:(id)arg1 withView:(id)arg2 ;
-(void)scrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(double)arg3 ;
-(bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2 ;
-(void)applicationDidBecomeActive:(id)arg1 ;
-(void)applicationWillResignActive:(id)arg1 ;
-(int)imageOrientation;
-(id)image;
-(bool)gesturesEnabled;
-(void)setGesturesEnabled:(bool)arg1 ;
-(void)viewDidLayoutSubviews;
-(CGSize)scrollView:(id)arg1 contentSizeForZoomScale:(double)arg2 withProposedSize:(CGSize)arg3 ;
-(void)setZoomScale:(float)arg1 ;
-(void)loadView;
-(bool)shouldAutorotateToInterfaceOrientation:(long long)arg1 ;
-(void)viewWillAppear:(bool)arg1 ;
-(void)viewDidAppear:(bool)arg1 ;
-(void)viewDidDisappear:(bool)arg1 ;
-(void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2 ;
-(void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2 ;
-(void)didRotateFromInterfaceOrientation:(long long)arg1 ;
-(id)imageView;
-(id)scrollView;
-(bool)allowsEditing;
-(id)thumbnailImage;
-(id)initWithPhoto:(id)arg1 thumbnailImage:(id)arg2 size:(CGSize)arg3 ;
-(void)setTVOut:(bool)arg1 ;
-(void)setTileDelegate:(id)arg1 ;
-(void)setOrientationDelegate:(id)arg1 ;
-(void)setAvalancheBadgesHidden:(bool)arg1 ;
-(void)hideContentView;
-(void)showContentView;
-(void)updateAfterZoomTransitionWithImage:(id)arg1 ;
-(id)photo;
-(bool)photoShouldHaveHDRBadge;
-(void)refreshTileWithFullScreenImage:(id)arg1 ;
-(void)forceZoomingGesturesEnabled;
-(void)setZoomingGesturesEnabled:(bool)arg1 ;
-(bool)commentsTableIsVisible;
-(void)updateAfterCollapse;
-(void)ensureFullSizeImageLoaded;
-(void)resetZoom;
-(void)installVideoOverlay:(id)arg1 ;
-(void)setFullSizeImage:(id)arg1 ;
-(bool)isTVOut;
-(double)zoomToFitScale;
-(double)defaultZoomScale;
-(void)zoomToScale:(double)arg1 completionBlock:(/*^block*/ id)arg2 ;
-(bool)hasFullSizeImage;
-(id)newCGImageBackedUIImage;
-(void)setBadgeVisible:(bool)arg1 animated:(bool)arg2 ;
-(void)setForceNativeScreenScale:(bool)arg1 ;
-(void)setForce1XCroppedImage:(bool)arg1 ;
-(void)setCropOverlayRect:(CGRect)arg1 forCropRect:(CGRect)arg2 ;
-(void)setOverlayInsets:(UIEdgeInsets)arg1 ;
-(void)noteParentViewControllerDidDisappear;
-(id)unscaledImage;
-(void)_viewWillMoveToSuperView:(id)arg1 ;
-(void)_updateContentInset;
-(void)_centerImageInScrollView;
-(void)_handleSingleTap:(id)arg1 ;
-(void)_handleDoubleTap:(id)arg1 ;
-(void)_setPhoto:(id)arg1 ;
-(void)setTileFrame:(CGRect)arg1 ;
-(void)_setImage:(id)arg1 isThumbnail:(bool)arg2 preserveFrame:(bool)arg3 ;
-(void)_configureViews;
-(id)initWithPhoto:(id)arg1 image:(id)arg2 frame:(CGRect)arg3 isThumbnail:(bool)arg4 imageOrientation:(int)arg5 allowZoomToFill:(bool)arg6 mode:(int)arg7 ;
-(void)_teardownDispatchTimer;
-(void)_showBadgeViewIfAppropriate;
-(void)_repositionBadgeView;
-(bool)photoShouldHaveAvalancheBadge;
-(void)_installSubview:(id)arg1 ;
-(void)_updatePlaceholderViewAnimated:(bool)arg1 ;
-(bool)_clientIsWallpaper;
-(UIEdgeInsets)overlayInsets;
-(void)_setupBadgeView;
-(void)_updateReviewCheckmark;
-(void)_updateModelPhotoWithImage:(id)arg1 ;
-(void)updateZoomScales;
-(void)_setDefaultZoomScale;
-(void)_updateAggdKeys;
-(bool)tileIsOnScreen;
-(void)initializeCommentsTable;
-(void)_performDidEndZoomBlock;
-(void)_requestFullSizeImage;
-(double)minRotatedScale;
-(float)_calculateZoomScale:(bool)arg1 inView:(id)arg2 ;
-(void)_resetZoomCommon;
-(bool)force1XCroppedImage;
-(bool)forceNativeScreenScale;
-(id)newImageWithCropRect:(CGRect)arg1 minimalCropDimension:(double)arg2 croppedImageData:(id*)arg3 fullScreenImageData:(id*)arg4 fullScreenImage:(CGImage*)arg5 imageCropRect:(CGRect*)arg6 intersectCropWithFullRect:(bool)arg7 ;
-(void)_setDidEndZoomingBlock:(/*^block*/ id)arg1 ;
-(double)zoomToFillScale;
-(double)minZoomScale;
-(void)_adjustScrollViewContentOffsetForInsets;
-(bool)isZoomedOut;
-(void)_adjustZoomForEnteringMode:(bool)arg1 ;
-(void)setReviewing:(bool)arg1 animated:(bool)arg2 ;
-(void)_setupReviewCheckmark;
-(void)commentsControllerInactiveAreaWasTapped:(id)arg1 ;
-(void)commentsControllerWillEnterEditMode:(id)arg1 ;
-(void)commentsControllerDidExitEditMode:(id)arg1 ;
-(void)commentsControllerDidDisplayUnreadComment:(id)arg1 ;
-(void)commentsControllerWillBeginScrolling:(id)arg1 ;
-(id)initForPageController;
-(void)setThumbnailImage:(id)arg1 ;
-(CGRect)tileFrame;
-(id)expandableImageView;
-(id)tileDelegate;
-(bool)userDidAdjustWallpaper;
-(void)setClientIsWallpaper:(bool)arg1 ;
-(void)setHDRBadgesHidden:(bool)arg1 ;
-(bool)didRequestFullSizeImage;
-(id)dictionaryWithCroppedImageForRect:(CGRect)arg1 minimalCropDimension:(double)arg2 withOptions:(int)arg3 ;
-(double)currentToDefaultZoomRatio;
-(void)setAllowsZoomToFill:(bool)arg1 ;
-(void)setLockedUnderCropOverlay:(bool)arg1 ;
-(void)setReviewing:(bool)arg1 ;
-(bool)centerContentVertically;
-(void)setCenterContentVertically:(bool)arg1 ;
-(void)setUnscaledImage:(id)arg1 ;
-(bool)reviewing;
-(bool)picked;
-(id)commentsView;
-(id)commentsViewController;
-(void)setBadgeVisible:(bool)arg1 ;
-(double)currentToMinZoomRatio;
-(void)setCommentsTableVisibility:(bool)arg1 duration:(double)arg2 ;
-(void)updateForVisibleOverlays:(bool)arg1 ;
@end

