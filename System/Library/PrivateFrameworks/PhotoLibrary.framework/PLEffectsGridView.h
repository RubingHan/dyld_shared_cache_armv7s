/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:02:06 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PhotoLibrary/PhotoLibrary-Structs.h>
#import <PhotoLibrary/PLGLView.h>

@class NSDictionary;

@interface PLEffectsGridView : PLGLView {

	OpaqueVTPixelTransferSessionRef _pixelTransferSession;
	CVPixelBufferPoolRef _pixelBufferPool;
	CGSize _pixelBufferPoolSize;
	bool _square;
	bool __fetchingGridFilters;
	bool __atomicBlackAndWhite;
	NSDictionary* __gridFilters;

}

@property (getter=isSquare) bool square;                                                                          //@synthesize square=_square - In the implementation block
@property (getter=isBlackAndWhite) bool blackAndWhite; 
@property (setter=_setGridFilters:,retain) NSDictionary * _gridFilters;                                           //@synthesize _gridFilters=__gridFilters - In the implementation block
@property (setter=_setFetchingGridFilters:) bool _fetchingGridFilters;                                            //@synthesize _fetchingGridFilters=__fetchingGridFilters - In the implementation block
@property (setter=_setAtomicBlackAndWhite:,getter=_isAtomicBlackAndWhite) bool _atomicBlackAndWhite;              //@synthesize _atomicBlackAndWhite=__atomicBlackAndWhite - In the implementation block
-(void)dealloc;
-(void)setSquare:(bool)arg1 ;
-(unsigned long long)filterIndexForPoint:(CGPoint)arg1 ;
-(bool)_isAtomicBlackAndWhite;
-(void)_setAtomicBlackAndWhite:(bool)arg1 ;
-(void)_setGridFilters:(id)arg1 ;
-(void)_setupGridFiltersIfNecessary;
-(id)_gridFilters;
-(unsigned long long)_cellsPerRow;
-(CVBufferRef)_createPixelBufferForSize:(CGSize)arg1 ;
-(void)_scalePixelBuffer:(CVBufferRef)arg1 outputBuffer:(CVBufferRef)arg2 ;
-(void)_renderGridFilters:(id)arg1 withInputImage:(id)arg2 ciContext:(id)arg3 mirrorRendering:(bool)arg4 ;
-(unsigned long long)_cellCount;
-(unsigned long long)_filterIndexForGridIndex:(unsigned long long)arg1 ;
-(CGRect)rectForFilterIndex:(unsigned long long)arg1 ;
-(bool)isSquare;
-(CGRect)_squareCropFromRect:(CGRect)arg1 ;
-(void)_updatePixelBufferPoolForSize:(CGSize)arg1 ;
-(bool)_fetchingGridFilters;
-(void)_setFetchingGridFilters:(bool)arg1 ;
-(bool)isBlackAndWhite;
-(unsigned long long)_gridIndexForFilterIndex:(unsigned long long)arg1 ;
-(void)setBlackAndWhite:(bool)arg1 ;
-(void)renderPixelBuffer:(CVBufferRef)arg1 ciContext:(id)arg2 mirrorRendering:(bool)arg3 ;
-(id)filterIndices;
@end

