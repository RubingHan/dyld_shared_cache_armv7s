/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:02:04 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PhotoLibrary/PhotoLibrary-Structs.h>
#import <PassKit/AVCaptureMetadataOutputObjectsDelegate.h>
#import <PhotoLibrary/PLCameraEffectsRendererDelegate.h>
#import <Celestial/SBSAccelerometerDelegate.h>
#import <PhotoLibrary/AVCaptureFileOutputRecordingDelegate.h>
#import <CoreRecognition/AVCaptureVideoDataOutputSampleBufferDelegate.h>

@protocol OS_dispatch_queue, PLCameraControllerDelegate, OS_dispatch_source;
@class AVCaptureSession, AVCaptureDevice, AVCaptureDeviceInput, AVCaptureStillImageOutput, AVCaptureMovieFileOutput, AVCaptureVideoDataOutput, AVCaptureMetadataOutput, AVCaptureDeviceFormat, NSObject, AVCaptureOutput, AVCaptureVideoPreviewLayer, NSString, SBSAccelerometer, NSTimer, PLCameraEffectsRenderer, NSArray, NSDictionary, NSMutableArray;

@interface PLCameraController : NSObject <AVCaptureMetadataOutputObjectsDelegate, PLCameraEffectsRendererDelegate, SBSAccelerometerDelegate, AVCaptureFileOutputRecordingDelegate, AVCaptureVideoDataOutputSampleBufferDelegate> {

	AVCaptureSession* _avCaptureSession;
	AVCaptureDevice* _avCaptureDeviceFront;
	AVCaptureDevice* _avCaptureDeviceBack;
	AVCaptureDevice* _avCaptureDeviceAudio;
	AVCaptureDeviceInput* _avCaptureInputFront;
	AVCaptureDeviceInput* _avCaptureInputBack;
	AVCaptureDeviceInput* _avCaptureInputAudio;
	AVCaptureStillImageOutput* _avCaptureOutputPhoto;
	AVCaptureMovieFileOutput* _avCaptureOutputVideo;
	AVCaptureVideoDataOutput* _avCaptureOutputPanorama;
	AVCaptureVideoDataOutput* _avCaptureOutputEffectPreview;
	AVCaptureMetadataOutput* _avCaptureOutputMetadata;
	AVCaptureDeviceFormat* _mogulFormatBack;
	AVCaptureDeviceFormat* _mogulFormatFront;
	OpaqueFigSampleBufferProcessorRef _panoramaProcessor;
	CAImageQueueRef _panoramaImageQueue;
	CGSize _panoramaPreviewSize;
	float _panoramaPreviewScale;
	NSObject<OS_dispatch_queue>* _avCaptureSessionDispatchQueue;
	NSObject<OS_dispatch_queue>* _avCaptureOutputMetadataQueue;
	AVCaptureDevice* _currentDevice;
	AVCaptureDeviceInput* _currentInput;
	AVCaptureOutput* _currentOutput;
	AVCaptureVideoPreviewLayer* _previewLayer;
	CGRect _cleanAperture;
	bool _shouldBeStopped;
	long long _cameraMode;
	long long _cameraDevice;
	long long _flashMode;
	int _captureOrientation;
	bool _imageWriterQueueIsAvailable;
	unsigned long long _ioSurfaceCounter;
	bool _hdrCaptureIncludesEV0Image;
	int _hdrEV0PhotoCaptureCount;
	<PLCameraControllerDelegate>* _delegate;
	double _maximumCaptureDuration;
	int _videoCaptureQuality;
	NSString* _videoCapturePath;
	SBSAccelerometer* _accelerometer;
	CGImageRef _lastVideoPreviewFrameImageRef;
	bool _lockFocusLock;
	bool _lockFocusAfterFocusFinishes;
	bool _isFocusingOnFace;
	long long _cameraOrientation;
	NSTimer* _idleTimerTimer;
	bool _delaySuspend;
	NSTimer* _delaySuspendTimer;
	double _maxVideoZoomFactorRear;
	double _maxVideoZoomFactorFront;
	struct {
		unsigned supportsVideo : 1;
		unsigned supportsFocus : 1;
		unsigned supportsExposure : 1;
		unsigned supportsHDRRear : 1;
		unsigned supportsHDRFront : 1;
		unsigned supportsSuggestedHDRRear : 1;
		unsigned supportsSuggestedHDRFront : 1;
		unsigned supportsAvalancheRear : 1;
		unsigned supportsAvalancheFront : 1;
		unsigned supportsMogulRear : 1;
		unsigned supportsMogulFront : 1;
		unsigned supportsLiveEffects : 1;
		unsigned supportsPanorama : 1;
		unsigned supportsVideoStillCapture : 1;
		unsigned supportsPreviewDuringHDR : 1;
		unsigned hasFlash : 1;
		unsigned hasBackCamera : 1;
		unsigned hasFrontCamera : 1;
		unsigned deferStartVideoCapture : 1;
		unsigned inCall : 1;
		unsigned isCapturingPanorama : 1;
		unsigned isProcessingPanorama : 1;
		unsigned focusDisabled : 1;
		unsigned focusWasModified : 1;
		unsigned serverDied : 1;
		unsigned didGetDeviceUnavailableInBackground : 1;
		unsigned didSetLocationData : 1;
		unsigned isChangingMode : 1;
		unsigned flashWillFireAutomatically : 1;
		unsigned torchWillFireAutomatically : 1;
		unsigned isCameraApp : 1;
		unsigned didSendPreviewStartedCallbackToEmptyDelegate : 1;
		unsigned didGetPreviewStartedCallbackAfterResume : 1;
		unsigned logFocusInfo : 1;
		unsigned logPreviewInfo : 1;
		unsigned logCaptureInfo : 1;
		unsigned logFlashInfo : 1;
		unsigned logDebugInfo : 1;
		unsigned logPanoInfo : 1;
		unsigned enable720p60Recording : 1;
		unsigned pptTestDisableAutofocus : 1;
		unsigned isInternalInstall : 1;
		unsigned shouldTearDownPano : 1;
		unsigned convertSampleBufferToJPEG : 1;
		unsigned delegateDidStartSession : 1;
		unsigned delegateWillStartPreview : 1;
		unsigned delegatePreviewDidStart : 1;
		unsigned delegateSessionDidStart : 1;
		unsigned delegateDidStopSession : 1;
		unsigned delegateWillStopSession : 1;
		unsigned delegateSessionDidStop : 1;
		unsigned delegateSessionWasInterrupted : 1;
		unsigned delegateSessionInterruptionEnded : 1;
		unsigned delegateServerDied : 1;
		unsigned delegateCleanApertureDidChange : 1;
		unsigned delegateModeWillChange : 1;
		unsigned delegateModeDidChange : 1;
		unsigned delegateWillTakePhoto : 1;
		unsigned delegateDidTakePhoto : 1;
		unsigned delegateCapturedPhoto : 1;
		unsigned delegateDidChangeCaptureAbility : 1;
		unsigned delegateDidChangePanoramaConfiguration : 1;
		unsigned delegateDidUpdatePanoramaPreview : 1;
		unsigned delegateDidReceivePanoramaIssue : 1;
		unsigned delegateDidStartPanoramaCapture : 1;
		unsigned delegateWillStopPanoramaCapture : 1;
		unsigned delegatePanoramaWillStartProcessing : 1;
		unsigned delegatePanoramaDidStopProcessing : 1;
		unsigned delegateCapturedPanorama : 1;
		unsigned delegateVideoCaptureDidStart : 1;
		unsigned delegateDidStopVideoCapture : 1;
		unsigned delegateVideoCaptureDidStop : 1;
		unsigned delegateWillStartAutofocus : 1;
		unsigned delegateFocusDidStart : 1;
		unsigned delegateFocusDidEnd : 1;
		unsigned delegateFaceMetadataDidChange : 1;
		unsigned delegateVideoZoomFactorDidChange : 1;
		unsigned delegateFlashWillFireChanged : 1;
		unsigned delegateTorchActiveChanged : 1;
		unsigned delegateTorchAvailabilityChanged : 1;
		unsigned delegateHDRSuggestionChanged : 1;
	}  _cameraFlags;
	NSObject<OS_dispatch_queue>* _dispatchTimerQueue;
	NSObject<OS_dispatch_source>* _dispatchTimer;
	bool __previewPaused;
	bool __previewLayerEnabledForRenderer;
	bool __videoDataOutputEnabledForRenderer;
	bool _HDRDetectionEnabled;
	bool _performingTimedCapture;
	bool _disableAllPreviewSuspensionDuringCapture;
	bool __atomicEffectsAvailable;
	bool __configuringCamera;
	bool __atomicModeChangeWaitingForPreviewStarted;
	bool __atomicModeChangeWaitingForConfigureSession;
	bool __wasStillImageStabilzationOnBeforeTimedCapture;
	/*^block*/ id postSessionSetupBlock;
	PLCameraEffectsRenderer* _effectsRenderer;
	NSArray* _supportedCameraModes;
	NSObject<OS_dispatch_queue>* __effectFilterIndexQueue;
	NSDictionary* __effectFilterIndices;
	NSObject<OS_dispatch_queue>* __captureIsolationQueue;
	NSObject<OS_dispatch_queue>* __effectRenderingQueue;
	NSMutableArray* __currentFaceMetadata;

}

@property (nonatomic,readonly) AVCaptureSession * currentSession;                                                                                                                      //@synthesize avCaptureSession=_avCaptureSession - In the implementation block
@property (nonatomic,readonly) AVCaptureStillImageOutput * imageOutput;                                                                                                                //@synthesize avCaptureOutputPhoto=_avCaptureOutputPhoto - In the implementation block
@property (assign,nonatomic) AVCaptureDevice * currentDevice;                                                                                                                          //@synthesize currentDevice=_currentDevice - In the implementation block
@property (assign,nonatomic) AVCaptureDeviceInput * currentInput;                                                                                                                      //@synthesize currentInput=_currentInput - In the implementation block
@property (assign,nonatomic) AVCaptureOutput * currentOutput;                                                                                                                          //@synthesize currentOutput=_currentOutput - In the implementation block
@property (nonatomic,readonly) AVCaptureVideoPreviewLayer * previewLayer;                                                                                                              //@synthesize previewLayer=_previewLayer - In the implementation block
@property (assign,nonatomic) int previewOrientation; 
@property (nonatomic,readonly) float panoramaPreviewScale;                                                                                                                             //@synthesize panoramaPreviewScale=_panoramaPreviewScale - In the implementation block
@property (nonatomic,readonly) CGSize panoramaPreviewSize;                                                                                                                             //@synthesize panoramaPreviewSize=_panoramaPreviewSize - In the implementation block
@property (assign,nonatomic) int captureOrientation;                                                                                                                                   //@synthesize captureOrientation=_captureOrientation - In the implementation block
@property (assign,nonatomic) long long cameraMode; 
@property (assign,nonatomic) long long flashMode; 
@property (assign,nonatomic) long long cameraDevice; 
@property (assign,nonatomic) bool convertSampleBufferToJPEG; 
@property (assign,nonatomic) bool isCameraApp; 
@property (nonatomic,readonly) bool supportsHDR; 
@property (nonatomic,readonly) bool supportsHDRSuggestion; 
@property (assign,getter=isHDRDetectionEnabled,nonatomic) bool HDRDetectionEnabled;                                                                                                    //@synthesize HDRDetectionEnabled=_HDRDetectionEnabled - In the implementation block
@property (getter=isHDRSuggested,nonatomic,readonly) bool HDRSuggested; 
@property (nonatomic,readonly) CGRect cleanAperture;                                                                                                                                   //@synthesize cleanAperture=_cleanAperture - In the implementation block
@property (nonatomic,copy) id postSessionSetupBlock; 
@property (nonatomic,readonly) long long cameraOrientation; 
@property (retain) PLCameraEffectsRenderer * effectsRenderer;                                                                                                                          //@synthesize effectsRenderer=_effectsRenderer - In the implementation block
@property (nonatomic,readonly) NSArray * activeFilters; 
@property (nonatomic,copy) NSArray * supportedCameraModes;                                                                                                                             //@synthesize supportedCameraModes=_supportedCameraModes - In the implementation block
@property (assign,nonatomic) double videoZoomFactor; 
@property (assign,nonatomic) bool performingTimedCapture;                                                                                                                              //@synthesize performingTimedCapture=_performingTimedCapture - In the implementation block
@property (assign,nonatomic) bool disableAllPreviewSuspensionDuringCapture;                                                                                                            //@synthesize disableAllPreviewSuspensionDuringCapture=_disableAllPreviewSuspensionDuringCapture - In the implementation block
@property (assign,setter=_setEffectsAvailable:,nonatomic) bool _effectsAvailable; 
@property (setter=_setAtomicEffectsAvailable:) bool _atomicEffectsAvailable;                                                                                                           //@synthesize _atomicEffectsAvailable=__atomicEffectsAvailable - In the implementation block
@property (readonly) NSObject<OS_dispatch_queue> * _effectFilterIndexQueue;                                                                                                            //@synthesize _effectFilterIndexQueue=__effectFilterIndexQueue - In the implementation block
@property (setter=_setEffectFilterIndices:,nonatomic,retain) NSDictionary * _effectFilterIndices;                                                                                      //@synthesize _effectFilterIndices=__effectFilterIndices - In the implementation block
@property (setter=_setConfiguringCamera:,getter=_isConfiguringCamera) bool _configuringCamera;                                                                                         //@synthesize _configuringCamera=__configuringCamera - In the implementation block
@property (readonly) NSObject<OS_dispatch_queue> * _captureIsolationQueue;                                                                                                             //@synthesize _captureIsolationQueue=__captureIsolationQueue - In the implementation block
@property (readonly) NSObject<OS_dispatch_queue> * _effectRenderingQueue;                                                                                                              //@synthesize _effectRenderingQueue=__effectRenderingQueue - In the implementation block
@property (assign,setter=_setModeChangeWaitingForPreviewStarted:,getter=_isModeChangeWaitingForPreviewStarted,nonatomic) bool _modeChangeWaitingForPreviewStarted; 
@property (setter=_setAtomicModeChangeWaitingForPreviewStarted:,getter=_isAtomicModeChangeWaitingForPreviewStarted) bool _atomicModeChangeWaitingForPreviewStarted;                    //@synthesize _atomicModeChangeWaitingForPreviewStarted=__atomicModeChangeWaitingForPreviewStarted - In the implementation block
@property (assign,setter=_setModeChangeWaitingForConfigureSession:,getter=_isModeChangeWaitingForConfigureSession,nonatomic) bool _modeChangeWaitingForConfigureSession; 
@property (setter=_setAtomicModeChangeWaitingForConfigureSession:,getter=_isAtomicModeChangeWaitingForConfigureSession) bool _atomicModeChangeWaitingForConfigureSession;              //@synthesize _atomicModeChangeWaitingForConfigureSession=__atomicModeChangeWaitingForConfigureSession - In the implementation block
@property (nonatomic,readonly) bool _wasStillImageStabilzationOnBeforeTimedCapture;                                                                                                    //@synthesize _wasStillImageStabilzationOnBeforeTimedCapture=__wasStillImageStabilzationOnBeforeTimedCapture - In the implementation block
@property (nonatomic,readonly) NSMutableArray * _currentFaceMetadata;                                                                                                                  //@synthesize _currentFaceMetadata=__currentFaceMetadata - In the implementation block
@property (assign,setter=_setPreviewPaused:,getter=_isPreviewPaused,nonatomic) bool _previewPaused;                                                                                    //@synthesize _previewPaused=__previewPaused - In the implementation block
@property (assign,setter=_setPreviewLayerEnabledForRenderer:,nonatomic) bool _previewLayerEnabledForRenderer;                                                                          //@synthesize _previewLayerEnabledForRenderer=__previewLayerEnabledForRenderer - In the implementation block
@property (assign,setter=_setVideoDataOutputEnabledForRenderer:,nonatomic) bool _videoDataOutputEnabledForRenderer;                                                                    //@synthesize _videoDataOutputEnabledForRenderer=__videoDataOutputEnabledForRenderer - In the implementation block
+(id)sharedInstance;
-(void)captureOutput:(id)arg1 didOutputSampleBuffer:(opaqueCMSampleBufferRef)arg2 fromConnection:(id)arg3 ;
-(CGRect)faceRectangle;
-(bool)hasFlash;
-(long long)flashMode;
-(void)setFlashMode:(long long)arg1 ;
-(bool)isTorchActive;
-(double)videoZoomFactor;
-(void)setVideoZoomFactor:(double)arg1 ;
-(void)rampToVideoZoomFactor:(double)arg1 withRate:(float)arg2 ;
-(void)cancelVideoZoomRamp;
-(void)captureOutput:(id)arg1 didFinishRecordingToOutputFileAtURL:(id)arg2 fromConnections:(id)arg3 error:(id)arg4 ;
-(void)captureOutput:(id)arg1 didStartRecordingToOutputFileAtURL:(id)arg2 fromConnections:(id)arg3 ;
-(void)captureOutput:(id)arg1 didDropSampleBuffer:(opaqueCMSampleBufferRef)arg2 fromConnection:(id)arg3 ;
-(void)captureOutput:(id)arg1 didOutputMetadataObjects:(id)arg2 fromConnection:(id)arg3 ;
-(bool)isReady;
-(void)_applicationSuspended:(id)arg1 ;
-(void)_serverDied:(id)arg1 ;
-(void)dealloc;
-(id)currentDevice;
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(id)delegate;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)accelerometer:(id)arg1 didAccelerateWithTimeStamp:(double)arg2 x:(float)arg3 y:(float)arg4 z:(float)arg5 eventType:(int)arg6 ;
-(void)startVideoCapture;
-(void)stopVideoCapture;
-(long long)cameraDevice;
-(void)setCameraDevice:(long long)arg1 ;
-(void)_applicationDidEnterBackground:(id)arg1 ;
-(void)_applicationWillEnterForeground:(id)arg1 ;
-(void)_applicationDidBecomeActive:(id)arg1 ;
-(void)startPreview;
-(void)pausePreview;
-(void)stopPreview;
-(double)mogulFrameRate;
-(void)_synchronizeHDRSettings;
-(void)_callStateDidChange:(id)arg1 ;
-(void)_updateCallStatus;
-(void)_updateSupportedCameraModes;
-(void)postOrientationChangedNotification:(long long)arg1 force:(bool)arg2 ;
-(void)_setPreviewLayerEnabledForRenderer:(bool)arg1 ;
-(void)_setVideoDataOutputEnabledForRenderer:(bool)arg1 ;
-(void)_debug_teardownDispatchTimer;
-(void)_destroyCamera;
-(void)_setLocationEnabled:(bool)arg1 ;
-(void)setPostSessionSetupBlock:(/*^block*/ id)arg1 ;
-(void)_teardownDelaySuspendTimer;
-(void)_inCallStatusChanged:(bool)arg1 ;
-(bool)_isVideoMode:(long long)arg1 ;
-(void)_setCameraMode:(long long)arg1 cameraDevice:(long long)arg2 ;
-(void)_imageWriterQueueAvailabilityChanged;
-(void)_updateEffectsRendererMirroring;
-(bool)_safeSetCameraMode:(long long)arg1 cameraDevice:(long long)arg2 ;
-(id)currentOutput;
-(void)_setConfiguringCamera:(bool)arg1 ;
-(id)_videoModeSessionPreset;
-(bool)canCapturePhotoDuringRecording;
-(bool)supportsAvalancheForDevice:(long long)arg1 ;
-(void)_setEffectsAvailable:(bool)arg1 ;
-(void)_setupPanoramaForDevice:(id)arg1 output:(id)arg2 options:(out const _CFDictionary*)arg3 ;
-(id)_currentVideoConnection;
-(void)_cleanupPanoramaOnSessionQueue:(bool)arg1 ;
-(void)_setFaceDetectionEnabled:(bool)arg1 forCaptureDevice:(id)arg2 captureOutput:(id)arg3 ;
-(void)setCurrentOutput:(id)arg1 ;
-(void)setCurrentInput:(id)arg1 ;
-(void)_updateEffectsVideoDataOutputEnabled;
-(void)_updatePreviewLayerEnabled;
-(void)_setModeChangeWaitingForPreviewStarted:(bool)arg1 ;
-(void)_setModeChangeWaitingForConfigureSession:(bool)arg1 ;
-(bool)_configureSessionWithCameraMode:(long long)arg1 cameraDevice:(long long)arg2 HDRDetectionEnabled:(bool)arg3 ;
-(void)_updateEffectsRendererFilterIndexForceStateChange:(bool)arg1 renderNotifyBlock:(/*^block*/ id)arg2 ;
-(id)effectsRenderer;
-(void)setCameraMode:(long long)arg1 ;
-(void)enqueueBlockInCaptureSessionQueue:(/*^block*/ id)arg1 ;
-(void)_notifyControllerModeDidChange;
-(bool)_isModeChangeWaitingForPreviewStarted;
-(bool)_isModeChangeWaitingForConfigureSession;
-(void)enqueueBlockOnMainQueue:(/*^block*/ id)arg1 ;
-(bool)_isAtomicModeChangeWaitingForPreviewStarted;
-(void)_setAtomicModeChangeWaitingForPreviewStarted:(bool)arg1 ;
-(bool)_isAtomicModeChangeWaitingForConfigureSession;
-(void)_setAtomicModeChangeWaitingForConfigureSession:(bool)arg1 ;
-(long long)cameraMode;
-(void)_jankyPreviewStartedWorkaround;
-(void)_previewStarted;
-(id)_debug_dispatchTimerQueue;
-(void)_debug_checkIris;
-(void)_debug_waitForIrisToOpen;
-(id)_mogulFormatFromDevice:(id)arg1 ;
-(bool)supportsLiveEffects;
-(void)_setEffectsRenderer:(id)arg1 ;
-(void)_deviceStarted:(id)arg1 ;
-(void)_sessionStarted:(id)arg1 ;
-(void)_sessionStopped:(id)arg1 ;
-(void)_sessionRuntimeErrored:(id)arg1 ;
-(void)_wasInterrupted:(id)arg1 ;
-(void)_interruptionEnded:(id)arg1 ;
-(void)_movieFileRecordingCompleted:(id)arg1 ;
-(void)_inputPortFormatDescriptionDidChange:(id)arg1 ;
-(void)_focusHasChanged:(id)arg1 ;
-(/*^block*/ id)postSessionSetupBlock;
-(void)_setDelaySuspend:(bool)arg1 ;
-(void)_forceDelaySuspendTimeout;
-(void)_debug_cancelWaitForIris;
-(void)executeBlockOnMainQueue:(/*^block*/ id)arg1 ;
-(void)_tearDownCamera;
-(void)setEffectFilterIndices:(id)arg1 forceStateChange:(bool)arg2 ;
-(bool)_setupCamera;
-(id)previewLayer;
-(void)_startPreview:(/*^block*/ id)arg1 ;
-(id)currentInput;
-(void)_setOrientationEventsEnabled:(bool)arg1 ;
-(bool)_modeUsesCompassHeading;
-(void)_delayIdleTimerByTimeInterval:(double)arg1 ;
-(void)_setFlashMode:(long long)arg1 force:(bool)arg2 ;
-(bool)isCapturingPanorama;
-(void)stopPanoramaCapture;
-(void)_resetIdleTimer;
-(bool)isCapturingVideo;
-(void)_recoverFromServerError;
-(int)captureOrientation;
-(void)_processCapturedPhotoWithDictionary:(id)arg1 error:(id)arg2 HDRUsed:(bool)arg3 ;
-(void)performAutofocusAfterCapture;
-(bool)isChangingModes;
-(bool)capturePhotoUsingHDR:(bool)arg1 ;
-(bool)_sanityCheckSessionCanCaptureWithOutput:(id)arg1 ;
-(bool)supportsHDRForDevice:(long long)arg1 mode:(long long)arg2 ;
-(bool)performingTimedCapture;
-(bool)isFocusing;
-(bool)isExposing;
-(void)_setOrientation;
-(bool)supportsPreviewDuringHDR;
-(void)_setOrientationForConnection:(id)arg1 ;
-(id)activeFilters;
-(id)_captureIsolationQueue;
-(IOSurfaceRef)_newFilteredSurfaceFromSurface:(IOSurfaceRef)arg1 filters:(id)arg2 ;
-(void)_capturedPhotoWithDictionary:(id)arg1 error:(id)arg2 HDRUsed:(bool)arg3 ;
-(void)_removeVideoCaptureFileAndDirectoryAtPath:(id)arg1 ;
-(void)_verifyVideoConsolidationForVideoAtPath:(id)arg1 outUserInfo:(id*)arg2 ;
-(void)setFaceDetectionEnabled:(bool)arg1 ;
-(bool)hasInheritedForegroundState;
-(bool)canCaptureVideo;
-(void)_setVideoCapturePath:(id)arg1 ;
-(id)_videoMetadataArrayIncludingSensitiveProperties:(bool)arg1 ;
-(void)lockFocusForRecording;
-(double)minimumVideoCaptureDuration;
-(bool)canCapturePanorama;
-(void)lockFocusAndExposureForPano;
-(void)_panoramaDidStop;
-(bool)_isConfiguringCamera;
-(void)_processSampleBuffer:(opaqueCMSampleBufferRef)arg1 ;
-(void)_panoramaDidReceiveIssueWithPanoramaString:(CFStringRef)arg1 ;
-(void)_cancelDelayedFocusRequests;
-(bool)_lockCurrentDeviceForConfiguration;
-(void)_unlockCurrentDeviceForConfiguration;
-(void)_autofocus:(bool)arg1 autoExpose:(bool)arg2 ;
-(void)_autofocusAfterCapture;
-(bool)flashWillFire;
-(void)_lockFocus:(bool)arg1 lockExposure:(bool)arg2 lockWhiteBalance:(bool)arg3 ;
-(void)userInitiatedLockFocus;
-(void)_commonFocusFinished;
-(void)_focusOperationFinished;
-(void)_autofocusOperationFinished;
-(void)_lockedFocusOperationFinished;
-(void)_faceMetadataDidChange:(id)arg1 ;
-(void)_runOnMainThreadImmediatelyIfPossibleWithBlock:(/*^block*/ id)arg1 ;
-(void)_focusStarted;
-(void)_focusCompleted;
-(void)_exposureStarted;
-(void)_exposureCompleted;
-(void)_whiteBalanceStarted;
-(void)_whiteBalanceCompleted;
-(void)_flashStateChanged;
-(void)_torchActiveChanged;
-(void)_torchLevelChanged;
-(void)_updateTorchAvailability;
-(void)_faceRectangleChanged;
-(void)_willTakePhoto;
-(void)_didTakePhoto;
-(void)_suggestedHDRChanged;
-(bool)supportsHDR;
-(bool)_supportsHDRSuggestionForCaptureDevice:(id)arg1 ;
-(bool)supportsHDRSuggestion;
-(void)accelerometer:(id)arg1 didChangeDeviceOrientation:(int)arg2 ;
-(double)minimumZoomFactorForDevice:(long long)arg1 ;
-(double)maximumZoomFactorForDevice:(long long)arg1 ;
-(double)_limitZoomFactor:(double)arg1 forDevice:(id)arg2 ;
-(bool)supportsVideoCapture;
-(bool)supportsPanorama;
-(void)_setSupportedCameraModes:(id)arg1 ;
-(unsigned long long)_activeFilterIndex;
-(bool)_effectsAvailable;
-(unsigned long long)effectFilterIndexForMode:(long long)arg1 ;
-(id)_effectFilterIndexQueue;
-(id)_effectFilterIndices;
-(unsigned long long)_sanitizeEffectFilterIndex:(unsigned long long)arg1 forMode:(long long)arg2 ;
-(void)_setEffectFilterIndices:(id)arg1 ;
-(void)_notifyEffectFilterIndexChanged;
-(bool)_atomicEffectsAvailable;
-(void)_setAtomicEffectsAvailable:(bool)arg1 ;
-(void)_setPerformingTimedCapture:(bool)arg1 ;
-(void)lockFocusForTimedCapture;
-(void)_setPreviewPaused:(bool)arg1 ;
-(bool)_isPreviewPaused;
-(bool)_previewLayerEnabledForRenderer;
-(bool)_videoDataOutputEnabledForRenderer;
-(void)cameraEffectsRendererDidStartPreview:(id)arg1 ;
-(void)cameraEffectsRenderer:(id)arg1 requestsPreviewLayerEnabled:(bool)arg2 ;
-(void)cameraEffectsRenderer:(id)arg1 requestsVideoDataOutputEnabled:(bool)arg2 ;
-(void)cameraEffectsRenderer:(id)arg1 willTransitionToShowGrid:(bool)arg2 ;
-(void)cameraEffectsRenderer:(id)arg1 didStartTransitionToShowGrid:(bool)arg2 animated:(bool)arg3 ;
-(void)cameraEffectsRenderer:(id)arg1 didFinishTransitionToShowGrid:(bool)arg2 ;
-(bool)inCall;
-(void)captureIOSurface;
-(void)releaseIOSurface;
-(void)_setDefaultPrewarmDate:(id)arg1 ;
-(bool)hasFrontCamera;
-(bool)hasRearCamera;
-(void)setConvertSampleBufferToJPEG:(bool)arg1 ;
-(bool)convertSampleBufferToJPEG;
-(bool)_didSendPreviewStartedCallbackToEmptyDelegate;
-(void)_startPreviewWithCameraDevice:(long long)arg1 cameraMode:(long long)arg2 effectFilterIndices:(id)arg3 ;
-(void)startPreview:(/*^block*/ id)arg1 ;
-(int)previewOrientation;
-(void)setPreviewOrientation:(int)arg1 ;
-(bool)isPreviewMirrored;
-(void)_clearPreviewLayer;
-(bool)canCapturePhoto;
-(bool)imageWriterQueueIsAvailable;
-(void)capturePhoto;
-(id)videoCapturePath;
-(void)setVideoCaptureQuality:(int)arg1 ;
-(void)setVideoCaptureMaximumDuration:(double)arg1 ;
-(void)setPanoramaImageQueueLayer:(id)arg1 ;
-(void)startPanoramaCapture;
-(void)panoramaProcessorOutputCallbackWithStatus:(int)arg1 buffer:(opaqueCMSampleBufferRef)arg2 ;
-(void)setPanoramaCaptureDirection:(int)arg1 ;
-(void)_panoramaDidReceiveStatusNotificationString:(CFStringRef)arg1 ;
-(void)_panoramaDidReceiveWarningNotificationString:(CFStringRef)arg1 ;
-(void)_panoramaDidReceiveErrorNotificationString:(CFStringRef)arg1 ;
-(void)_panoShouldEnd;
-(bool)isFocusAllowed;
-(bool)canFocusAtPoint;
-(void)focusAtAdjustedPoint:(CGPoint)arg1 ;
-(void)smoothFocusAtCenter;
-(long long)currentFocusMode;
-(void)restartAutoFocus;
-(void)_pptTestSetAutofocusDisabled:(bool)arg1 ;
-(bool)canLockFocus;
-(bool)isFocusLockSupported;
-(bool)isExposureLockSupported;
-(void)setFocusDisabled:(bool)arg1 ;
-(bool)isFocusingOnFace;
-(bool)isTorchOn;
-(bool)isTorchDisabled;
-(bool)supportsHDRSuggestionForDevice:(long long)arg1 ;
-(bool)isHDRSuggested;
-(void)setHDRDetectionEnabled:(bool)arg1 ;
-(long long)cameraOrientation;
-(void)setEffectFilterIndex:(unsigned long long)arg1 forMode:(long long)arg2 ;
-(id)effectFilterIndices;
-(double)currentMinFrameDuration;
-(double)currentMaxFrameDuration;
-(void)startTimedCapture;
-(void)continueTimedCapture;
-(void)finishTimedCapture;
-(id)recentFaceMetadata;
-(void)resumePreview;
-(id)currentSession;
-(void)setCurrentDevice:(id)arg1 ;
-(id)imageOutput;
-(float)panoramaPreviewScale;
-(CGSize)panoramaPreviewSize;
-(CGRect)cleanAperture;
-(void)setCaptureOrientation:(int)arg1 ;
-(bool)isHDRDetectionEnabled;
-(id)supportedCameraModes;
-(bool)disableAllPreviewSuspensionDuringCapture;
-(void)setDisableAllPreviewSuspensionDuringCapture:(bool)arg1 ;
-(id)_effectRenderingQueue;
-(bool)_wasStillImageStabilzationOnBeforeTimedCapture;
-(id)_currentFaceMetadata;
-(bool)isCameraApp;
-(void)setIsCameraApp:(bool)arg1 ;
-(void)autofocus;
@end

