/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:02:42 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <SpringBoardFoundation/SpringBoardFoundation-Structs.h>
#import <UIKit/UIView.h>
#import <UIKit/_UISettingsKeyObserver.h>

@protocol SBFWallpaperViewLegibilityObserver, SBFWallpaperViewInternalObserver;
@class SBFWallpaperSettings, UIImageView, UIView, _UILegibilitySettingsProvider, _UILegibilitySettings, UIColor, NSTimer, SBFWallpaperParallaxSettings, UIImage;

@interface SBFWallpaperView : UIView <_UISettingsKeyObserver> {

	SBFWallpaperSettings* _wallpaperSettings;
	UIImageView* _topGradientView;
	UIImageView* _bottomGradientView;
	UIView* _parallaxView;
	double _contentScaleFactor;
	long long _variant;
	_UILegibilitySettingsProvider* _legibilitySettingsProvider;
	_UILegibilitySettings* _legibilitySettings;
	UIColor* _lastAverageColor;
	NSTimer* _colorSampleTimer;
	bool _shouldGenerateBlurredImagesWhenVisible;
	bool _generatingBlurredImages;
	SBFWallpaperParallaxSettings* _parallaxSettings;
	bool _wantsRasterization;
	long long _disallowRasterizationBlockCount;
	bool _filtersAverageColor;
	bool _continuousColorSamplingEnabled;
	bool _wallpaperAnimationEnabled;
	bool _parallaxEnabled;
	bool _suppressesGradients;
	<SBFWallpaperViewLegibilityObserver>* _legibilityObserver;
	UIView* _contentView;
	double _zoomFactor;
	double _contrast;
	double _parallaxFactor;
	<SBFWallpaperViewInternalObserver>* _internalObserver;
	double _parallaxAxisAdjustmentAngle;

}

@property (nonatomic,readonly) UIImage * wallpaperImage; 
@property (assign,nonatomic) <SBFWallpaperViewLegibilityObserver> * legibilityObserver;              //@synthesize legibilityObserver=_legibilityObserver - In the implementation block
@property (nonatomic,retain) UIView * contentView;                                                   //@synthesize contentView=_contentView - In the implementation block
@property (assign,nonatomic) double zoomFactor;                                                      //@synthesize zoomFactor=_zoomFactor - In the implementation block
@property (assign,nonatomic) long long variant;                                                      //@synthesize variant=_variant - In the implementation block
@property (nonatomic,retain) _UILegibilitySettings * legibilitySettings; 
@property (assign,nonatomic) bool filtersAverageColor;                                               //@synthesize filtersAverageColor=_filtersAverageColor - In the implementation block
@property (assign,nonatomic) double contrast;                                                        //@synthesize contrast=_contrast - In the implementation block
@property (assign,nonatomic) bool continuousColorSamplingEnabled;                                    //@synthesize continuousColorSamplingEnabled=_continuousColorSamplingEnabled - In the implementation block
@property (assign,nonatomic) bool wallpaperAnimationEnabled;                                         //@synthesize wallpaperAnimationEnabled=_wallpaperAnimationEnabled - In the implementation block
@property (assign,nonatomic) bool parallaxEnabled;                                                   //@synthesize parallaxEnabled=_parallaxEnabled - In the implementation block
@property (assign,nonatomic) double parallaxFactor;                                                  //@synthesize parallaxFactor=_parallaxFactor - In the implementation block
@property (assign,nonatomic) <SBFWallpaperViewInternalObserver> * internalObserver;                  //@synthesize internalObserver=_internalObserver - In the implementation block
@property (assign,nonatomic) bool suppressesGradients;                                               //@synthesize suppressesGradients=_suppressesGradients - In the implementation block
@property (assign,nonatomic) double parallaxAxisAdjustmentAngle;                                     //@synthesize parallaxAxisAdjustmentAngle=_parallaxAxisAdjustmentAngle - In the implementation block
+(bool)_allowsParallax;
+(bool)_allowsRasterization;
+(bool)_shouldScaleForParallax;
-(long long)variant;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)dealloc;
-(void)setHidden:(bool)arg1 ;
-(void)didMoveToWindow;
-(void)layoutSubviews;
-(void)invalidate;
-(void)setContrast:(double)arg1 ;
-(id)contentView;
-(void)setContentView:(id)arg1 ;
-(void)setContentsRect:(CGRect)arg1 ;
-(double)contentScaleFactor;
-(void)settings:(id)arg1 changedValueForKey:(id)arg2 ;
-(void)setLegibilitySettings:(id)arg1 ;
-(id)legibilitySettings;
-(double)contrast;
-(bool)_isVisible;
-(CGRect)cropRect;
-(id)wallpaperImage;
-(bool)parallaxEnabled;
-(double)parallaxFactor;
-(bool)supportsCropping;
-(void)updateLegibilitySettingsForAverageColor:(id)arg1 ;
-(id)_computeAverageColor;
-(void)_updateParallaxSettings;
-(void)_updateRasterizationState;
-(void)_updateLegibilitySettingsForAverageColor:(id)arg1 notify:(bool)arg2 ;
-(void)_updateScaleFactor;
-(void)_beginDisallowRasterizationBlock;
-(void)_updateContentViewScale;
-(void)_endDisallowRasterizationBlock;
-(void)setVariant:(long long)arg1 withAnimationFactory:(id)arg2 ;
-(void)_prepareToAnimateGradients;
-(void)_updateGradientAlpha;
-(void)_updateGradientImage;
-(void)_handleVariantChange;
-(void)_cleanupAfterAnimatingGradients;
-(void)_setLegibilitySettings:(id)arg1 notify:(bool)arg2 ;
-(double)contrastInRect:(CGRect)arg1 contrastWithinBoxes:(double*)arg2 contrastBetweenBoxes:(double*)arg3 ;
-(id)_averageColorInContentViewRect:(CGRect)arg1 smudgeRadius:(double)arg2 ;
-(void)_updateGeneratingBlurs;
-(id)_blurReplacementImage;
-(id)_blurredImage;
-(id)_imageForBackdropParameters:(SCD_Struct_SB3)arg1 includeTint:(bool)arg2 ;
-(id)_displayedImage;
-(void)_handleVisibilityChange;
-(void)_applyParallaxSettings;
-(void)_notifyBlursInvalidated;
-(void)_startGeneratingBlurredImages;
-(void)_stopGeneratingBlurredImages;
-(void)_addParallax;
-(void)_removeParallax;
-(void)_notifyGeometryInvalidated;
-(id)averageColorInRect:(CGRect)arg1 withSmudgeRadius:(double)arg2 ;
-(bool)contrastRequiresTreatments;
-(bool)_shouldShowTopGradient;
-(bool)_shouldShowBottomGradient;
-(double)_topGradientAlpha;
-(double)_bottomGradientAlpha;
-(CGRect)_topGradientTestRect;
-(double)gradientOpacityInRect:(CGRect)arg1 contrastWithinBoxesFactor:(double)arg2 allowLuminanceCheck:(bool)arg3 ;
-(CGRect)_bottomGradientTestRect;
-(void)setCropRect:(CGRect)arg1 zoomScale:(double)arg2 ;
-(double)cropZoomScale;
-(void)setZoomFactor:(double)arg1 ;
-(void)setFiltersAverageColor:(bool)arg1 ;
-(double)contrastInRect:(CGRect)arg1 ;
-(void)setParallaxEnabled:(bool)arg1 ;
-(void)setGeneratesBlurredImages:(bool)arg1 ;
-(id)blurredImage;
-(id)imageForBackdropParameters:(SCD_Struct_SB3)arg1 includeTint:(bool)arg2 ;
-(void)setSuppressesGradients:(bool)arg1 ;
-(bool)isDisplayingWallpaper:(id)arg1 ;
-(bool)wantsRasterization;
-(bool)luminanceInRectRequiresTreatments:(CGRect)arg1 ;
-(id)legibilityObserver;
-(void)setLegibilityObserver:(id)arg1 ;
-(double)zoomFactor;
-(bool)filtersAverageColor;
-(bool)continuousColorSamplingEnabled;
-(void)setContinuousColorSamplingEnabled:(bool)arg1 ;
-(bool)wallpaperAnimationEnabled;
-(void)setWallpaperAnimationEnabled:(bool)arg1 ;
-(void)setParallaxFactor:(double)arg1 ;
-(id)internalObserver;
-(void)setInternalObserver:(id)arg1 ;
-(bool)suppressesGradients;
-(double)parallaxAxisAdjustmentAngle;
-(void)setParallaxAxisAdjustmentAngle:(double)arg1 ;
-(void)setVariant:(long long)arg1 ;
@end

