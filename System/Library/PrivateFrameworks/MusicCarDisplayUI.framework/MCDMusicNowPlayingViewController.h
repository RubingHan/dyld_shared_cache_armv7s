/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:01:34 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/PrivateFrameworks/MusicCarDisplayUI.framework/MusicCarDisplayUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIKit/UIViewController.h>
#import <AddressBookUI/AFContextProvider.h>
#import <MusicCarDisplayUI/MCDNowPlayingViewControllerDataSource.h>
#import <MusicCarDisplayUI/MCDNowPlayingViewControllerDelegate.h>

@protocol MCDCarDisplayServiceProvider;
@class MPAVController, MCDNowPlayingViewController, MPMediaQuery, NSString, UIImage, NSURL, MCDButton, UILabel, MCDActionSheetController, NSArray;

@interface MCDMusicNowPlayingViewController : UIViewController <AFContextProvider, MCDNowPlayingViewControllerDataSource, MCDNowPlayingViewControllerDelegate> {

	<MCDCarDisplayServiceProvider>* _serviceProvider;
	MPAVController* _player;
	MCDNowPlayingViewController* _nowPlayingViewController;
	MPMediaQuery* _albumQuery;
	NSString* _nowPlayingTitle;
	NSString* _nowPlayingArtist;
	NSString* _nowPlayingAlbum;
	UIImage* _nowPlayingAlbumArt;
	NSURL* _retrievalURL;
	MCDButton* _wishlistButton;
	UILabel* _rightTitleLabel;
	MCDActionSheetController* _actionSheetController;
	bool _isLive;
	int _viewMode;
	NSArray* _controlPages;
	unsigned long long _currentPageIndex;

}

@property (nonatomic,retain) NSArray * controlPages;                           //@synthesize controlPages=_controlPages - In the implementation block
@property (assign,nonatomic) unsigned long long currentPageIndex;              //@synthesize currentPageIndex=_currentPageIndex - In the implementation block
@property (assign,nonatomic) int viewMode;                                     //@synthesize viewMode=_viewMode - In the implementation block
-(bool)allowContextProvider:(id)arg1 ;
-(id)getCurrentContext;
-(void)_unregisterForNotifications;
-(void)_registerForNotifications;
-(void)_itemChanged:(id)arg1 ;
-(void)dealloc;
-(void)setTitle:(id)arg1 ;
-(id)initWithNibName:(id)arg1 bundle:(id)arg2 ;
-(void)viewDidLoad;
-(void)viewDidAppear:(bool)arg1 ;
-(void)viewWillDisappear:(bool)arg1 ;
-(int)viewMode;
-(void).cxx_destruct;
-(unsigned long long)currentPageIndex;
-(void)setCurrentPageIndex:(unsigned long long)arg1 ;
-(id)initWithQuery:(id)arg1 startingAtIndex:(unsigned long long)arg2 player:(id)arg3 serviceProvider:(id)arg4 ;
-(id)newPresentationNavigationController;
-(id)initWithGeniusMixPlaylist:(id)arg1 player:(id)arg2 serviceProvider:(id)arg3 ;
-(id)initWithPlayer:(id)arg1 serviceProvider:(id)arg2 startPlay:(bool)arg3 ;
-(id)initWithRadioStation:(id)arg1 player:(id)arg2 serviceProvider:(id)arg3 ;
-(void)setViewMode:(int)arg1 ;
-(void)updateTrackInformation;
-(void)_playbackContentsChanged:(id)arg1 ;
-(void)_playerTick:(id)arg1 ;
-(void)_itemStoreIDDidChangeNotification:(id)arg1 ;
-(void)_presentNowPlayingInfo;
-(void)_setPlayerRepeatType:(unsigned long long)arg1 ;
-(void)_updateWishlistString;
-(void)_wishlistPressed:(id)arg1 ;
-(void)_setAlbumArtWithURL:(id)arg1 ;
-(void)_updatePlaymodesForRadio;
-(id)artistTextForNowPlayingController:(id)arg1 ;
-(id)albumTextForNowPlayingController:(id)arg1 ;
-(id)titleForNowPlayingController:(id)arg1 ;
-(id)backgroundArtForNowPlayingController:(id)arg1 ;
-(double)playbackDurationForNowPlayingViewController:(id)arg1 withElapsedTime:(out double*)arg2 ;
-(bool)nowPlayingViewControllerIsPlaying:(id)arg1 ;
-(unsigned long long)shuffleTypeForNowPlayingViewController:(id)arg1 ;
-(id)shuffleStringForNowPlayingViewController:(id)arg1 ;
-(unsigned long long)repeatTypeForNowPlayingViewController:(id)arg1 ;
-(id)repeatStringForNowPlayingViewController:(id)arg1 ;
-(bool)nowPlayingViewController:(id)arg1 shouldDisplayButton:(long long)arg2 withImage:(out id*)arg3 tinted:(out bool*)arg4 ;
-(bool)nowPlayingViewController:(id)arg1 shouldEnableButton:(long long)arg2 ;
-(void)nowPlayingViewController:(id)arg1 didSendAction:(long long)arg2 state:(long long)arg3 ;
-(bool)nowPlayingViewControllerCanShuffle:(id)arg1 ;
-(bool)nowPlayingViewControllerCanRepeat:(id)arg1 ;
-(bool)nowPlayingViewControllerCanCreate:(id)arg1 ;
-(void)nowPlayingViewControllerToggleShuffle:(id)arg1 ;
-(void)nowPlayingViewControllerToggleRepeat:(id)arg1 ;
-(void)nowPlayingViewControllerCreate:(id)arg1 ;
-(id)initWithQueryToShuffle:(id)arg1 player:(id)arg2 serviceProvider:(id)arg3 ;
-(bool)nowPlayingViewControllerShouldUseWishlist:(id)arg1 ;
-(id)controlPages;
-(void)setControlPages:(id)arg1 ;
-(void)_itemIsExplicitDidChangeNotification:(id)arg1 ;
-(void)_itemTitlesDidChangeNotification:(id)arg1 ;
@end

