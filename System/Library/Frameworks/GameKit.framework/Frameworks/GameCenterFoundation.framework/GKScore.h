/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:32 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/GameKit.framework/Frameworks/GameCenterFoundation.framework/GameCenterFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <GameCenterFoundation/GameCenterFoundation-Structs.h>
#import <CoreFoundation/NSCopying.h>
#import <CoreFoundation/NSCoding.h>
#import <CoreFoundation/NSSecureCoding.h>

@class GKScoreInternal, GKGame, NSString, NSDate, GKPlayer;

@interface GKScore : NSObject <NSCopying, NSCoding, NSSecureCoding> {

	bool _shouldSetDefaultLeaderboard;
	GKScoreInternal* _internal;
	GKGame* _game;

}

@property (assign,nonatomic,@dynamic) long long value; 
@property (nonatomic,@dynamic,copy) NSString * formattedValue; 
@property (nonatomic,@dynamic,copy) NSString * leaderboardIdentifier; 
@property (assign,nonatomic,@dynamic) unsigned long long context; 
@property (nonatomic,@dynamic,readonly) NSDate * date; 
@property (nonatomic,@dynamic,retain) NSString * playerID; 
@property (assign,nonatomic,@dynamic) long long rank; 
@property (assign,nonatomic) bool shouldSetDefaultLeaderboard;                            //@synthesize shouldSetDefaultLeaderboard=_shouldSetDefaultLeaderboard - In the implementation block
@property (nonatomic,@dynamic,copy) NSString * category; 
@property (retain) GKScoreInternal * internal;                                            //@synthesize internal=_internal - In the implementation block
@property (nonatomic,@dynamic,retain) NSString * groupLeaderboardIdentifier; 
@property (@dynamic) bool valueSet; 
@property (nonatomic,retain) GKGame * game;                                               //@synthesize game=_game - In the implementation block
@property (nonatomic,readonly) GKPlayer * player; 
+(void)reportScores:(id)arg1 withCompletionHandler:(/*^block*/ id)arg2 ;
+(void)reportScores:(id)arg1 whileScreeningChallenges:(bool)arg2 withEligibleChallenges:(id)arg3 withCompletionHandler:(/*^block*/ id)arg4 ;
+(bool)supportsSecureCoding;
+(bool)instancesRespondToSelector:(SEL)arg1 ;
+(id)instanceMethodSignatureForSelector:(SEL)arg1 ;
-(void)setInternal:(id)arg1 ;
-(id)initWithLeaderboardIdentifier:(id)arg1 forPlayer:(id)arg2 ;
-(bool)shouldSetDefaultLeaderboard;
-(id)initWithCategory:(id)arg1 ;
-(void)reportScoreWithCompletionHandler:(/*^block*/ id)arg1 ;
-(void)setShouldSetDefaultLeaderboard:(bool)arg1 ;
-(id)initWithLeaderboardIdentifier:(id)arg1 ;
-(id)game;
-(void)setGame:(id)arg1 ;
-(id)internal;
-(id)initWithInternalRepresentation:(id)arg1 ;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(bool)respondsToSelector:(SEL)arg1 ;
-(id)init;
-(bool)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(id)methodSignatureForSelector:(SEL)arg1 ;
-(id)copyWithZone:(NSZone)arg1 ;
-(id)forwardingTargetForSelector:(SEL)arg1 ;
-(id)valueForUndefinedKey:(id)arg1 ;
-(void)setValue:(id)arg1 forUndefinedKey:(id)arg2 ;
-(id)player;
@end

