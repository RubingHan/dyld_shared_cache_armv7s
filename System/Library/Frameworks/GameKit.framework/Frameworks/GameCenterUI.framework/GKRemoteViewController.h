/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:36 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/GameKit.framework/Frameworks/GameCenterUI.framework/GameCenterUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIKit/_UIRemoteViewController.h>
#import <GameCenterUI/GKServiceViewControllerDelegate.h>

@class GKGame, GKHostedViewController, NSMutableDictionary, UIColor;

@interface GKRemoteViewController : _UIRemoteViewController <GKServiceViewControllerDelegate> {

	bool _didSetRemoteGame;
	bool _viewDidAppear;
	GKHostedViewController* _managingViewControllerWeak;
	GKGame* _game;
	NSMutableDictionary* _dirtyProperties;
	UIColor* _previousStatusBarColor;
	/*^block*/ id _blockToPerformAfterViewDidAppear;

}

@property (assign,nonatomic) bool didSetRemoteGame;                                        //@synthesize didSetRemoteGame=_didSetRemoteGame - In the implementation block
@property (assign,nonatomic) bool viewDidAppear;                                           //@synthesize viewDidAppear=_viewDidAppear - In the implementation block
@property (nonatomic,readonly) bool serviceNeedsCurrentGame; 
@property (nonatomic,readonly) bool serviceNeedsLocalPlayer; 
@property (nonatomic,retain) NSMutableDictionary * dirtyProperties;                        //@synthesize dirtyProperties=_dirtyProperties - In the implementation block
@property (assign,nonatomic) GKHostedViewController * managingViewController;              //@synthesize managingViewControllerWeak=_managingViewControllerWeak - In the implementation block
@property (nonatomic,retain) UIColor * previousStatusBarColor;                             //@synthesize previousStatusBarColor=_previousStatusBarColor - In the implementation block
@property (nonatomic,copy) id blockToPerformAfterViewDidAppear;                            //@synthesize blockToPerformAfterViewDidAppear=_blockToPerformAfterViewDidAppear - In the implementation block
@property (nonatomic,retain) GKGame * game;                                                //@synthesize game=_game - In the implementation block
+(id)serviceViewControllerInterface;
+(id)exportedInterface;
+(bool)shouldPropagateAppearanceCustomizations;
-(id)dirtyProperties;
-(void)setDirtyProperties:(id)arg1 ;
-(id)game;
-(void)setGame:(id)arg1 ;
-(id)managingViewController;
-(void)setupRemoteView;
-(void)remoteViewControllerIsCanceling;
-(void)remoteViewControllerIsFinishing;
-(bool)_dismissSelfAfterGettingShouldFinish;
-(id)observedKeyPaths;
-(void)setManagingViewController:(id)arg1 ;
-(bool)didSetRemoteGame;
-(bool)serviceNeedsCurrentGame;
-(bool)serviceNeedsLocalPlayer;
-(void)populateInitialStateForRemoteView:(id)arg1 ;
-(long long)_desiredStatusBarStyle;
-(void)setViewDidAppear:(bool)arg1 ;
-(void)_performBlockAfterViewDidAppearIfNeeded;
-(/*^block*/ id)blockToPerformAfterViewDidAppear;
-(void)setBlockToPerformAfterViewDidAppear:(/*^block*/ id)arg1 ;
-(bool)viewDidAppear;
-(void)_performSelectorAfterAppearingOrTimeOut:(SEL)arg1 ;
-(bool)_dismissSelfAfterGettingShouldCancel;
-(void)readyToPresentInController:(id)arg1 ;
-(void)setDidSetRemoteGame:(bool)arg1 ;
-(id)previousStatusBarColor;
-(void)setPreviousStatusBarColor:(id)arg1 ;
-(void)dealloc;
-(unsigned long long)supportedInterfaceOrientations;
-(void)setValue:(id)arg1 forKeyPath:(id)arg2 ;
-(bool)shouldAutorotateToInterfaceOrientation:(long long)arg1 ;
-(void)viewWillAppear:(bool)arg1 ;
-(void)viewDidAppear:(bool)arg1 ;
-(void)viewWillDisappear:(bool)arg1 ;
-(void)viewDidDisappear:(bool)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)viewServiceDidTerminateWithError:(id)arg1 ;
@end

