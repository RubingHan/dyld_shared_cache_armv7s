/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:37 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/GameKit.framework/Frameworks/GameCenterUI.framework/GameCenterUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIKit/UINavigationController.h>
#import <GameCenterUI/GKMatchDelegate.h>

@protocol GKMatchmakerViewControllerDelegate;
@class GKMatchRequest, GKHostedMatchmakerViewController, GKRemoteMatchmakerViewController, GKInvite, GKMatch, NSMutableArray, NSString;

@interface GKMatchmakerViewController : UINavigationController <GKMatchDelegate> {

	bool _hosted;
	<GKMatchmakerViewControllerDelegate>* _matchmakerDelegateWeak;
	GKMatchRequest* _matchRequest;
	GKHostedMatchmakerViewController* _hostedViewController;
	GKRemoteMatchmakerViewController* _remoteViewController;
	GKInvite* _acceptedInvite;
	GKMatch* _match;
	NSMutableArray* _hostedPlayerIDs;

}

@property (assign,nonatomic) <GKMatchmakerViewControllerDelegate> * matchmakerDelegate;              //@synthesize matchmakerDelegateWeak=_matchmakerDelegateWeak - In the implementation block
@property (nonatomic,retain) GKMatchRequest * matchRequest;                                          //@synthesize matchRequest=_matchRequest - In the implementation block
@property (assign,getter=isHosted,nonatomic) bool hosted;                                            //@synthesize hosted=_hosted - In the implementation block
@property (nonatomic,copy) NSString * defaultInvitationMessage; 
@property (nonatomic,retain) GKHostedMatchmakerViewController * hostedViewController;                //@synthesize hostedViewController=_hostedViewController - In the implementation block
@property (nonatomic,retain) GKRemoteMatchmakerViewController * remoteViewController;                //@synthesize remoteViewController=_remoteViewController - In the implementation block
@property (nonatomic,retain) GKInvite * acceptedInvite;                                              //@synthesize acceptedInvite=_acceptedInvite - In the implementation block
@property (nonatomic,retain) GKMatch * match;                                                        //@synthesize match=_match - In the implementation block
@property (nonatomic,retain) NSMutableArray * hostedPlayerIDs;                                       //@synthesize hostedPlayerIDs=_hostedPlayerIDs - In the implementation block
+(bool)_preventsAppearanceProxyCustomization;
-(id)match;
-(void)setMatch:(id)arg1 ;
-(void)localPlayerAcceptedGameInvite:(id)arg1 ;
-(void)playersToInvite:(id)arg1 ;
-(id)matchRequest;
-(id)initWithMatchRequest:(id)arg1 ;
-(id)defaultInvitationMessage;
-(void)setDefaultInvitationMessage:(id)arg1 ;
-(bool)isHosted;
-(void)finishWithError:(id)arg1 ;
-(void)setHosted:(bool)arg1 ;
-(id)acceptedInvite;
-(void)setAcceptedInvite:(id)arg1 ;
-(void)_setupChildViewController;
-(void)authenticationChanged:(id)arg1 ;
-(id)hostedViewController;
-(void)setHostedViewController:(id)arg1 ;
-(void)setMatchRequest:(id)arg1 ;
-(void)setBrowsingForNearbyPlayers:(bool)arg1 ;
-(void)setupNotifications;
-(void)inviterCancelledNotification:(id)arg1 ;
-(void)createMatchForAcceptedInvite;
-(void)setHostedPlayer:(id)arg1 connected:(bool)arg2 ;
-(id)matchmakerDelegate;
-(void)finishWithMatch;
-(void)finishWithPlayers;
-(void)invitedPlayer:(id)arg1 responded:(long long)arg2 ;
-(void)cancelInviteToPlayer:(id)arg1 ;
-(void)setMatchmakerDelegate:(id)arg1 ;
-(void)match:(id)arg1 didReceiveData:(id)arg2 fromPlayer:(id)arg3 ;
-(void)match:(id)arg1 player:(id)arg2 didChangeState:(long long)arg3 ;
-(void)match:(id)arg1 didFailWithError:(id)arg2 ;
-(id)initWithInvite:(id)arg1 ;
-(void)addPlayersToMatch:(id)arg1 ;
-(void)setHostedPlayerReady:(id)arg1 ;
-(void)startMatchingWithRequest:(id)arg1 ;
-(void)match:(id)arg1 connectionWithPlayerFailed:(id)arg2 withError:(id)arg3 ;
-(id)hostedPlayerIDs;
-(void)setHostedPlayerIDs:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(void)applicationWillEnterForeground:(id)arg1 ;
-(unsigned long long)supportedInterfaceOrientations;
-(bool)shouldAutorotateToInterfaceOrientation:(long long)arg1 ;
-(void)viewWillAppear:(bool)arg1 ;
-(void)viewDidLoad;
-(void)viewWillDisappear:(bool)arg1 ;
-(void)cancel;
-(void)setRemoteViewController:(id)arg1 ;
-(id)remoteViewController;
-(void)sendData:(id)arg1 ;
@end

