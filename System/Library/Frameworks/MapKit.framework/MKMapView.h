/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:39 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/MapKit.framework/MapKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <MapKit/MapKit-Structs.h>
#import <UIKit/UIView.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <MapKit/MKVariableDelayTapRecognizerDelegate.h>
#import <MapKit/MKAnnotationContainerViewDelegate.h>
#import <MapKit/VKMapViewDelegate.h>
#import <MapKit/MKMapGestureControllerDelegate.h>
#import <MapKit/MKAnnotationMarkerContainer.h>
#import <MapKit/MKAnnotationManagerDelegate.h>
#import <GeoServices/GEOResourceManifestTileGroupObserver.h>
#import <CoreFoundation/NSCoding.h>
#import <MapKit/VKPuckAnimatorDelegate.h>
#import <MapKit/MKOverlayContainerViewDelegate.h>

@protocol MKMapViewDelegateMKMapViewDelegatePrivate;
@class MKMapViewInternal, UIView, MKMapAnnotationManager, MKAnnotationContainerView, MKAttributionLabel, UIImageView, NSTimer, UILabel, _MKEnvironmentLabel, UILongPressGestureRecognizer, UITapGestureRecognizer, UIGestureRecognizer, MKMapGestureController, MKOverlayContainerView, MKBasicMapView, VKMapView, MKScaleView, MKCompassView, MKUserLocation, VKPuckAnimator, MKMapCamera, UITextView, UIPanGestureRecognizer, NSArray, CLLocation, MKAnnotationView;

@interface MKMapView : UIView <UIGestureRecognizerDelegate, MKVariableDelayTapRecognizerDelegate, MKAnnotationContainerViewDelegate, VKMapViewDelegate, MKMapGestureControllerDelegate, MKAnnotationMarkerContainer, MKAnnotationManagerDelegate, GEOResourceManifestTileGroupObserver, NSCoding, VKPuckAnimatorDelegate, MKOverlayContainerViewDelegate> {

	MKMapViewInternal* _internal;
	UIView* _contentView;
	MKMapAnnotationManager* _annotationManager;
	MKAnnotationContainerView* _annotationContainer;
	MKAttributionLabel* _attributionLabel;
	/*^block*/ id _annotationRectTest;
	/*^block*/ id _annotationCoordinateTest;
	UIImageView* _attributionBadgeView;
	NSTimer* _startEffectsTimer;
	<MKMapViewDelegate><MKMapViewDelegatePrivate>* _safeDelegate;
	<MKMapViewDelegate><MKMapViewDelegatePrivate>* _unsafeDelegate;
	int _animationType;
	unsigned long long _suspendedEffectsCount;
	unsigned long long _userInteractionDisabledCount;
	unsigned long long _eventMode;
	unsigned long long _eventModeHistory;
	unsigned long long _mapType;
	NSTimer* _defaultLocationTimer;
	UILabel* _debugView;
	NSTimer* _debugTimer;
	unsigned long long _debugViewIndex;
	_MKEnvironmentLabel* _debugCurrentEnvironmentLabel;
	double _heading;
	UILongPressGestureRecognizer* _longPressGestureRecognizer;
	UITapGestureRecognizer* _selectingTapGestureRecognizer;
	UITapGestureRecognizer* _nonselectingTapGestureRecognizer;
	UIGestureRecognizer* _locationConsoleGesture;
	MKMapGestureController* _gestureController;
	MKOverlayContainerView* _overlayContainer;
	int _rotationState;
	double _angularVelocity;
	long long _userTrackingMode;
	MKBasicMapView* _basicMapView;
	VKMapView* _mapView;
	MKScaleView* _scaleView;
	MKCompassView* _compassView;
	bool _scaleVisible;
	bool _compassVisible;
	bool _suppressCompassDisplay;
	bool _scaleEnabled;
	bool _compassEnabled;
	UIView* _scrollContainerView;
	/*^block*/ id _regionSetterWhenSized;
	MKUserLocation* _userLocation;
	VKPuckAnimator* _userLocationAnimator;
	MKMapCamera* _camera;
	id _topLayoutGuide;
	id _bottomLayoutGuide;
	/*^block*/ id _showCalloutAfterRegionChangeBlock;
	/*^block*/ id _selectAnnotationViewAfterRedrawBlock;
	/*^block*/ id _debugConsoleAdditionalInfoProvider;
	UITextView* _vectorKitDebugView;
	UIEdgeInsets _edgeInsets;
	UIPanGestureRecognizer* _vectorKitStyleDebugGestureRecognizer;
	struct {
		unsigned callsDelegateForAllRegionChanges : 1;
		unsigned changingRegion : 1;
		unsigned debugViewHeading : 1;
		unsigned didStartDragging : 1;
		unsigned draggingInterrupted : 1;
		unsigned didStartSmoothScrolling : 1;
		unsigned hasRenderedSomething : 1;
		unsigned ignoreHeadingUpdates : 1;
		unsigned ignoreLocationUpdates : 1;
		unsigned isSuspended : 1;
		unsigned liveTrackingAutoSelectZoomLevel : 1;
		unsigned longPressing : 1;
		unsigned persistFixedUserLocation : 1;
		unsigned regionChangeIsAnimated : 1;
		unsigned rotationSupported : 1;
		unsigned scrollEnabled : 1;
		unsigned scrolling : 1;
		unsigned scrollIsAnimated : 1;
		unsigned shouldRotateForHeading : 1;
		unsigned useVehicleHeading : 1;
		unsigned showsUserLocation : 1;
		unsigned zoomEnabled : 1;
		unsigned zoomIsAnimated : 1;
		unsigned zooming : 1;
		unsigned isChangingViewSize : 1;
		unsigned isChangingEdgeInsets : 1;
		unsigned shouldSetRegionOnSizeChange : 1;
		unsigned showsAttribution : 1;
		unsigned showsAttributionBadge : 1;
		unsigned locationUpdatesPausedForRegionChange : 1;
		unsigned useOld2DAnnotationContainer : 1;
		unsigned rotating : 1;
		unsigned pitching : 1;
		unsigned rotateEnabled : 1;
		unsigned pitchEnabled : 1;
		unsigned showsBuildings : 1;
		unsigned showsPointsOfInterest : 1;
		unsigned allowsRotation : 1;
		unsigned hasPendingCameraChange : 1;
		unsigned backdropViewQualityChangingDisabled : 1;
		unsigned canSelectPOIs : 1;
		unsigned canSelectAllLabels : 1;
		unsigned vectorKitConsoleEnabled : 1;
		unsigned edgeInsetsAreExplicit : 1;
		unsigned locationPropagationEnabled : 1;
		unsigned userInteractionPausesLocationUpdates : 1;
		unsigned locationPulseEnabled : 1;
		unsigned shouldSplitRouteLine : 1;
		unsigned showsCurrentEnvironmentName : 1;
		unsigned processingUserLocationUpdate : 1;
		unsigned changingMapType : 1;
		unsigned delegateShouldReceiveTouch : 1;
		unsigned delegateShouldDelayTapResponse : 1;
		unsigned delegateWillChangeRotation : 1;
		unsigned delegateDidUpdateUserLocation : 1;
		unsigned delegateDidFailToLocateUser : 1;
		unsigned delegateWillChangeRegion : 1;
		unsigned delegateDidChangeRegion : 1;
		unsigned delegateDidStartMapRendering : 1;
		unsigned delegateDidFinishMapRendering : 1;
		unsigned delegateDidChangeUserTrackingMode : 1;
		unsigned delegateDidChangeUserTrackingModeButton : 1;
		unsigned delegateDidChangeMapType : 1;
	}  _flags;

}

@property (nonatomic,readonly) NSArray * overlays; 
@property (nonatomic,retain) CLLocation * predictedUserLocation; 
@property (assign,nonatomic) int userLocationSource; 
@property (assign,nonatomic) bool ignoreLocationUpdates; 
@property (nonatomic,readonly) MKAnnotationView * userLocationView; 
@property (assign,nonatomic,@dynamic,__weak) <MKMapViewDelegate> * delegate; 
@property (assign,nonatomic) unsigned long long mapType; 
@property (assign,nonatomic) SCD_Struct_MK2 region; 
@property (assign,nonatomic) SCD_Struct_MK1 centerCoordinate; 
@property (assign,nonatomic) SCD_Struct_MK2 visibleMapRect; 
@property (nonatomic,copy) MKMapCamera * camera; 
@property (assign,getter=isZoomEnabled,nonatomic) bool zoomEnabled; 
@property (assign,getter=isScrollEnabled,nonatomic) bool scrollEnabled; 
@property (assign,getter=isRotateEnabled,nonatomic) bool rotateEnabled; 
@property (assign,getter=isPitchEnabled,nonatomic) bool pitchEnabled; 
@property (assign,nonatomic) bool showsPointsOfInterest; 
@property (assign,nonatomic) bool showsBuildings; 
@property (assign,nonatomic) bool showsUserLocation; 
@property (nonatomic,readonly) MKUserLocation * userLocation; 
@property (assign,nonatomic) long long userTrackingMode; 
@property (getter=isUserLocationVisible,nonatomic,readonly) bool userLocationVisible; 
@property (nonatomic,readonly) NSArray * annotations; 
@property (nonatomic,copy) NSArray * selectedAnnotations; 
@property (nonatomic,readonly) CGRect annotationVisibleRect; 
@property (readonly) double minZoomLevel; 
+(SCD_Struct_MK2)_regionThatFitsMapType:(unsigned long long)arg1 viewSize:(CGSize)arg2 edgeInsets:(UIEdgeInsets)arg3 region:(SCD_Struct_MK2)arg4 minZoomLevel:(double)arg5 maxZoomLevel:(double)arg6 ;
+(unsigned long long)minZoomLevelForMapType:(unsigned long long)arg1 viewSize:(CGSize)arg2 ;
+(SCD_Struct_MK2)regionThatFitsMapType:(unsigned long long)arg1 viewSize:(CGSize)arg2 edgeInsets:(UIEdgeInsets)arg3 region:(SCD_Struct_MK2)arg4 ;
+(SCD_Struct_MK2)_mapRectThatFitsViewBounds:(CGRect)arg1 mapRect:(SCD_Struct_MK2)arg2 viewInsets:(UIEdgeInsets)arg3 edgePadding:(UIEdgeInsets)arg4 minZoomLevel:(double)arg5 maxZoomLevel:(double)arg6 ;
+(SCD_Struct_MK2)regionThatFitsMapType:(unsigned long long)arg1 viewSize:(CGSize)arg2 region:(SCD_Struct_MK2)arg3 ;
+(void)setRendersInBackgroundByDefault:(bool)arg1 ;
-(void)setDelegate:(id)arg1 ;
-(id)delegate;
-(void)_setMaximumZoomLevel:(double)arg1 ;
-(void)_resetMaximumZoomLevel;
-(void)addOverlay:(id)arg1 level:(long long)arg2 ;
-(void)addOverlays:(id)arg1 level:(long long)arg2 ;
-(void)insertOverlay:(id)arg1 atIndex:(unsigned long long)arg2 level:(long long)arg3 ;
-(void)exchangeOverlay:(id)arg1 withOverlay:(id)arg2 ;
-(id)overlaysInLevel:(long long)arg1 ;
-(id)viewForOverlay:(id)arg1 ;
-(id)rendererForOverlay:(id)arg1 ;
-(void)removeOverlays:(id)arg1 ;
-(void)addOverlays:(id)arg1 ;
-(id)overlays;
-(void)removeOverlay:(id)arg1 ;
-(void)addOverlay:(id)arg1 ;
-(void)insertOverlay:(id)arg1 aboveOverlay:(id)arg2 ;
-(void)insertOverlay:(id)arg1 belowOverlay:(id)arg2 ;
-(void)insertOverlay:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(void)exchangeOverlayAtIndex:(unsigned long long)arg1 withOverlayAtIndex:(unsigned long long)arg2 ;
-(id)vk_mapLayer;
-(id)overlayContainer;
-(id)createDrawableForOverlay:(id)arg1 ;
-(void)overlayContainerAddedDrawables:(id)arg1 ;
-(void)_updateCameraState;
-(id)_camera;
-(void)_setCamera:(id)arg1 animated:(bool)arg2 ;
-(void)_setCamera:(id)arg1 ;
-(void)_setCamera:(id)arg1 duration:(double)arg2 timingCurve:(long long)arg3 ;
-(void)_setCamera:(id)arg1 duration:(double)arg2 timing:(/*^block*/ id)arg3 ;
-(void)_updateFromCamera:(id)arg1 duration:(double)arg2 timing:(/*^block*/ id)arg3 ;
-(void)_updateFromCamera:(id)arg1 ;
-(void)_startTrackingHeading;
-(void)_stopTrackingHeading;
-(void)disableHeadingTracking:(bool)arg1 ;
-(bool)shouldRotateForHeading;
-(bool)_updateRotationSupported;
-(void)enableMapRotationIfNeeded;
-(void)disableMapRotation:(bool)arg1 ;
-(bool)_useVehicleHeading;
-(void)_updateCourseForMapViewHeading:(id)arg1 ;
-(void)_updateHeading:(id)arg1 rotationType:(int)arg2 animated:(bool)arg3 ;
-(void)setShouldRotateForHeading:(bool)arg1 ;
-(bool)_rotationPossible;
-(CGRect)contentBounds;
-(void)_setUseVehicleHeading:(bool)arg1 ;
-(void)pauseUserHeadingUpdates;
-(void)resumeUserHeadingUpdates;
-(bool)isHeadingTrackingEnabled;
-(void)setHeadingTrackingEnabled:(bool)arg1 ;
-(void)_considerMovingToThrottledHeading;
-(void)locationManagerUpdatedHeading:(id)arg1 ;
-(void)locationManagerFailedToUpdateHeading:(id)arg1 withError:(id)arg2 ;
-(void)locationManager:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3 ;
-(CGRect)_debugViewFrame;
-(bool)_isUserLocationInView:(bool)arg1 ;
-(id)userLocationView;
-(bool)isLocationConsoleEnabled;
-(void)setLocationConsoleEnabled:(bool)arg1 ;
-(bool)isTrackingUserLocation;
-(bool)_isUserLocationViewCentered:(double)arg1 ;
-(void)setLiveTrackingAutoSelectZoomLevel:(bool)arg1 ;
-(void)_pauseUserLocationUpdates;
-(void)_resumeUserLocationUpdates:(bool)arg1 ;
-(bool)ignoreLocationUpdates;
-(void)removeUserLocation;
-(void)_toggleLocationConsole:(id)arg1 ;
-(void)_updateLocationConsole;
-(id)descriptionForLocation:(id)arg1 compact:(bool)arg2 ;
-(id)predictedUserLocation;
-(void)setIgnoreLocationUpdates:(bool)arg1 ;
-(void)locationManagerUpdatedLocation:(id)arg1 ;
-(void)setPredictedUserLocation:(id)arg1 ;
-(void)disableLiveTracking;
-(bool)liveTrackingAutoSelectZoomLevel;
-(void)_ensureLiveTrackingResourcesInitialized;
-(bool)_isLocationPropagationEnabled;
-(void)_setLocationPropagationEnabled:(bool)arg1 ;
-(int)userLocationSource;
-(void)setUserLocationSource:(int)arg1 ;
-(void)resetUserLocation;
-(bool)_haveNewPendingLocation;
-(bool)_deviceIsPluggedIn;
-(void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2 ;
-(void)locationManagerDidReset:(id)arg1 ;
-(bool)locationManagerShouldPauseLocationUpdates:(id)arg1 ;
-(void)locationManager:(id)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(id)arg3 ;
-(void)locationManagerDidPauseLocationUpdates:(id)arg1 ;
-(void)locationManagerDidResumeLocationUpdates:(id)arg1 ;
-(void)puckAnimatorDidStop:(id)arg1 ;
-(void)puckAnimator:(id)arg1 updatedTargetPosition:(SCD_Struct_MK3)arg2 ;
-(void)puckAnimator:(id)arg1 runAnimation:(id)arg2 ;
-(void)puckAnimator:(id)arg1 updatedPosition:(SCD_Struct_MK3)arg2 course:(double)arg3 ;
-(void)startUpdatingUserLocation;
-(void)stopUpdatingUserLocation;
-(void)contentSizeCategoryDidChange:(id)arg1 ;
-(CGRect)attributionFrame;
-(void)setVisibleMapRect:(SCD_Struct_MK2)arg1 ;
-(UIEdgeInsets)_edgeInsets;
-(double)_minimumZoomLevel;
-(double)_maximumZoomLevel;
-(void)setLoadingEnabled:(bool)arg1 ;
-(void)_insertSubview:(id)arg1 ;
-(void)_setMapType:(unsigned long long)arg1 onInit:(bool)arg2 ;
-(void)geoDefaultsDidChange:(id)arg1 ;
-(void)deviceOrientationDidChange:(id)arg1 ;
-(void)_willChangeStatusBarFrame:(id)arg1 ;
-(void)_updatePitchAllowed:(bool)arg1 ;
-(void)_updateRotateAllowed:(bool)arg1 ;
-(void)_displayWorld;
-(void)goToDefaultLocation;
-(void)set_defaultLocationTimer:(id)arg1 ;
-(void)_configureGestureRecognizers:(id)arg1 ;
-(void)_updateAttribution;
-(void)stopEffects;
-(id)_commonInitAndEnableLoading:(bool)arg1 fromIB:(bool)arg2 gestureRecognizerHostView:(id)arg3 showsAttribution:(bool)arg4 ;
-(bool)showsUserLocation;
-(bool)isPitchEnabled;
-(bool)isRotateEnabled;
-(void)set_startEffectsTimer:(id)arg1 ;
-(void)_clearLayoutGuides;
-(void)startEffects;
-(void)_layoutAttribution;
-(CGRect)_currentEnvironmentNameFrame;
-(void)_updateScrollingAndGestures;
-(void)_updateEnvironmentLabelText;
-(void)_updateHeadingOrientation;
-(bool)_supportsVKMapType:(long long)arg1 ;
-(bool)_canShowFlyover;
-(void)_deselectLabelMarkerAnimated:(bool)arg1 ;
-(void)_updateIconsShouldAlignToPixels;
-(void)_handleStyleDebugGesture:(id)arg1 ;
-(void)_updateCompassVisibility;
-(bool)_isChangingRegionForGesture;
-(void)_setScrolling:(bool)arg1 animated:(bool)arg2 ;
-(void)_willStartScroll:(bool)arg1 ;
-(void)_didEndScroll;
-(CGPoint)_centerPoint;
-(double)_zoomLevel;
-(double)_boundedZoomLevel:(double)arg1 ;
-(long long)_roundedZoomLevel;
-(void)_setZoomScale:(double)arg1 centerCoordinate:(SCD_Struct_MK1)arg2 duration:(double)arg3 animationType:(int)arg4 resetHeading:(bool)arg5 ;
-(double)_zoomScaleForMapRegion:(id)arg1 ;
-(void)_sizeWillChange;
-(void)_sizeDidChangeWithCenterCoordinate:(SCD_Struct_MK1)arg1 ;
-(void)_setUserTrackingMode:(long long)arg1 animated:(bool)arg2 fromTrackingButton:(bool)arg3 ;
-(void)toggleLocationConsole:(id)arg1 ;
-(void)_handleTapToSelect:(id)arg1 ;
-(void)_handleTapToDeselect:(id)arg1 ;
-(void)handleLongPress:(id)arg1 ;
-(void)_addDebugGesture;
-(bool)calloutViewContainsPoint:(CGPoint)arg1 ;
-(bool)_hitSomethingAtTouch:(id)arg1 ;
-(void)_clearEventMode:(int)arg1 ;
-(void)_dropDraggingAnnotationView:(bool)arg1 ;
-(void)_handleLongPressDidEnd;
-(void)deselectAnnotation:(id)arg1 animated:(bool)arg2 ;
-(void)_annotationViewDragStateChanged:(id)arg1 ;
-(void)_setEventMode:(int)arg1 ;
-(id)mapAttributionWithStringAttributes:(id)arg1 ;
-(void)_selectLabelMarker:(id)arg1 animated:(bool)arg2 avoid:(CGRect)arg3 ;
-(bool)_isHandlingUserEvent;
-(bool)_iconsShouldAlignToPixels;
-(void)_updateAccessories;
-(void)_cancelAccessoriesAndDoubleTap;
-(void)_updateScrollContainerView:(bool)arg1 ;
-(void)_updateRotationAttributes;
-(void)_updateEffects;
-(void)resumeUserLocationUpdates;
-(bool)_shouldDisplayScaleForCurrentRegion;
-(void)_setScaleVisible:(bool)arg1 animated:(bool)arg2 ;
-(void)_updateScaleVisibility;
-(void)setUserTrackingMode:(long long)arg1 ;
-(void)_setAnimationType:(int)arg1 ;
-(void)pauseUserLocationUpdates;
-(void)_cancelAccessories;
-(void)_updateShouldDisplayEffects;
-(double)minZoomLevel;
-(double)_maxZoomLevelForCoordinate:(SCD_Struct_MK1)arg1 ;
-(SCD_Struct_MK1)_centerMapPoint;
-(bool)effectsEnabled;
-(void)_setZoomScale:(double)arg1 centerMapPoint:(SCD_Struct_MK1)arg2 duration:(double)arg3 animationType:(int)arg4 resetHeading:(bool)arg5 ;
-(void)_goToMapRegion:(id)arg1 duration:(double)arg2 animationType:(int)arg3 resetHeading:(bool)arg4 completionHandler:(/*^block*/ id)arg5 ;
-(bool)_animationTypeIgnoresEvents:(int)arg1 ;
-(void)_suspendUserInteraction;
-(void)_resumeUserInteraction;
-(void)_updateDebugViewFrameWithEdgeInsets;
-(void)_updateVectorKitConsoleFrameWithEdgeInsets;
-(void)_updateCompassPosition;
-(void)_updateScalePosition;
-(bool)_roomForCompass;
-(void)_setCompassVisible:(bool)arg1 animated:(bool)arg2 ;
-(void)_setEdgeInsets:(UIEdgeInsets)arg1 explicit:(bool)arg2 ;
-(void)setVisibleMapRect:(SCD_Struct_MK2)arg1 edgePadding:(UIEdgeInsets)arg2 animated:(bool)arg3 ;
-(void)_addSetRegionBlockWhenSized:(/*^block*/ id)arg1 ;
-(id)_mapRegionWithCenterCoordinate:(SCD_Struct_MK1)arg1 zoomScale:(double)arg2 ;
-(void)_goToMapRegion:(id)arg1 duration:(double)arg2 animationType:(int)arg3 resetHeading:(bool)arg4 ;
-(void)_cancelDoubleTap;
-(CGPoint)convertCoordinate:(SCD_Struct_MK1)arg1 toPointToView:(id)arg2 ;
-(int)_viewIndexForSubview:(id)arg1 ;
-(SCD_Struct_MK5)_zoomRegionForMapRect:(SCD_Struct_MK2)arg1 edgePadding:(UIEdgeInsets)arg2 maxZoomLevel:(long long)arg3 minZoomLevel:(long long)arg4 ;
-(double)_zoomLevelForMapRect:(SCD_Struct_MK2)arg1 includeAccessoryPadding:(bool)arg2 ;
-(double)_goToCenterCoordinate:(SCD_Struct_MK1)arg1 zoomLevel:(double)arg2 animationType:(int)arg3 cancelDefaultLocationTimer:(bool)arg4 ;
-(double)_zoomLevelForRegion:(SCD_Struct_MK2)arg1 includeAccessoryPadding:(bool)arg2 ;
-(bool)goToCenterCoordinate:(SCD_Struct_MK1)arg1 zoomLevel:(double)arg2 animationType:(int)arg3 ;
-(double)_boundedZoomLevel:(double)arg1 coordinate:(SCD_Struct_MK1)arg2 ;
-(void)_selectUserLocationTypeWithDeltaZoomLevel:(double)arg1 ;
-(double)_panDurationFromPoint:(CGPoint)arg1 toPoint:(CGPoint)arg2 ;
-(bool)isRegionChanging;
-(SCD_Struct_MK1)_convertDoublePoint:(CGPoint)arg1 toMapPointFromView:(id)arg2 ;
-(void)_fixUserLocationFromPresentationValue;
-(void)_clearFixedUserLocation;
-(void)_setScrolling:(bool)arg1 ;
-(void)_updateContentBounds;
-(void)_updateCenteredAttributesWithCoordinate:(SCD_Struct_MK1)arg1 ;
-(bool)_isPitched;
-(SCD_Struct_MK1)convertPoint:(CGPoint)arg1 toCoordinateFromView:(id)arg2 ;
-(id)scaleView;
-(void)snapToNorth:(id)arg1 ;
-(bool)isCompassEnabled;
-(long long)userTrackingMode;
-(id)compassView;
-(id)compassVisibilityAnimation;
-(void)_willStartUserInteraction;
-(void)_didEndUserInteraction;
-(void)_userScrollingEnded;
-(void)_willStartZoom:(bool)arg1 ;
-(void)_didEndZoom;
-(void)_didChangeRegionMidstream:(bool)arg1 ;
-(void)_willChangeRegionAnimated:(bool)arg1 ;
-(CGRect)annotationVisibleRect;
-(void)setRegion:(SCD_Struct_MK2)arg1 animated:(bool)arg2 ;
-(void)setCamera:(id)arg1 animated:(bool)arg2 ;
-(SCD_Struct_MK2)visibleMapRect;
-(bool)goToRegion:(SCD_Struct_MK2)arg1 animationType:(int)arg2 ;
-(id)annotationsInMapRect:(SCD_Struct_MK2)arg1 ;
-(SCD_Struct_MK1)_convertDoublePoint:(CGPoint)arg1 toCoordinateFromView:(id)arg2 ;
-(CGRect)_convertMapRect:(SCD_Struct_MK2)arg1 toDoubleRectToView:(id)arg2 ;
-(SCD_Struct_MK2)_convertDoubleRect:(CGRect)arg1 toMapRectFromView:(id)arg2 ;
-(CGPoint)_convertMapPoint:(SCD_Struct_MK1)arg1 toDoublePointToView:(id)arg2 ;
-(id)_selectedLabelMarker;
-(void)_selectAnnotation:(id)arg1 animated:(bool)arg2 avoid:(CGRect)arg3 ;
-(void)_addAnnotation:(id)arg1 allowAnimation:(bool)arg2 ;
-(id)_findLayoutGuideVC;
-(void)_updateInsets;
-(void)updateLayoutGuides;
-(double)_goToCenterCoordinate:(SCD_Struct_MK1)arg1 zoomLevel:(double)arg2 animationType:(int)arg3 ;
-(void)selectAnnotationRepresentation:(id)arg1 animated:(bool)arg2 avoid:(CGRect)arg3 ;
-(SCD_Struct_MK2)_mapRectWithFraction:(double)arg1 ofVisible:(SCD_Struct_MK2)arg2 ;
-(void)_zoomWithAmount:(double)arg1 ;
-(bool)annotationContainerShouldAlignToPixels:(id)arg1 ;
-(bool)annotationContainerIsRotated:(id)arg1 ;
-(void)annotationContainer:(id)arg1 annotationView:(id)arg2 calloutAccessoryControlTapped:(id)arg3 ;
-(void)annotationContainer:(id)arg1 scrollToRevealCalloutWithOffset:(CGPoint)arg2 annotationCoordinate:(SCD_Struct_MK1)arg3 completionHandler:(/*^block*/ id)arg4 ;
-(double)annotationContainer:(id)arg1 pinDropDistanceForCoordinate:(SCD_Struct_MK1)arg2 maxDistance:(double*)arg3 startPoint:(CGPoint*)arg4 shadowStartPoint:(CGPoint*)arg5 ;
-(void)annotationContainerWillAnimateBubble:(id)arg1 ;
-(void)annotationContainerDidAnimateBubble:(id)arg1 ;
-(void)annotationContainerWillDropPins:(id)arg1 ;
-(void)annotationContainerDidDropPins:(id)arg1 ;
-(CGRect)visibleCenteringRectInView:(id)arg1 ;
-(CGRect)visibleRectInView:(id)arg1 ;
-(CGRect)annotationContainerVisibleRect:(id)arg1 ;
-(void)annotationContainerDidFinishMapsTransitionExpanding:(id)arg1 ;
-(void)gestureControllerWillStartUserInteraction:(id)arg1 ;
-(void)gestureControllerDidStopUserInteraction:(id)arg1 ;
-(void)gestureControllerWillStartPanning:(id)arg1 ;
-(void)gestureControllerDidStopPanning:(id)arg1 willDecelerate:(bool)arg2 ;
-(void)gestureControllerDidStopPanningDecelerating:(id)arg1 ;
-(void)gestureControllerWillStartZooming:(id)arg1 animated:(bool)arg2 ;
-(void)gestureControllerDidStopZooming:(id)arg1 direction:(long long)arg2 willDecelerate:(bool)arg3 ;
-(void)gestureControllerDidStopZoomingDecelerating:(id)arg1 direction:(long long)arg2 ;
-(void)gestureControllerWillStartTwoFingerLongPress:(id)arg1 ;
-(void)gestureControllerDidStopTwoFingerLongPress:(id)arg1 ;
-(void)gestureControllerWillStartRotating:(id)arg1 ;
-(void)gestureControllerDidStopRotating:(id)arg1 willDecelerate:(bool)arg2 ;
-(void)gestureControllerDidStopRotatingDecelerating:(id)arg1 ;
-(void)gestureControllerWillStartTilting:(id)arg1 ;
-(void)gestureControllerDidStopTilting:(id)arg1 willDecelerate:(bool)arg2 ;
-(void)gestureControllerDidStopTiltingDecelerating:(id)arg1 ;
-(double)gestureController:(id)arg1 shouldWaitForNextTapForDuration:(double)arg2 afterTouch:(id)arg3 ;
-(void)addAnnotationRepresentation:(id)arg1 allowAnimation:(bool)arg2 ;
-(void)removeAnnotationRepresentation:(id)arg1 ;
-(void)showCalloutIfNecessaryForAnnotationRepresentation:(id)arg1 animated:(bool)arg2 avoid:(CGRect)arg3 ;
-(void)deselectAnnotationRepresentation:(id)arg1 animated:(bool)arg2 ;
-(void)moveAnnotationRepresentation:(id)arg1 fromCoordinate:(SCD_Struct_MK1)arg2 animated:(bool)arg3 duration:(double)arg4 ;
-(void)annotationManager:(id)arg1 didAddAnnotationRepresentations:(id)arg2 ;
-(id)annotationManager:(id)arg1 representationForAnnotation:(id)arg2 ;
-(void)annotationManager:(id)arg1 didSelectAnnotationRepresentation:(id)arg2 ;
-(void)annotationManager:(id)arg1 didDeselectAnnotationRepresentation:(id)arg2 ;
-(SCD_Struct_MK2)regionThatFits:(SCD_Struct_MK2)arg1 ;
-(id)_initWithFrame:(CGRect)arg1 gestureRecognizerHostView:(id)arg2 showsAttribution:(bool)arg3 ;
-(id)initFromIBWithFrame:(CGRect)arg1 ;
-(void)_setSafeDelegate:(id)arg1 ;
-(void)setBackdropViewQualityChangingDisabled:(bool)arg1 ;
-(id)_mapLayer;
-(id)_viewportDictionary;
-(void)_restoreViewportFromDictionary:(id)arg1 ;
-(bool)_isVectorKitConsoleEnabled;
-(void)_setVectorKitConsoleEnabled:(bool)arg1 ;
-(bool)_showsTraffic;
-(void)_setShowsTraffic:(bool)arg1 ;
-(bool)showsAttribution;
-(void)setShowsAttribution:(bool)arg1 ;
-(bool)showsAttributionBadge;
-(void)setShowsAttributionBadge:(bool)arg1 ;
-(bool)showsPOIIcons;
-(void)setShowsPOIIcons:(bool)arg1 ;
-(id)_selectingTapGestureRecognizer;
-(id)_nonselectingTapGestureRecognizer;
-(id)_longPressGestureRecognizer;
-(bool)_annotationViewsAreAddedImmediately;
-(void)set_annotationViewsAreAddedImmediately:(bool)arg1 ;
-(bool)_allowsPopoverWhenNotInWindow;
-(void)_setAllowsPopoverWhenNotInWindow:(bool)arg1 ;
-(void)_setCalloutViewClass:(Class)arg1 ;
-(Class)_calloutViewClass;
-(id)_defaultLocationTimer;
-(bool)_isShowingFlyover;
-(long long)_mapDisplayStyle;
-(void)_setMapDisplayStyle:(long long)arg1 ;
-(bool)_isVectorKitStyleDebugEnabled;
-(void)_setVectorKitStyleDebugEnabled:(bool)arg1 ;
-(int)animationType;
-(id)_startEffectsTimer;
-(bool)isLoadingEnabled;
-(void)setScaleEnabled:(bool)arg1 ;
-(bool)isScaleEnabled;
-(void)setCompassEnabled:(bool)arg1 ;
-(bool)shouldReloadSynchronously;
-(void)setShouldReloadSynchronously:(bool)arg1 ;
-(bool)isGoingToDefaultLocation;
-(bool)_wasScrolling;
-(bool)_isScrollingAnimation;
-(CGPoint)_centerPointOffset;
-(CGPoint)centerLongLat;
-(id)_mapRegionOfInterest;
-(long long)mapRegionZoomLevel;
-(id)debugView;
-(void)set_rotationState:(int)arg1 ;
-(void)set_zoomScale:(double)arg1 ;
-(bool)_canZoomIn;
-(bool)_canZoomOut;
-(bool)_panWithMomentum;
-(void)_setPanWithMomentum:(bool)arg1 ;
-(void)_setTracePlaybackSpeedMultiplier:(double)arg1 ;
-(bool)isUserLocationVisible;
-(bool)hasRenderedSomething;
-(bool)canRotateForHeading;
-(id)annotationContainer;
-(id)_calloutPopoverController;
-(bool)_isCalloutExpanded;
-(/*^block*/ id)_debugConsoleAdditionalInfoProvider;
-(void)_setDebugConsoleAdditionalInfoProvider:(/*^block*/ id)arg1 ;
-(bool)_showsCurrentEnvironmentName;
-(void)_setShowsCurrentEnvironmentName:(bool)arg1 ;
-(bool)_userInteractionPausesLocationUpdates;
-(void)_setUserInteractionPausesLocationUpdates:(bool)arg1 ;
-(bool)_isLocationPulseEnabled;
-(void)_setLocationPulseEnabled:(bool)arg1 ;
-(bool)_shouldSplitRouteLine;
-(void)_setShouldSplitRouteLine:(bool)arg1 ;
-(id)scrollContainerView;
-(UIEdgeInsets)_labelEdgeInsets;
-(void)_setLabelEdgeInsets:(UIEdgeInsets)arg1 ;
-(void)_setEdgeInsets:(UIEdgeInsets)arg1 ;
-(void)showAnnotations:(id)arg1 animated:(bool)arg2 ;
-(id)_stringWithEventMode:(long long)arg1 ;
-(bool)callsDelegateForAllRegionChanges;
-(void)setCallsDelegateForAllRegionChanges:(bool)arg1 ;
-(bool)_shouldConservePowerAnimationType:(int)arg1 ;
-(double)pointDistanceFromCoordinate:(SCD_Struct_MK1)arg1 toCoordinate:(SCD_Struct_MK1)arg2 ;
-(bool)goToCenterCoordinate:(SCD_Struct_MK1)arg1 longLatSpan:(CGSize)arg2 animationType:(int)arg3 ;
-(SCD_Struct_MK1)_centerMapPointForMapRegion:(id)arg1 ;
-(SCD_Struct_MK1)_zoomCenterPointWithAnchor:(int)arg1 point:(CGPoint)arg2 zoomScale:(double)arg3 ;
-(void)updateTiling;
-(bool)compassVisible;
-(void)annotationContainerDidShowUserLocationView;
-(void)annotationContainerDidHideUserLocationView;
-(id)_annotationViews;
-(void)setSelectedAnnotations:(id)arg1 ;
-(CGPoint)_convertCoordinate:(SCD_Struct_MK1)arg1 toDoublePointToView:(id)arg2 ;
-(CGRect)convertRegion:(SCD_Struct_MK2)arg1 toRectToView:(id)arg2 ;
-(bool)_canSelectPOIs;
-(void)_setCanSelectPOIs:(bool)arg1 ;
-(bool)_canSelectAllLabels;
-(void)_setCanSelectAllLabels:(bool)arg1 ;
-(void)_selectLabelMarker:(id)arg1 animated:(bool)arg2 ;
-(void)_addAnnotations:(id)arg1 allowAnimation:(bool)arg2 ;
-(void)_replaceAnnotation:(id)arg1 withAnnotation:(id)arg2 ;
-(void)_addViewsForAnnotations:(id)arg1 ;
-(void)_enter3DMode;
-(void)_exit3DMode;
-(bool)_canEnter3DMode;
-(bool)_canEnterNightMode;
-(long long)_userTrackingZoomStyle;
-(void)_setUserTrackingZoomStyle:(long long)arg1 ;
-(void)_addVectorOverlay:(id)arg1 ;
-(void)_removeVectorOverlay:(id)arg1 ;
-(void)_addPersistentVectorOverlay:(id)arg1 ;
-(void)_removePersistentVectorOverlay:(id)arg1 ;
-(void)_setVisibleMapRect:(SCD_Struct_MK2)arg1 animated:(bool)arg2 completionHandler:(/*^block*/ id)arg3 ;
-(void)_setVisibleMapRect:(SCD_Struct_MK2)arg1 duration:(double)arg2 completionHandler:(/*^block*/ id)arg3 ;
-(SCD_Struct_MK2)_visibleUnderRotationMapRect;
-(void)_prepareScenicAnimationForLocation:(SCD_Struct_MK1)arg1 animationType:(int)arg2 completion:(/*^block*/ id)arg3 ;
-(void)_performScenicAnimationForLocation:(SCD_Struct_MK1)arg1 animationType:(int)arg2 ;
-(void)_stopScenicAnimation;
-(bool)_canShowAnimationForSearchResultWithMapRegion:(id)arg1 ;
-(void)_showAnimationAtCoordinate:(SCD_Struct_MK1)arg1 withMapRegion:(id)arg2 ;
-(void)_zoomIn;
-(void)_zoomOut;
-(void)_startPanningAtPoint:(CGPoint)arg1 ;
-(void)_updatePanWithTranslation:(CGPoint)arg1 ;
-(void)_stopPanningAtPoint:(CGPoint)arg1 ;
-(long long)_interfaceOrientation;
-(void)setUserTrackingMode:(long long)arg1 animated:(bool)arg2 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)_populateArchivedSubviews:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)setHidden:(bool)arg1 ;
-(void)didMoveToWindow;
-(void)setFrame:(CGRect)arg1 ;
-(void)layoutSubviews;
-(void)setBounds:(CGRect)arg1 ;
-(bool)gestureRecognizerShouldBegin:(id)arg1 ;
-(bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2 ;
-(void)applicationWillTerminate:(id)arg1 ;
-(void)applicationDidBecomeActive:(id)arg1 ;
-(void)applicationWillResignActive:(id)arg1 ;
-(void)applicationDidEnterBackground:(id)arg1 ;
-(bool)isSuspended;
-(void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2 ;
-(void)_clearGestureRecognizers;
-(bool)_shouldAnimatePropertyWithKey:(id)arg1 ;
-(bool)isScrollEnabled;
-(void)willMoveToWindow:(id)arg1 ;
-(void)didMoveToSuperview;
-(bool)isZooming;
-(void)setScrollEnabled:(bool)arg1 ;
-(void)setZoomEnabled:(bool)arg1 ;
-(bool)isZoomEnabled;
-(double)_zoomScale;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(bool)isScrolling;
-(id)awakeAfterUsingCoder:(id)arg1 ;
-(void).cxx_destruct;
-(void)drawRect:(CGRect)arg1 forViewPrintFormatter:(id)arg2 ;
-(void)setSuspended:(bool)arg1 ;
-(bool)_isVisible;
-(id)camera;
-(void)setCamera:(id)arg1 ;
-(bool)hasUserLocation;
-(void)setRegion:(SCD_Struct_MK2)arg1 ;
-(SCD_Struct_MK2)region;
-(void)addAnnotation:(id)arg1 ;
-(id)viewForAnnotation:(id)arg1 ;
-(id)annotations;
-(id)selectedAnnotations;
-(void)setRotateEnabled:(bool)arg1 ;
-(void)setPitchEnabled:(bool)arg1 ;
-(void)setShowsUserLocation:(bool)arg1 ;
-(void)selectAnnotation:(id)arg1 animated:(bool)arg2 ;
-(id)userLocation;
-(id)dequeueReusableAnnotationViewWithIdentifier:(id)arg1 ;
-(SCD_Struct_MK2)mapRectThatFits:(SCD_Struct_MK2)arg1 ;
-(SCD_Struct_MK2)mapRectThatFits:(SCD_Struct_MK2)arg1 edgePadding:(UIEdgeInsets)arg2 ;
-(void)setVisibleMapRect:(SCD_Struct_MK2)arg1 animated:(bool)arg2 ;
-(void)removeAnnotations:(id)arg1 ;
-(void)addAnnotations:(id)arg1 ;
-(void)removeAnnotation:(id)arg1 ;
-(SCD_Struct_MK2)convertRect:(CGRect)arg1 toRegionFromView:(id)arg2 ;
-(int)_rotationState;
-(unsigned long long)mapType;
-(bool)isShowingNoDataPlaceholders;
-(bool)showsPointsOfInterest;
-(void)setShowsPointsOfInterest:(bool)arg1 ;
-(bool)showsBuildings;
-(void)setShowsBuildings:(bool)arg1 ;
-(bool)rendersInBackground;
-(void)setRendersInBackground:(bool)arg1 ;
-(void)setMapType:(unsigned long long)arg1 ;
-(void)mapLayer:(id)arg1 canEnter3DModeDidChange:(bool)arg2 ;
-(void)mapLayer:(id)arg1 canShowFlyoverDidChange:(bool)arg2 ;
-(void)mapLayer:(id)arg1 showingFlyoverDidChange:(bool)arg2 ;
-(id)mapRegion;
-(void)setCenterCoordinate:(SCD_Struct_MK1)arg1 animated:(bool)arg2 ;
-(SCD_Struct_MK1)centerCoordinate;
-(/*^block*/ id)annotationRectTest;
-(/*^block*/ id)annotationCoordinateTest;
-(bool)shouldHideOffscreenSelectedAnnotation;
-(void)mapLayerDidStartLoadingTiles:(id)arg1 ;
-(void)mapLayerDidFinishLoadingTiles:(id)arg1 ;
-(void)mapLayerDidFailLoadingTiles:(id)arg1 withError:(id)arg2 ;
-(void)mapLayerDidChangeVisibleRegion:(id)arg1 ;
-(void)mapLayerDidDraw:(id)arg1 ;
-(void)mapLayer:(id)arg1 willChangeRegionAnimated:(bool)arg2 ;
-(void)mapLayer:(id)arg1 didChangeRegionAnimated:(bool)arg2 ;
-(id)mapLayer:(id)arg1 presentationForAnnotation:(id)arg2 ;
-(id)mapLayer:(id)arg1 painterForOverlay:(id)arg2 ;
-(void)mapLayerDidBecomeFullyDrawn:(id)arg1 hasFailedTiles:(bool)arg2 ;
-(void)mapLayerDidBecomePartiallyDrawn:(id)arg1 ;
-(void)mapLayer:(id)arg1 didBecomePitched:(bool)arg2 ;
-(void)mapLayer:(id)arg1 canZoomInDidChange:(bool)arg2 ;
-(void)mapLayer:(id)arg1 canZoomOutDidChange:(bool)arg2 ;
-(void)mapLayer:(id)arg1 selectedLabelMarkerWillDisappear:(id)arg2 ;
-(void)mapLayer:(id)arg1 willTransitionFrom:(long long)arg2 to:(long long)arg3 duration:(double)arg4 ;
-(void)setCenterCoordinate:(SCD_Struct_MK1)arg1 ;
-(void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1 ;
-(void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1 ;
@end

