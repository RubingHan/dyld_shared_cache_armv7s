/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:40 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/MapKit.framework/MapKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <MapKit/MKVariableDelayTapRecognizerDelegate.h>
#import <MapKit/_MKUserInteractionGestureRecognizerTouchObserver.h>
#import <UIKit/UIGestureRecognizerDelegate.h>

@protocol MKMapGestureControllerDelegate;
@class MKBasicMapView, MKVariableDelayTapRecognizer, UITapGestureRecognizer, UILongPressGestureRecognizer, UIPinchGestureRecognizer, UIPanGestureRecognizer, _UIDynamicValueAnimation, _UIDynamicAnimationGroup, _MKUserInteractionGestureRecognizer, UIRotationGestureRecognizer, MKTiltGestureRecognizer;

@interface MKMapGestureController : NSObject <MKVariableDelayTapRecognizerDelegate, _MKUserInteractionGestureRecognizerTouchObserver, UIGestureRecognizerDelegate> {

	MKBasicMapView* _mapView;
	<MKMapGestureControllerDelegate>* _delegate;
	MKVariableDelayTapRecognizer* _doubleTapGestureRecognizer;
	UITapGestureRecognizer* _twoFingerTapGestureRecognizer;
	UILongPressGestureRecognizer* _twoFingerLongPressGestureRecognizer;
	UIPinchGestureRecognizer* _pinchGestureRecognizer;
	UIPanGestureRecognizer* _panGestureRecognizer;
	double _lastScale;
	_UIDynamicValueAnimation* _pinchDecelerationAnimation;
	_UIDynamicAnimationGroup* _panDecelerationAnimationGroup;
	long long _gestureCount;
	bool _panWithMomentum;
	_MKUserInteractionGestureRecognizer* _touchGestureRecognizer;
	UIRotationGestureRecognizer* _rotationGestureRecognizer;
	_UIDynamicValueAnimation* _rotationDecelerationAnimation;
	MKTiltGestureRecognizer* _tiltGestureRecognizer;
	_UIDynamicValueAnimation* _tiltDecelerationAnimation;
	bool _isPanning;
	bool _isPinching;

}

@property (nonatomic,readonly) MKBasicMapView * mapView;                                                        //@synthesize mapView=_mapView - In the implementation block
@property (assign,nonatomic,__weak) <MKMapGestureControllerDelegate> * delegate;                                //@synthesize delegate=_delegate - In the implementation block
@property (assign,getter=isZoomEnabled,nonatomic) bool zoomEnabled; 
@property (assign,getter=isScrollEnabled,nonatomic) bool scrollEnabled; 
@property (assign,getter=isRotationEnabled,nonatomic) bool rotationEnabled; 
@property (assign,getter=isTiltEnabled,nonatomic) bool tiltEnabled; 
@property (assign,nonatomic) bool panWithMomentum;                                                              //@synthesize panWithMomentum=_panWithMomentum - In the implementation block
@property (nonatomic,readonly) UITapGestureRecognizer * doubleTapGestureRecognizer;                             //@synthesize doubleTapGestureRecognizer=_doubleTapGestureRecognizer - In the implementation block
@property (nonatomic,readonly) UITapGestureRecognizer * twoFingerTapGestureRecognizer;                          //@synthesize twoFingerTapGestureRecognizer=_twoFingerTapGestureRecognizer - In the implementation block
@property (nonatomic,readonly) UILongPressGestureRecognizer * twoFingerLongPressGestureRecognizer;              //@synthesize twoFingerLongPressGestureRecognizer=_twoFingerLongPressGestureRecognizer - In the implementation block
@property (nonatomic,readonly) UIPinchGestureRecognizer * pinchGestureRecognizer;                               //@synthesize pinchGestureRecognizer=_pinchGestureRecognizer - In the implementation block
@property (nonatomic,readonly) UIPanGestureRecognizer * panGestureRecognizer;                                   //@synthesize panGestureRecognizer=_panGestureRecognizer - In the implementation block
-(bool)panWithMomentum;
-(void)setPanWithMomentum:(bool)arg1 ;
-(id)initWithMapView:(id)arg1 gestureTargetView:(id)arg2 doubleTapTargetView:(id)arg3 ;
-(id)twoFingerTapGestureRecognizer;
-(void)stopUserInteractionFromExternalGesture;
-(void)startUserInteractionFromExternalGesture;
-(void)clearGestureRecognizersInFlight;
-(void)setRotationEnabled:(bool)arg1 ;
-(void)setTiltEnabled:(bool)arg1 ;
-(void)stopDynamicAnimations;
-(double)variableDelayTapRecognizer:(id)arg1 shouldWaitForNextTapForDuration:(double)arg2 afterTouch:(id)arg3 ;
-(void)handleDoubleTap:(id)arg1 ;
-(void)handleTwoFingerTap:(id)arg1 ;
-(void)handleTwoFingerLongPress:(id)arg1 ;
-(void)handleTouch:(id)arg1 ;
-(void)handleRotation:(id)arg1 ;
-(void)handleTilt:(id)arg1 ;
-(void)beginGesturing;
-(void)endGesturing;
-(void)_clearGesture:(id)arg1 ;
-(void)gestureRecognizerTouchesBegan:(id)arg1 ;
-(void)gestureRecognizerTouchesEnded:(id)arg1 ;
-(void)gestureRecognizerTouchesCanceled:(id)arg1 ;
-(id)initWithMapView:(id)arg1 gestureTargetView:(id)arg2 ;
-(bool)isTiltEnabled;
-(id)twoFingerLongPressGestureRecognizer;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)delegate;
-(bool)gestureRecognizerShouldBegin:(id)arg1 ;
-(bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(bool)isScrollEnabled;
-(void)handlePan:(id)arg1 ;
-(void)handlePinch:(id)arg1 ;
-(void)setScrollEnabled:(bool)arg1 ;
-(void)setZoomEnabled:(bool)arg1 ;
-(bool)isZoomEnabled;
-(id)panGestureRecognizer;
-(id)pinchGestureRecognizer;
-(void).cxx_destruct;
-(id)doubleTapGestureRecognizer;
-(bool)isRotationEnabled;
-(id)mapView;
@end

