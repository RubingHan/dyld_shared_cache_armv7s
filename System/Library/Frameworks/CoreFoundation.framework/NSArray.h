/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:11 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CoreFoundation/CoreFoundation-Structs.h>
#import <CoreFoundation/NSCopying.h>
#import <CoreFoundation/NSMutableCopying.h>
#import <CoreFoundation/NSSecureCoding.h>
#import <CoreFoundation/NSFastEnumeration.h>

@class AXEventPathInfoRepresentation;

@interface NSArray : NSObject <NSCopying, NSMutableCopying, NSSecureCoding, NSFastEnumeration>

@property (nonatomic,readonly) AXEventPathInfoRepresentation * firstPath; 
+(id)convertFromXML:(id)arg1 ;
+(id)_arrayWithIntArg:(int)arg1 additionalArgs:(char*)arg2 ;
+(id)cdvArrayWithIntegers:(int)arg1 ;
+(id)_gkArrayWithIndexSet:(id)arg1 ;
+(id)axArrayByIgnoringNilElementsWithCount:(unsigned long long)arg1 ;
+(id)newWithContentsOf:(id)arg1 immutable:(bool)arg2 ;
+(id)arrayWithContentsOfURL:(id)arg1 ;
+(id)arrayWithContentsOfFile:(id)arg1 ;
+(id)newArrayWithObjects:(const id*)arg1 count:(unsigned long long)arg2 ;
+(id)arrayWithArray:(id)arg1 range:(NSRange)arg2 copyItems:(bool)arg3 ;
+(id)arrayWithArray:(id)arg1 range:(NSRange)arg2 ;
+(id)arrayWithArray:(id)arg1 copyItems:(bool)arg2 ;
+(id)arrayWithOrderedSet:(id)arg1 range:(NSRange)arg2 copyItems:(bool)arg3 ;
+(id)arrayWithOrderedSet:(id)arg1 range:(NSRange)arg2 ;
+(id)arrayWithOrderedSet:(id)arg1 copyItems:(bool)arg2 ;
+(id)arrayWithOrderedSet:(id)arg1 ;
+(id)arrayWithSet:(id)arg1 copyItems:(bool)arg2 ;
+(id)arrayWithSet:(id)arg1 ;
+(id)arrayWithObjects:(const id*)arg1 count:(unsigned long long)arg2 ;
+(id)arrayWithObject:(id)arg1 ;
+(id)array;
+(id)arrayWithObjects:(id)arg1 ;
+(id)allocWithZone:(NSZone)arg1 ;
+(bool)supportsSecureCoding;
+(id)arrayWithArray:(id)arg1 ;
-(id)pl_arrayOfUniqueObjectsNotInOrderedSet:(id)arg1 ;
-(unsigned long long)pl_countOfObjectsPassingTest:(/*^block*/ id)arg1 ;
-(id)pl_shortDescription;
-(unsigned long long)pl_indexOfFirstObjectInRange:(NSRange)arg1 passingTest:(/*^block*/ id)arg2 ;
-(unsigned long long)pl_indexOfLastObjectInRange:(NSRange)arg1 passingTest:(/*^block*/ id)arg2 ;
-(unsigned long long)pl_indexOfFirstObjectPassingTest:(/*^block*/ id)arg1 ;
-(unsigned long long)pl_indexOfLastObjectPassingTest:(/*^block*/ id)arg1 ;
-(id)MSDSPAssetCollectionWithMasterFileHash:(id)arg1 ;
-(id)MSMutableDeepCopyWithZone:(NSZone)arg1 ;
-(id)MSDeepCopyWithZone:(NSZone)arg1 ;
-(id)MSMutableDeepCopy;
-(id)MSDeepCopy;
-(bool)containsObjectIdenticalTo:(id)arg1 ;
-(id)convertToXML;
-(id)allObjectsWithClass:(Class)arg1 ;
-(id)descriptionByPointer;
-(id)deepCopy;
-(unsigned long long)indexOfObject:(id)arg1 matchingComparison:(SEL)arg2 ;
-(bool)containsObject:(id)arg1 matchingComparison:(SEL)arg2 ;
-(bool)containsObjectIdenticalTo:(id)arg1 ;
-(id)allObjectsWithClass:(Class)arg1 ;
-(void)differencesFromArray:(id)arg1 deletedIndexes:(id*)arg2 insertedIndexes:(id*)arg3 ;
-(id)composeRecipientAddresses;
-(id)composeRecipientHandles;
-(id)composeRecipientNormalizedAddresses;
-(id)mediaObjects;
-(id)__ck_commaJoinedValueForKey:(id)arg1 ;
-(id)__ck_indexSetForIndexPathRowsInSection:(long long)arg1 ;
-(id)__ck_indexSetForIndexPathItemsInSection:(long long)arg1 ;
-(id)mf_commaSeparatedRecipientListWithWidth:(double)arg1 forFont:(id)arg2 usingSelector:(SEL)arg3 ;
-(id)mf_commaSeparatedRecipientListWithWidth:(double)arg1 forFont:(id)arg2 ;
-(unsigned long long)mf_indexOfRecipientWithEmailAddress:(id)arg1 ;
-(unsigned long long)mf_indexOfMailboxDictionaryWithName:(id)arg1 ;
-(id)CNFRegArrayPassingTests:(id)arg1 ;
-(id)CNFRegArrayPassingTest:(/*^block*/ id)arg1 ;
-(id)componentsJoinedIntoListWithMaxItems:(int)arg1 ;
-(unsigned long long)cr_binaryInsertionIndexOfObject:(id)arg1 usingComparator:(/*^block*/ id)arg2 match:(bool*)arg3 ;
-(id)cr_copyConcurrentlyByApplyingTransform:(/*^block*/ id)arg1 ;
-(id)cr_map:(/*^block*/ id)arg1 ;
-(id)cr_firstObject;
-(id)cr_firstObjectPassingTest:(/*^block*/ id)arg1 ;
-(id)cr_insertionSortedArrayUsingComparator:(/*^block*/ id)arg1 ;
-(id)mf_dictionaryWithMessagesSortedByStore;
-(unsigned long long)mf_indexWhereObjectWouldBeInserted:(id)arg1 usingSortFunction:(/*function pointer*/ void*)arg2 context:(void*)arg3 ;
-(id)mf_objectEquivalentTo:(id)arg1 usingSortFunction:(/*function pointer*/ void*)arg2 context:(void*)arg3 ;
-(unsigned long long)mf_indexOfObject:(id)arg1 usingComparator:(/*^block*/ id)arg2 ;
-(id)mf_objectEquivalentTo:(id)arg1 usingComparator:(/*^block*/ id)arg2 ;
-(unsigned long long)mf_indexWhereObjectWouldBeInserted:(id)arg1 usingComparator:(/*^block*/ id)arg2 ;
-(unsigned long long)mf_indexOfObject:(id)arg1 usingSortFunction:(/*function pointer*/ void*)arg2 context:(void*)arg3 ;
-(id)mf_indicesOfStringsWithPrefix:(id)arg1 ;
-(id)mf_objectsPassingTest:(/*^block*/ id)arg1 ;
-(id)mf_uncommentedAddressList;
-(id)_gkOrderedSet;
-(id)_gkMapDictionaryWithKeyPath:(id)arg1 valueKeyPath:(id)arg2 ;
-(id)_gkDistinctValuesForKeyPath:(id)arg1 ;
-(id)_gkFirstObject;
-(id)_gkMapConcurrentlyWithBlock:(/*^block*/ id)arg1 ;
-(id)_gkFilterWithBlock:(/*^block*/ id)arg1 ;
-(id)_gkMapWithBlock:(/*^block*/ id)arg1 ;
-(id)_gkValuesForKeyPath:(id)arg1 ;
-(id)_gkMapDictionaryWithKeyPath:(id)arg1 ;
-(bool)ICSContainsArray:(id)arg1 ;
-(void)_ICSStringWithOptions:(unsigned long long)arg1 appendingToString:(id)arg2 ;
-(void)_ICSParametersAppendingToString:(id)arg1 ;
-(void)_ICSStringsForPropertyValuesWithOptions:(unsigned long long)arg1 appendingToString:(id)arg2 ;
-(id)specifierForID:(id)arg1 ;
-(bool)MPIsEmpty;
-(id)subarraysOfSize:(unsigned long long)arg1 ;
-(id)_scrambledKeywordsAndAddToSet:(id)arg1 ;
-(id)_nextKeywordUsingCursors:(CFDictionaryRef)arg1 ;
-(id)assetForIdentifier:(id)arg1 ;
-(id)_FTFilteredArrayForAPS;
-(id)_IDsFromURIs;
-(id)_URIsFromIDs;
-(id)_sa_mappedArrayWithBlock:(/*^block*/ id)arg1 ;
-(id)_ui_onlyObject;
-(id)_ui_firstObject;
-(id)_filteredArrayOfObjectsPassingTest:(/*^block*/ id)arg1 ;
-(id)_initWithObjectsFromArray:(id)arg1 range:(NSRange)arg2 ;
-(void)_makeObjectsPerformSelector:(SEL)arg1 object:(id)arg2 range:(NSRange)arg3 ;
-(id)_nextToLastObject;
-(CGSize)_legacy_drawComponentsJoinedByString:(id)arg1 atPoint:(CGPoint*)arg2 forWidth:(double)arg3 withFont:(id)arg4 lineBreakMode:(long long)arg5 ;
-(id)firstPath;
-(id)_webkit_stringAtIndex:(unsigned long long)arg1 ;
-(id)_webkit_numberAtIndex:(unsigned long long)arg1 ;
-(id)_web_lowercaseStrings;
-(bool)containsObjectIdenticalTo:(id)arg1 ;
-(id)_copyForEnumerating;
-(id)__imArrayByApplyingBlock:(/*^block*/ id)arg1 ;
-(id)__imSetFromArray;
-(bool)__imIsMutable;
-(bool)_hasSameMembers:(id)arg1 ;
-(id)__imArrayByFilteringWithBlock:(/*^block*/ id)arg1 ;
-(id)__imFirstObject;
-(long long)indexOfObject:(id)arg1 matchingComparison:(SEL)arg2 ;
-(id)__imDeepCopy;
-(bool)containsObject:(id)arg1 matchingComparison:(SEL)arg2 ;
-(void)__imForEach:(/*^block*/ id)arg1 ;
-(id)__imArrayByApplyingBlock:(/*^block*/ id)arg1 filter:(/*^block*/ id)arg2 ;
-(id)_arrayByFilteringCandidatesForNonExtendedView;
-(id)pickableRouteWithUID:(id)arg1 ;
-(void)encodeWithCAMLWriter:(id)arg1 ;
-(id)CAMLType;
-(id)CA_interpolateValues:(id)arg1 :(id)arg2 :(id)arg3 interpolator:(const ValueInterpolator*)arg4 ;
-(id)CA_addValue:(id)arg1 multipliedBy:(int)arg2 ;
-(id)CA_interpolateValue:(id)arg1 byFraction:(float)arg2 ;
-(id)cutFirstObject;
-(id)replacementObjectForPortCoder:(id)arg1 ;
-(id)filteredArrayUsingPredicate:(id)arg1 ;
-(id)sortedArrayUsingDescriptors:(id)arg1 ;
-(id)pathsMatchingExtensions:(id)arg1 ;
-(id)stringsByAppendingPathComponent:(id)arg1 ;
-(void)addObserver:(id)arg1 toObjectsAtIndexes:(id)arg2 forKeyPath:(id)arg3 options:(unsigned long long)arg4 context:(void*)arg5 ;
-(void)removeObserver:(id)arg1 fromObjectsAtIndexes:(id)arg2 forKeyPath:(id)arg3 context:(void*)arg4 ;
-(void)removeObserver:(id)arg1 fromObjectsAtIndexes:(id)arg2 forKeyPath:(id)arg3 ;
-(void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void*)arg4 ;
-(void)removeObserver:(id)arg1 forKeyPath:(id)arg2 context:(void*)arg3 ;
-(void)removeObserver:(id)arg1 forKeyPath:(id)arg2 ;
-(id)_valueForKeyPath:(id)arg1 ofObjectAtIndex:(unsigned long long)arg2 ;
-(id)_mutableArrayValueForKeyPath:(id)arg1 ofObjectAtIndex:(unsigned long long)arg2 ;
-(id)_mutableOrderedSetValueForKeyPath:(id)arg1 ofObjectAtIndex:(unsigned long long)arg2 ;
-(id)_mutableSetValueForKeyPath:(id)arg1 ofObjectAtIndex:(unsigned long long)arg2 ;
-(void)_setValue:(id)arg1 forKeyPath:(id)arg2 ofObjectAtIndex:(unsigned long long)arg3 ;
-(bool)_validateValue:(inout id*)arg1 forKeyPath:(id)arg2 ofObjectAtIndex:(unsigned long long)arg3 error:(out id*)arg4 ;
-(id)_sumForKeyPath:(id)arg1 ;
-(id)_unionOfArraysForKeyPath:(id)arg1 ;
-(id)_unionOfObjectsForKeyPath:(id)arg1 ;
-(id)_avgForKeyPath:(id)arg1 ;
-(id)_countForKeyPath:(id)arg1 ;
-(id)_maxForKeyPath:(id)arg1 ;
-(id)_minForKeyPath:(id)arg1 ;
-(id)_unionOfSetsForKeyPath:(id)arg1 ;
-(id)_distinctUnionOfArraysForKeyPath:(id)arg1 ;
-(id)_distinctUnionOfObjectsForKeyPath:(id)arg1 ;
-(id)_distinctUnionOfSetsForKeyPath:(id)arg1 ;
-(void)setValue:(id)arg1 forKey:(id)arg2 ;
-(id)valueForKey:(id)arg1 ;
-(id)valueForKeyPath:(id)arg1 ;
-(id)sortedArrayUsingFunction:(/*function pointer*/ void*)arg1 context:(void*)arg2 hint:(id)arg3 ;
-(id)_stringToWrite;
-(id)sortedArrayHint;
-(id)sortedArrayUsingSelector:(SEL)arg1 hint:(id)arg2 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)debugDescription;
-(bool)writeToFile:(id)arg1 atomically:(bool)arg2 ;
-(bool)writeToURL:(id)arg1 atomically:(bool)arg2 ;
-(Class)classForCoder;
-(id)initWithContentsOfFile:(id)arg1 ;
-(id)initWithContentsOfURL:(id)arg1 ;
-(bool)isNSArray__;
-(id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2 ;
-(unsigned long long)indexOfObjectWithOptions:(unsigned long long)arg1 passingTest:(/*^block*/ id)arg2 ;
-(unsigned long long)indexOfObjectAtIndexes:(id)arg1 options:(unsigned long long)arg2 passingTest:(/*^block*/ id)arg3 ;
-(id)indexesOfObjectsWithOptions:(unsigned long long)arg1 passingTest:(/*^block*/ id)arg2 ;
-(id)indexesOfObjectsAtIndexes:(id)arg1 options:(unsigned long long)arg2 passingTest:(/*^block*/ id)arg3 ;
-(void)getObjects:(id*)arg1 ;
-(id)objectsWithOptions:(unsigned long long)arg1 passingTest:(/*^block*/ id)arg2 ;
-(id)initWithSet:(id)arg1 copyItems:(bool)arg2 ;
-(id)initWithArray:(id)arg1 range:(NSRange)arg2 copyItems:(bool)arg3 ;
-(id)initWithOrderedSet:(id)arg1 copyItems:(bool)arg2 ;
-(unsigned long long)countForObject:(id)arg1 ;
-(unsigned long long)_cfTypeID;
-(bool)_hasObjects;
-(bool)_hasStrongReferences;
-(id)objectWithOptions:(unsigned long long)arg1 passingTest:(/*^block*/ id)arg2 ;
-(id)sortedArrayFromRange:(NSRange)arg1 options:(unsigned long long)arg2 usingComparator:(/*^block*/ id)arg3 ;
-(id)initWithOrderedSet:(id)arg1 range:(NSRange)arg2 copyItems:(bool)arg3 ;
-(bool)containsObject:(id)arg1 inRange:(NSRange)arg2 ;
-(bool)containsObjectIdenticalTo:(id)arg1 inRange:(NSRange)arg2 ;
-(bool)containsObjectIdenticalTo:(id)arg1 ;
-(unsigned long long)countForObject:(id)arg1 inRange:(NSRange)arg2 ;
-(id)firstObjectCommonWithArray:(id)arg1 ;
-(id)indexesOfObject:(id)arg1 inRange:(NSRange)arg2 ;
-(id)indexesOfObject:(id)arg1 ;
-(id)indexesOfObjectIdenticalTo:(id)arg1 inRange:(NSRange)arg2 ;
-(id)indexesOfObjectIdenticalTo:(id)arg1 ;
-(id)objectAtIndexes:(id)arg1 options:(unsigned long long)arg2 passingTest:(/*^block*/ id)arg3 ;
-(id)objectPassingTest:(/*^block*/ id)arg1 ;
-(id)objectsAtIndexes:(id)arg1 options:(unsigned long long)arg2 passingTest:(/*^block*/ id)arg3 ;
-(id)reversedArray;
-(id)initWithArray:(id)arg1 range:(NSRange)arg2 ;
-(id)initWithOrderedSet:(id)arg1 range:(NSRange)arg2 ;
-(id)arrayByApplyingSelector:(SEL)arg1 ;
-(id)arrayByExcludingToObjectsInArray:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(unsigned long long)countByEnumeratingWithState:(SCD_Struct_NS16*)arg1 objects:(id*)arg2 count:(unsigned long long)arg3 ;
-(void)encodeWithCoder:(id)arg1 ;
-(unsigned long long)count;
-(id)objectAtIndex:(unsigned long long)arg1 ;
-(void)makeObjectsPerformSelector:(SEL)arg1 ;
-(id)firstObject;
-(id)lastObject;
-(id)objectAtIndexedSubscript:(unsigned long long)arg1 ;
-(void)enumerateObjectsUsingBlock:(/*^block*/ id)arg1 ;
-(unsigned long long)indexOfObject:(id)arg1 ;
-(bool)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(id)subarrayWithRange:(NSRange)arg1 ;
-(id)componentsJoinedByString:(id)arg1 ;
-(bool)containsObject:(id)arg1 ;
-(id)initWithObjects:(id)arg1 ;
-(id)reverseObjectEnumerator;
-(void)makeObjectsPerformSelector:(SEL)arg1 withObject:(id)arg2 ;
-(id)copyWithZone:(NSZone)arg1 ;
-(id)objectEnumerator;
-(id)arrayByAddingObjectsFromArray:(id)arg1 ;
-(unsigned long long)indexOfObjectIdenticalTo:(id)arg1 ;
-(id)indexesOfObjectsPassingTest:(/*^block*/ id)arg1 ;
-(id)objectsPassingTest:(/*^block*/ id)arg1 ;
-(id)objectsAtIndexes:(id)arg1 ;
-(void)enumerateObjectsWithOptions:(unsigned long long)arg1 usingBlock:(/*^block*/ id)arg2 ;
-(id)allObjects;
-(void)getObjects:(id*)arg1 range:(NSRange)arg2 ;
-(id)initWithObjects:(const id*)arg1 count:(unsigned long long)arg2 ;
-(id)arrayByAddingObject:(id)arg1 ;
-(bool)isEqualToArray:(id)arg1 ;
-(id)sortedArrayUsingSelector:(SEL)arg1 ;
-(id)sortedArrayUsingFunction:(/*function pointer*/ void*)arg1 context:(void*)arg2 ;
-(unsigned long long)indexOfObjectPassingTest:(/*^block*/ id)arg1 ;
-(id)initWithArray:(id)arg1 ;
-(id)mutableCopyWithZone:(NSZone)arg1 ;
-(id)arrayByExcludingObjectsInArray:(id)arg1 ;
-(id)sortedArrayUsingComparator:(/*^block*/ id)arg1 ;
-(unsigned long long)indexOfObject:(id)arg1 inSortedRange:(NSRange)arg2 options:(unsigned long long)arg3 usingComparator:(/*^block*/ id)arg4 ;
-(id)initWithArray:(id)arg1 copyItems:(bool)arg2 ;
-(id)initWithObject:(id)arg1 ;
-(id)initWithSet:(id)arg1 ;
-(void)enumerateObjectsAtIndexes:(id)arg1 options:(unsigned long long)arg2 usingBlock:(/*^block*/ id)arg3 ;
-(unsigned long long)indexOfObject:(id)arg1 inRange:(NSRange)arg2 ;
-(unsigned long long)indexOfObjectIdenticalTo:(id)arg1 inRange:(NSRange)arg2 ;
-(id)descriptionWithLocale:(id)arg1 ;
-(id)sortedArrayWithOptions:(unsigned long long)arg1 usingComparator:(/*^block*/ id)arg2 ;
-(id)initWithOrderedSet:(id)arg1 ;
@end

