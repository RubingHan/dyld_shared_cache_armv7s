/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:12 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CoreFoundation/CoreFoundation-Structs.h>
#import <CoreFoundation/NSSecureCoding.h>
#import <CoreFoundation/NSCopying.h>
#import <QuickLook/QLPreviewItem.h>

@class NSString;

@interface NSURL : NSObject <NSSecureCoding, NSCopying, QLPreviewItem> {

	NSString* _urlString;
	NSURL* _baseURL;
	void* _clients;
	void* _reserved;

}

@property (readonly) NSURL * previewItemURL; 
@property (readonly) NSString * previewItemTitle; 
@property (readonly) NSString * phoneNumber; 
@property (readonly) int addressBookUID; 
@property (readonly) bool forceAssist; 
@property (readonly) bool suppressAssist; 
@property (readonly) bool wasAlreadyAssisted; 
@property (readonly) int callService; 
+(id)URLWithScheme:(id)arg1 host:(id)arg2 port:(int)arg3 uri:(id)arg4 ;
+(id)URLWithDirtyString:(id)arg1 ;
+(int)classicPortForScheme:(id)arg1 ;
+(id)davCompatibleFilenameForFilename:(id)arg1 ;
+(id)iDiskSmallNameCompatibleNameForFilename:(id)arg1 ;
+(id)URLWithScheme:(id)arg1 host:(id)arg2 port:(int)arg3 uri:(id)arg4 ;
+(id)URLWithDirtyString:(id)arg1 ;
+(int)classicPortForScheme:(id)arg1 ;
+(id)URLWithScheme:(id)arg1 host:(id)arg2 user:(id)arg3 port:(int)arg4 uri:(id)arg5 ;
+(id)ab_URLWithTelephoneNumber:(id)arg1 addressBookUID:(int)arg2 ;
+(id)ab_faceTimeURLWithDestinationID:(id)arg1 ;
+(id)CDVURLWithScheme:(id)arg1 user:(id)arg2 password:(id)arg3 host:(id)arg4 port:(id)arg5 path:(id)arg6 ;
+(id)CDVURLWithScheme:(id)arg1 host:(id)arg2 port:(id)arg3 path:(id)arg4 ;
+(id)CDVDefaultPortForScheme:(id)arg1 ;
+(id)unescapedStringForString:(id)arg1 ;
+(id)escapedStringForString:(id)arg1 ;
+(id)copyDictionaryForQueryString:(id)arg1 unescapedValues:(bool)arg2 ;
+(id)queryStringForDictionary:(id)arg1 escapedValues:(bool)arg2 ;
+(id)gs_fileURLWithFileSystemRepresentation:(const char*)arg1 ;
+(id)mapsURLWithQuery:(id)arg1 ;
+(id)mapsURLWithAddress:(id)arg1 ;
+(id)mapsURLWithSourceAddress:(id)arg1 destinationAddress:(id)arg2 ;
+(id)URLWithDisplayIdentifier:(id)arg1 forSearchResultDomain:(int)arg2 andIdentifier:(unsigned long long)arg3 ;
+(id)_web_URLWithUserTypedString:(id)arg1 ;
+(id)uniqueURLWithRelativePart:(id)arg1 ;
+(id)_web_URLWithUserTypedString:(id)arg1 relativeToURL:(id)arg2 ;
+(id)_web_URLWithData:(id)arg1 ;
+(id)_web_URLWithData:(id)arg1 relativeToURL:(id)arg2 ;
+(id)_web_URLWithDataAsString:(id)arg1 ;
+(id)_web_URLWithDataAsString:(id)arg1 relativeToURL:(id)arg2 ;
+(id)_web_uniqueWebDataURL;
+(id)URLWithTelephoneNumber:(id)arg1 addressBookUID:(int)arg2 ;
+(id)URLWithTelephoneNumber:(id)arg1 ;
+(id)URLWithTelephoneNumber:(id)arg1 promptUser:(bool)arg2 ;
+(id)URLWithTelephoneNumber:(id)arg1 addressBookUID:(int)arg2 forceAssist:(bool)arg3 suppressAssist:(bool)arg4 wasAssisted:(bool)arg5 ;
+(id)faceTimeURLWithPhoneNumber:(id)arg1 addressBookUID:(int)arg2 forceAssist:(bool)arg3 suppressAssist:(bool)arg4 wasAssisted:(bool)arg5 ;
+(id)faceTimeURLWithPhoneNumber:(id)arg1 addressBookUID:(int)arg2 audioOnly:(bool)arg3 forceAssist:(bool)arg4 suppressAssist:(bool)arg5 wasAssisted:(bool)arg6 ;
+(id)faceTimeURLWithDestinationID:(id)arg1 addressBookUID:(int)arg2 audioOnly:(bool)arg3 ;
+(id)faceTimeURLWithDestinationID:(id)arg1 ;
+(id)faceTimePromptURLWithURL:(id)arg1 ;
+(id)faceTimeURLWithURL:(id)arg1 ;
+(id)faceTimeURLWithDestinationID:(id)arg1 addressBookUID:(int)arg2 ;
+(id)_faceTimeURLWithDestinationID:(id)arg1 addressBookUID:(int)arg2 audioOnly:(bool)arg3 ;
+(id)_applyFaceTimeScheme:(id)arg1 toFaceTimeURL:(id)arg2 ;
+(id)faceTimeAcceptURLWithURL:(id)arg1 conferenceID:(id)arg2 ;
+(id)faceTimeAcceptURLWithURL:(id)arg1 ;
+(id)_URLWithDataAsString:(id)arg1 relativeToURL:(id)arg2 ;
+(id)_URLWithData:(id)arg1 relativeToURL:(id)arg2 ;
+(id)_web_URLWithString:(id)arg1 relativeToURL:(id)arg2 ;
+(id)_web_URLWithComponents:(SCD_Struct_NS19)arg1 ;
+(bool)automaticallyNotifiesObserversForKey:(id)arg1 ;
+(id)fileURLWithPathComponents:(id)arg1 ;
+(id)fileURLWithFileSystemRepresentation:(const char*)arg1 isDirectory:(bool)arg2 relativeToURL:(id)arg3 ;
+(id)fileURLWithPath:(id)arg1 ;
+(id)URLWithString:(id)arg1 ;
+(id)allocWithZone:(NSZone)arg1 ;
+(id)URLWithString:(id)arg1 relativeToURL:(id)arg2 ;
+(id)fileURLWithPath:(id)arg1 isDirectory:(bool)arg2 ;
+(id)URLByResolvingBookmarkData:(id)arg1 options:(unsigned long long)arg2 relativeToURL:(id)arg3 bookmarkDataIsStale:(bool*)arg4 error:(id*)arg5 ;
+(id)resourceValuesForKeys:(id)arg1 fromBookmarkData:(id)arg2 ;
+(bool)writeBookmarkData:(id)arg1 toURL:(id)arg2 options:(unsigned long long)arg3 error:(id*)arg4 ;
+(id)bookmarkDataWithContentsOfURL:(id)arg1 error:(id*)arg2 ;
+(bool)supportsSecureCoding;
-(bool)isEqualToURL:(id)arg1 ;
-(id)queryParameters;
-(id)unquotedPassword;
-(id)lastRawPathComponent;
-(id)serverURL;
-(id)initWithDirtyString:(id)arg1 ;
-(id)URLWithoutPassword;
-(bool)absoluteURLisEqual:(id)arg1 ;
-(id)URLWithoutUsername;
-(id)URLWithUsername:(id)arg1 ;
-(id)uri;
-(bool)isEqualToURL:(id)arg1 ;
-(id)lastPathComponent;
-(id)initWithScheme:(id)arg1 host:(id)arg2 port:(int)arg3 path:(id)arg4 ;
-(id)pathWithoutDecodingAndRemovingTrailingSlash;
-(id)queryParameters;
-(id)URLWithUsername:(id)arg1 withPassword:(id)arg2 ;
-(id)URLByRemovingLastPathComponent;
-(id)unquotedPassword;
-(id)serverURL;
-(id)pathWithoutTrailingRemovingSlash;
-(id)mf_lastPartNumber;
-(unsigned)mf_rowID;
-(bool)mf_isValidAttachmentURL;
-(id)mf_partNumbers;
-(id)mf_firstPartNumber;
-(id)leastInfoStringRepresentationRelativeToParentURL:(id)arg1 ;
-(id)urlBySettingScheme:(id)arg1 keepUsername:(bool)arg2 ;
-(id)urlBySettingHost:(id)arg1 keepUsername:(bool)arg2 ;
-(id)urlBySettingPort:(id)arg1 keepUsername:(bool)arg2 ;
-(id)urlBySettingPath:(id)arg1 keepUsername:(bool)arg2 ;
-(id)urlByRemovingUsername;
-(id)urlBySettingScheme:(id)arg1 ;
-(id)urlBySettingHost:(id)arg1 ;
-(id)urlBySettingPort:(id)arg1 ;
-(id)urlBySettingPath:(id)arg1 ;
-(bool)isEqualToDAVURL:(id)arg1 ;
-(id)rawPath;
-(id)urlBySettingUsername:(id)arg1 ;
-(id)pathWithoutTrailingRemovingSlash;
-(id)URLWithUsername:(id)arg1 withPassword:(id)arg2 ;
-(id)URLWithoutUsername;
-(id)URLWithUsername:(id)arg1 ;
-(id)URLByRemovingLastPathComponent;
-(id)uri;
-(id)CNFQueryDictionary;
-(id)URLByAppendingCNFQueryDictionary:(id)arg1 ;
-(id)previewItemURL;
-(bool)_webBookmarks_isHTTPFamilyURL;
-(id)CDVServerURL;
-(id)CDVRawPath;
-(id)CDVfixedURLByAppendingPathComponent:(id)arg1 ;
-(id)CDVRawLastPathComponent;
-(id)CDVURLWithUser:(id)arg1 ;
-(id)CDVURLWithPassword:(id)arg1 ;
-(bool)CDVIsSafeRedirectForRequestURL:(id)arg1 ;
-(id)initWithCDVScheme:(id)arg1 user:(id)arg2 password:(id)arg3 host:(id)arg4 port:(id)arg5 path:(id)arg6 parameterString:(id)arg7 query:(id)arg8 fragment:(id)arg9 ;
-(id)CDVURLWithScheme:(id)arg1 userandpass:(id)arg2 host:(id)arg3 port:(id)arg4 path:(id)arg5 parameters:(id)arg6 encodePercents:(bool)arg7 ;
-(id)CDVPassword;
-(id)CDVURLWithPath:(id)arg1 ;
-(id)CDVURLByDeletingLastPathComponent;
-(id)CDVServerURLWithPath:(bool)arg1 ;
-(bool)CDVIsEqualToURL:(id)arg1 ;
-(id)CDVFileSystemSafePath;
-(bool)_gkIsValidServerURL;
-(bool)_gkIsSecure;
-(id)_gkURLByReplacingSchemeWithScheme:(id)arg1 ;
-(id)_gkQueryDictionary;
-(id)_gkURLByAddingQueryParameters:(id)arg1 ;
-(id)cacheKeyRepresentation;
-(void)_ICSStringWithOptions:(unsigned long long)arg1 appendingToString:(id)arg2 ;
-(bool)isAMOSIdentifier;
-(bool)isAMOSCommittedIdentifier;
-(id)sanitizedURL;
-(id)URLByAppendingQueryParameter:(id)arg1 value:(id)arg2 ;
-(id)urlBySettingQueryStringDictionary:(id)arg1 ;
-(id)urlByReplacingSchemeWithScheme:(id)arg1 ;
-(void)enumerateQueryWithBlock:(/*^block*/ id)arg1 ;
-(id)copyQueryStringDictionaryWithUnescapedValues:(bool)arg1 ;
-(bool)isSafeExternalURL;
-(id)schemeSwizzledURL;
-(const char*)gs_fileSystemRepresentation;
-(void)attachSandboxExtension:(id)arg1 ;
-(bool)isInternalUIKitURL;
-(id)searchResultIdentifier;
-(id)searchResultDomain;
-(void)_domain:(id*)arg1 subdomain:(id*)arg2 ;
-(bool)_isGoogleMapsDomain:(id)arg1 subdomain:(id)arg2 path:(id)arg3 queryKeysAndValues:(id)arg4 ;
-(bool)isGoogleMapsURL;
-(id)phobosURL;
-(id)itmsURL;
-(id)appleStoreURL;
-(id)radarWebURL;
-(bool)isSpringboardHandledURL;
-(bool)isWebcalURL;
-(bool)isAccountURL;
-(bool)isJavaScriptURL;
-(bool)isHTTPOrHTTPSURL;
-(id)_web_userVisibleString;
-(id)_webkit_URLByRemovingFragment;
-(id)_webkit_URLFromURLOrSchemelessFileURL;
-(id)_webkit_youTubeURL;
-(bool)_webkit_isJavaScriptURL;
-(bool)_webkit_isFileURL;
-(bool)_webkit_isFTPDirectoryURL;
-(bool)_web_isEmpty;
-(id)_web_schemeData;
-(id)_web_hostData;
-(id)_web_originalData;
-(const char*)_web_URLCString;
-(id)_web_URLByTruncatingOneCharacterBeforeComponent:(long long)arg1 ;
-(id)_webkit_URLByRemovingResourceSpecifier;
-(id)_web_URLByRemovingUserInfo;
-(bool)_webkit_shouldLoadAsEmptyDocument;
-(id)_web_URLWithLowercasedScheme;
-(id)_web_schemeSeparatorWithoutColon;
-(id)_web_dataForURLComponentType:(long long)arg1 ;
-(id)_webkit_suggestedFilenameWithMIMEType:(id)arg1 ;
-(id)_webkit_scriptIfJavaScriptURL;
-(id)_webkit_canonicalize;
-(id)_web_originalDataAsString;
-(id)_web_hostString;
-(bool)hasTelephonyScheme;
-(id)phoneNumber;
-(int)addressBookUID;
-(int)callService;
-(id)formattedPhoneNumber;
-(id)_phoneNumberConvertNumbersToLatin:(bool)arg1 ;
-(id)_mobilePhoneQueryParameters;
-(id)_mobilePhonePathParameters;
-(bool)forceAssist;
-(bool)suppressAssist;
-(bool)wasAlreadyAssisted;
-(id)numberQualifiedForAddressBook;
-(bool)isWebSafeTelephoneURL;
-(id)webSafeTelephoneURL;
-(id)telephonyParameterDictionary;
-(bool)isFaceTimeURL;
-(id)faceTimeDestinationAccount;
-(bool)_isPhoneNumberID:(id)arg1 ;
-(bool)isFaceTimeAcceptURL;
-(bool)isFaceTimePromptURL;
-(bool)isValidFaceTimeURL;
-(bool)isFaceTimeAudioURL;
-(bool)isFaceTimeAudioAcceptURL;
-(bool)isFaceTimeAudioPromptURL;
-(bool)isUpgradeURL;
-(id)queryParameters;
-(id)URLWithNewQueryParameterDictionary:(id)arg1 ;
-(id)URLBySettingQueryParameterValue:(id)arg1 forKey:(id)arg2 ;
-(id)URLByDeletingQueryParameterWithKey:(id)arg1 ;
-(void)encodeWithCAMLWriter:(id)arg1 ;
-(id)CAMLType;
-(id)initWithXPCEncoding:(id)arg1 ;
-(id)copyXPCEncoding;
-(bool)isStoreServicesURL;
-(id)youTubeURL;
-(id)gamecenterURL;
-(id)fmfURL;
-(id)fmipURL;
-(id)photosURL;
-(id)facebookURL;
-(bool)isiWorkURL;
-(bool)conformsToOverridePatternWithKey:(id)arg1 ;
-(id)iWorkApplicationName;
-(id)iWorkDocumentName;
-(id)iTunesStoreURL;
-(id)mapsURL;
-(id)_geo_portionAfterHostname;
-(id)_hostString;
-(id)_web_URLByRemovingLastPathComponent_nowarn;
-(id)_web_URLByRemovingUserAndPath_nowarn;
-(id)_web_URLByRemovingUserAndQueryAndFragment_nowarn;
-(id)_URLByEscapingSpacesAndControlChars;
-(bool)_web_isJavaScriptURL;
-(SCD_Struct_NS19)_web_URLComponents;
-(id)_web_scriptIfJavaScriptURL;
-(id)_web_suggestedFilenameWithMIMEType:(id)arg1 ;
-(id)URLByStandardizingPath;
-(id)URLByResolvingSymlinksInPath;
-(id)pathComponents;
-(id)URLByAppendingPathComponent:(id)arg1 isDirectory:(bool)arg2 ;
-(id)lastPathComponent;
-(id)pathExtension;
-(id)URLByDeletingLastPathComponent;
-(id)URLByDeletingPathExtension;
-(id)URLByAppendingPathExtension:(id)arg1 ;
-(id)URLByAppendingPathComponent:(id)arg1 ;
-(unsigned long long)_cfTypeID;
-(id)user;
-(id)password;
-(id)parameterString;
-(CFURLRef)_cfurl;
-(void)_freeClients;
-(bool)_isAbsolute;
-(id)initFileURLWithFileSystemRepresentation:(const char*)arg1 isDirectory:(bool)arg2 relativeToURL:(id)arg3 ;
-(CFDictionaryRef)_clientsCreatingIfNecessary:(bool)arg1 ;
-(id)_relativeURLPath;
-(id)initWithScheme:(id)arg1 host:(id)arg2 path:(id)arg3 ;
-(oneway void)release;
-(id)retain;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)init;
-(bool)isKindOfClass:(Class)arg1 ;
-(bool)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(bool)isMemberOfClass:(Class)arg1 ;
-(unsigned long long)retainCount;
-(id)description;
-(id)scheme;
-(bool)isFileURL;
-(id)query;
-(const char*)fileSystemRepresentation;
-(id)path;
-(id)initFileURLWithPath:(id)arg1 isDirectory:(bool)arg2 ;
-(id)copyWithZone:(NSZone)arg1 ;
-(bool)_tryRetain;
-(bool)_isDeallocating;
-(id)initWithString:(id)arg1 ;
-(id)host;
-(id)resourceSpecifier;
-(id)absoluteString;
-(id)fragment;
-(id)initFileURLWithPath:(id)arg1 ;
-(id)baseURL;
-(id)relativeString;
-(bool)getFileSystemRepresentation:(char*)arg1 maxLength:(unsigned long long)arg2 ;
-(id)absoluteURL;
-(id)standardizedURL;
-(id)initWithString:(id)arg1 relativeToURL:(id)arg2 ;
-(void)finalize;
-(id)port;
-(id)relativePath;
-(bool)_isSafeFileForBackgroundUpload:(int)arg1 ;
-(bool)_isSafeDirectoryForDownloads:(int)arg1 ;
-(bool)isFileReferenceURL;
-(id)initByResolvingBookmarkData:(id)arg1 options:(unsigned long long)arg2 relativeToURL:(id)arg3 bookmarkDataIsStale:(bool*)arg4 error:(id*)arg5 ;
-(void)removeCachedResourceValueForKey:(id)arg1 ;
-(void)removeAllCachedResourceValues;
-(void)setTemporaryResourceValue:(id)arg1 forKey:(id)arg2 ;
-(bool)checkResourceIsReachableAndReturnError:(id*)arg1 ;
-(id)filePathURL;
-(id)bookmarkDataWithOptions:(unsigned long long)arg1 includingResourceValuesForKeys:(id)arg2 relativeToURL:(id)arg3 error:(id*)arg4 ;
-(id)bookmarkDataWithAliasRecord:(id)arg1 ;
-(bool)getResourceValue:(out id*)arg1 forKey:(id)arg2 error:(out id*)arg3 ;
-(id)resourceValuesForKeys:(id)arg1 error:(id*)arg2 ;
-(id)fileReferenceURL;
-(bool)setResourceValues:(id)arg1 error:(id*)arg2 ;
-(bool)setResourceValue:(id)arg1 forKey:(id)arg2 error:(id*)arg3 ;
@end

