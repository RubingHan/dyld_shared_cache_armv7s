/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:12 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <CoreFoundation/CoreFoundation-Structs.h>
@interface NSInvocation : NSObject {

	void* _frame;
	void* _retdata;
	id _signature;
	id _container;
	unsigned char _retainedArgs;
	unsigned char _reserved[15];

}
+(id)mf_invocationWithSelector:(SEL)arg1 target:(id)arg2 object:(id)arg3 ;
+(id)mf_invocationWithSelector:(SEL)arg1 target:(id)arg2 ;
+(id)mf_invocationWithSelector:(SEL)arg1 target:(id)arg2 object1:(id)arg3 object2:(id)arg4 ;
+(id)_gkInvocationWithBlock:(id)arg1 ;
+(id)_invocationWithMethodSignature:(id)arg1 frame:(void*)arg2 ;
+(id)invocationWithMethodSignature:(id)arg1 ;
-(bool)mf_shouldLogInvocation;
-(void)_gkPrepareForCallWithError:(id)arg1 ;
-(void)_gkInvokeOnce;
-(void)_gkClearTarget;
-(void)_gkPrintBlockSignature;
-(void)_gkCopyArguments;
-(void)_gkClearCopiedArguments;
-(id)_gkReplyHandlerInvocation;
-(void)_gkCallbackWithError:(id)arg1 queue:(id)arg2 ;
-(void)__gkPrepareForFakeCallbackWithNoData:(bool)arg1 orError:(id)arg2 ;
-(void)_gkClearArgumentAtIndex:(unsigned long long)arg1 ;
-(void)_gkInvokeOnceWithTarget:(id)arg1 ;
-(bool)_gkHasReplyBlock;
-(long long)_firstXPCProxyReplyHandlerArgumentIndex;
-(void)_webkit_invokeAndHandleException:(id)arg1 ;
-(bool)wantsReturnValue;
-(id)userInfo;
-(void)setUserInfo:(id)arg1 ;
-(id)debugDescription;
-(bool)argumentsRetained;
-(void)_addAttachedObject:(id)arg1 ;
-(void)invokeSuper;
-(void)dealloc;
-(id)init;
-(void)setArgument:(void*)arg1 atIndex:(long long)arg2 ;
-(void)invoke;
-(void)setTarget:(id)arg1 ;
-(void)setSelector:(SEL)arg1 ;
-(id)copyWithZone:(NSZone)arg1 ;
-(id)target;
-(void)retainArguments;
-(SEL)selector;
-(void)invokeWithTarget:(id)arg1 ;
-(void)getReturnValue:(void*)arg1 ;
-(id)methodSignature;
-(void)getArgument:(void*)arg1 atIndex:(long long)arg2 ;
-(void)setReturnValue:(void*)arg1 ;
-(void)invokeUsingIMP:(/*function pointer*/ void*)arg1 ;
@end

