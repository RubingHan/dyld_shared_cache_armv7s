/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:11 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CoreFoundation/CoreFoundation-Structs.h>
#import <CoreFoundation/NSCopying.h>
#import <CoreFoundation/NSMutableCopying.h>
#import <CoreFoundation/NSSecureCoding.h>
#import <DAEAS/ASParsingLeafNode.h>

@class NSString;

@interface NSData : NSObject <NSCopying, NSMutableCopying, NSSecureCoding, ASParsingLeafNode>

@property (nonatomic,readonly) NSData * SHA1Data; 
@property (nonatomic,readonly) NSString * SHA1HexString; 
+(bool)expectsContent;
+(bool)acceptsTopLevelLeaves;
+(bool)parsingLeafNode;
+(bool)parsingWithSubItems;
+(bool)frontingBasicTypes;
+(bool)notifyOfUnknownTokens;
+(id)dataWithHexString:(id)arg1 stringIsUppercase:(bool)arg2 ;
+(id)dataWithHexString:(id)arg1 ;
+(void)_gkLoadRemoteImageDataForURL:(id)arg1 queue:(id)arg2 handler:(/*^block*/ id)arg3 ;
+(id)dataWithSockAddr:(const sockaddr*)arg1 ;
+(id)mappedDataWithContentsOfTemporaryFile:(id)arg1 error:(id*)arg2 ;
+(id)dataForRadioRequestParameters:(id)arg1 isAsynchronousBackgroundRequest:(bool)arg2 error:(id*)arg3 ;
+(id)dataForRadioRequestParameters:(id)arg1 protocolVersion:(int)arg2 isAsynchronousBackgroundRequest:(bool)arg3 error:(id*)arg4 ;
+(id)dataWithRandomBytes:(unsigned long long)arg1 ;
+(id)dataWithHexString:(id)arg1 ;
+(id)MCDataWithHexString:(id)arg1 ;
+(id)MCDataWithCFData:(CFDataRef)arg1 ;
+(id)dataWithContentsOfMappedFile:(id)arg1 ;
+(id)dataWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
+(id)allocWithZone:(NSZone)arg1 ;
+(id)dataWithBytes:(const void*)arg1 length:(unsigned long long)arg2 ;
+(bool)supportsSecureCoding;
+(id)data;
+(id)dataWithContentsOfFile:(id)arg1 ;
+(id)dataWithContentsOfFile:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
+(id)dataWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2 freeWhenDone:(bool)arg3 ;
+(id)dataWithContentsOfURL:(id)arg1 ;
+(id)dataWithData:(id)arg1 ;
+(id)dataWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2 ;
-(unsigned long long)pl_advisoryLength;
-(void)pl_adviceWillNeed;
-(void)pl_adviceDoNotNeed;
-(id)MSInitWithBase64Encoding:(id)arg1 ;
-(id)MSBase64Encoding;
-(id)MSHexString;
-(bool)fastWriteToFile:(id)arg1 ;
-(id)digestForSubCal;
-(id)initWithASParseContext:(id)arg1 root:(id)arg2 parent:(id)arg3 callbackDict:(id)arg4 streamCallbackDict:(id)arg5 lengthUntilEndOfTerminator:(int)arg6 ;
-(int)parsingState;
-(id)initForLengthTokenOfLength:(unsigned long long)arg1 ;
-(id)mf_createAttachmentWithFilename:(id)arg1 UTIType:(id)arg2 ;
-(id)lowercaseHexStringWithoutSpaces;
-(id)uppercaseHexStringWithoutSpaces;
-(id)hexString;
-(id)cr_md5DigestHexString;
-(id)SHA1Hash;
-(id)fileSafeBase64Encoding;
-(id)SHA256Hash;
-(id)hexEncoding;
-(id)mf_MD5Digest;
-(NSRange)mf_rangeOfByteFromSet:(id)arg1 range:(NSRange)arg2 ;
-(id)mf_subdataToIndex:(unsigned long long)arg1 ;
-(id)mf_subdataFromIndex:(unsigned long long)arg1 ;
-(NSRange)mf_rangeOfByteFromSet:(id)arg1 ;
-(NSRange)mf_rangeOfCString:(const char*)arg1 ;
-(NSRange)mf_rangeOfCString:(const char*)arg1 options:(unsigned long long)arg2 ;
-(id)mf_dataByConvertingUnixNewlinesToNetwork;
-(id)mf_locationsOfUnixNewlinesNeedingConversion;
-(id)mf_copyHexString;
-(NSRange)mf_rangeOfRFC822HeaderData;
-(NSRange)mf_rangeOfCString:(const char*)arg1 options:(unsigned long long)arg2 range:(NSRange)arg3 ;
-(NSRange)mf_rangeOfData:(id)arg1 options:(unsigned long long)arg2 range:(NSRange)arg3 ;
-(id)mf_decodeQuotedPrintableForText:(bool)arg1 ;
-(id)mf_decodeUuencoded;
-(id)mf_decodeBase64InRange:(NSRange*)arg1 ;
-(id)mf_encodeBase64HeaderData;
-(id)mf_encodeModifiedBase64;
-(id)mf_decodeModifiedBase64;
-(id)mf_encodeBase64WithoutLineBreaks;
-(id)mf_decodeBase64;
-(id)mf_encodeBase64;
-(bool)mf_immutable;
-(id)mf_subdataWithRange:(NSRange)arg1 ;
-(id)initWithBase64EncodedString_gk:(id)arg1 ;
-(id)_gkBase64EncodedString;
-(id)_gkSHA1HashString;
-(id)_gkMD5HashString;
-(id)_gkSHA1HashData;
-(id)_gkMD5HashData;
-(sockaddr*)sockAddr;
-(bool)CDXTicketIsReflected;
-(bool)CDXTicketIsHolePunch;
-(unsigned long long)CDXTicketRevision;
-(long long)CDXTicketPID;
-(long long)CDXTicketPCNT;
-(id)CDXTicketExpirationDate;
-(const CDXTicket*)CDXTicket;
-(CDXTicket*)mutableCDXTicket;
-(unsigned long long)CDXTicketSID;
-(bool)CDXTicketIsStub;
-(id)CDXTicketTrimmed;
-(bool)CDXTicketWellFormed;
-(bool)CDXTicketIsRelatedToTicket:(id)arg1 ;
-(void)_ICSStringWithOptions:(unsigned long long)arg1 appendingToString:(id)arg2 ;
-(id)decompressedGzipData;
-(id)decompressedGzipDataUsingTemporaryFile;
-(id)ml_stringValueForSQL;
-(void)ml_bindToSQLiteStatement:(sqlite3_stmtRef)arg1 atPosition:(int)arg2 ;
-(id)_FTDecompressData;
-(id)_FTOptionallyDecompressData;
-(id)_FTStringFromBaseData;
-(id)_FTCopyGzippedData;
-(id)propertyListForRadioResponseReturningError:(id*)arg1 ;
-(id)propertyListForRadioResponseReturningError:(id*)arg1 unparsedResponseDictionary:(id*)arg2 ;
-(bool)_web_isCaseInsensitiveEqualToCString:(const char*)arg1 ;
-(id)_webkit_parseRFC822HeaderFields;
-(bool)_web_startsWithBlankLine;
-(long long)_web_locationAfterFirstBlankLine;
-(id)_webkit_guessedMIMETypeForXML;
-(id)_webkit_guessedMIMEType;
-(id)abDecodedUTF7;
-(id)abStringAtRange:(NSRange)arg1 inEncoding:(unsigned long long)arg2 ;
-(bool)abIsUTF16EntourageVCard;
-(id)abEncodeVCardBase64DataWithInitialLength:(unsigned long long)arg1 ;
-(id)abDecodeVCardBase64;
-(id)SHA1HexString;
-(id)SHA1Data;
-(id)hexString;
-(id)hexStringOfBytes:(char*)arg1 withLength:(int)arg2 ;
-(id)MCHexString;
-(id)MCBase64String;
-(id)MCInitWithBase64String:(id)arg1 ;
-(id)_geo_newXPCData;
-(id)replacementObjectForPortCoder:(id)arg1 ;
-(id)_web_guessedMIMETypeForXML;
-(id)_web_guessedMIMEType;
-(id)_web_guessedMIMETypeForExtension:(id)arg1 ;
-(id)_web_parseRFC822HeaderFields;
-(id)_replaceCString:(const char*)arg1 withCString:(const char*)arg2 ;
-(bool)isNSData__;
-(id)replacementObjectForCoder:(id)arg1 ;
-(id)subdataWithRange:(NSRange)arg1 ;
-(id)initWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2 ;
-(NSRange)rangeOfData:(id)arg1 options:(unsigned long long)arg2 range:(NSRange)arg3 ;
-(id)initWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
-(unsigned long long)_cfTypeID;
-(id)initWithBytes:(void*)arg1 length:(unsigned long long)arg2 copy:(bool)arg3 deallocator:(/*^block*/ id)arg4 ;
-(bool)_isDispatchData;
-(id)initWithBytes:(void*)arg1 length:(unsigned long long)arg2 copy:(bool)arg3 freeWhenDone:(bool)arg4 bytesAreVM:(bool)arg5 ;
-(bool)_canReplaceWithDispatchDataForXPCCoder;
-(id)_initWithBase64EncodedCharacterEnumerator:(/*^block*/ id)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3 ;
-(void)enumerateByteRangesUsingBlock:(/*^block*/ id)arg1 ;
-(id)_initWithBase64EncodedObject:(id)arg1 options:(unsigned long long)arg2 ;
-(id)_base64EncodingAsString:(bool)arg1 withOptions:(unsigned long long)arg2 ;
-(id)_asciiDescription;
-(bool)_allowsDirectEncoding;
-(const void*)_bytesIfCompact;
-(id)initWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2 deallocator:(/*^block*/ id)arg3 ;
-(id)initWithContentsOfMappedFile:(id)arg1 error:(id*)arg2 ;
-(id)initWithContentsOfFile:(id)arg1 error:(id*)arg2 ;
-(id)initWithBase64EncodedString:(id)arg1 options:(unsigned long long)arg2 ;
-(id)initWithBase64EncodedData:(id)arg1 options:(unsigned long long)arg2 ;
-(id)base64EncodedDataWithOptions:(unsigned long long)arg1 ;
-(id)initWithBase64Encoding:(id)arg1 ;
-(id)base64Encoding;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(bool)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(unsigned long long)length;
-(bool)writeToFile:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
-(bool)writeToFile:(id)arg1 atomically:(bool)arg2 ;
-(bool)writeToURL:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
-(bool)writeToURL:(id)arg1 atomically:(bool)arg2 ;
-(id)initWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2 freeWhenDone:(bool)arg3 ;
-(const void*)bytes;
-(id)copyWithZone:(NSZone)arg1 ;
-(void)getBytes:(void*)arg1 length:(unsigned long long)arg2 ;
-(Class)classForCoder;
-(id)initWithContentsOfFile:(id)arg1 ;
-(id)initWithData:(id)arg1 ;
-(id)initWithBytes:(const void*)arg1 length:(unsigned long long)arg2 ;
-(id)initWithContentsOfFile:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
-(id)mutableCopyWithZone:(NSZone)arg1 ;
-(id)initWithContentsOfURL:(id)arg1 ;
-(void)getBytes:(void*)arg1 range:(NSRange)arg2 ;
-(id)base64EncodedStringWithOptions:(unsigned long long)arg1 ;
-(bool)writeToFile:(id)arg1 atomically:(bool)arg2 error:(id*)arg3 ;
-(id)initWithContentsOfMappedFile:(id)arg1 ;
-(void)getBytes:(void*)arg1 ;
-(bool)isEqualToData:(id)arg1 ;
@end

