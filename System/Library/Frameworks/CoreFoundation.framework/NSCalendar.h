/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:12 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CoreFoundation/CoreFoundation-Structs.h>
#import <CoreFoundation/NSCopying.h>
#import <CoreFoundation/NSSecureCoding.h>

@interface NSCalendar : NSObject <NSCopying, NSSecureCoding>
+(id)__ck_currentCalendar;
+(id)autoupdatingCurrentCalendar;
+(id)allocWithZone:(NSZone)arg1 ;
+(bool)supportsSecureCoding;
+(void)initialize;
+(id)currentCalendar;
-(unsigned long long)__ck_unitOfDisambiguityFromDate:(id)arg1 toDate:(id)arg2 ;
-(id)_dateOnlyComponentsForDate:(id)arg1 ;
-(id)_timeOnlyComponentsForDate:(id)arg1 ;
-(bool)date:(id)arg1 isSameDayAsDate:(id)arg2 ;
-(bool)date:(id)arg1 isSameYearAsDate:(id)arg2 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(Class)classForCoder;
-(unsigned long long)_cfTypeID;
-(void)setFirstWeekday:(unsigned long long)arg1 ;
-(void)setMinimumDaysInFirstWeek:(unsigned long long)arg1 ;
-(NSRange)minimumRangeOfUnit:(unsigned long long)arg1 ;
-(unsigned long long)ordinalityOfUnit:(unsigned long long)arg1 inUnit:(unsigned long long)arg2 forDate:(id)arg3 ;
-(id)gregorianStartDate;
-(void)setGregorianStartDate:(id)arg1 ;
-(id)_copyLocale;
-(id)_copyTimeZone;
-(void)_setGregorianStartDate:(id)arg1 ;
-(id)_gregorianStartDate;
-(id)eraSymbols;
-(id)weekdaySymbols;
-(id)shortWeekdaySymbols;
-(id)longEraSymbols;
-(id)veryShortMonthSymbols;
-(id)veryShortStandaloneMonthSymbols;
-(id)veryShortWeekdaySymbols;
-(id)standaloneWeekdaySymbols;
-(id)shortStandaloneWeekdaySymbols;
-(id)veryShortStandaloneWeekdaySymbols;
-(id)quarterSymbols;
-(id)shortQuarterSymbols;
-(id)standaloneQuarterSymbols;
-(id)shortStandaloneQuarterSymbols;
-(timespec)_minimumRangeOfUnit:(unsigned long long)arg1 ;
-(timespec)_maximumRangeOfUnit:(unsigned long long)arg1 ;
-(timespec)_rangeOfUnit:(unsigned long long)arg1 inUnit:(unsigned long long)arg2 forAT:(double)arg3 ;
-(long long)_ordinalityOfUnit:(unsigned long long)arg1 inUnit:(unsigned long long)arg2 forAT:(double)arg3 ;
-(unsigned char)_rangeOfUnit:(unsigned long long)arg1 startTime:(double*)arg2 interval:(double*)arg3 forAT:(double)arg4 ;
-(unsigned char)_composeAbsoluteTime:(double*)arg1 :(const char*)arg2 :(char*)arg3 ;
-(unsigned char)_decomposeAbsoluteTime:(double)arg1 :(const char*)arg2 :(char*)arg3 ;
-(unsigned char)_addComponents:(double*)arg1 :(unsigned long long)arg2 :(const char*)arg3 :(char*)arg4 ;
-(unsigned char)_diffComponents:(double)arg1 :(double)arg2 :(unsigned long long)arg3 :(const char*)arg4 :(char*)arg5 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)init;
-(bool)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(void)setTimeZone:(id)arg1 ;
-(id)copyWithZone:(NSZone)arg1 ;
-(id)calendarIdentifier;
-(id)dateByAddingComponents:(id)arg1 toDate:(id)arg2 options:(unsigned long long)arg3 ;
-(id)components:(unsigned long long)arg1 fromDate:(id)arg2 ;
-(id)dateFromComponents:(id)arg1 ;
-(void)setLocale:(id)arg1 ;
-(id)AMSymbol;
-(id)PMSymbol;
-(id)timeZone;
-(id)locale;
-(id)components:(unsigned long long)arg1 fromDate:(id)arg2 toDate:(id)arg3 options:(unsigned long long)arg4 ;
-(bool)rangeOfUnit:(unsigned long long)arg1 startDate:(id*)arg2 interval:(double*)arg3 forDate:(id)arg4 ;
-(unsigned long long)firstWeekday;
-(unsigned long long)minimumDaysInFirstWeek;
-(NSRange)rangeOfUnit:(unsigned long long)arg1 inUnit:(unsigned long long)arg2 forDate:(id)arg3 ;
-(NSRange)maximumRangeOfUnit:(unsigned long long)arg1 ;
-(id)initWithCalendarIdentifier:(id)arg1 ;
-(id)monthSymbols;
-(id)shortMonthSymbols;
-(id)standaloneMonthSymbols;
-(id)shortStandaloneMonthSymbols;
@end

