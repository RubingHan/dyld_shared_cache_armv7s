/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:11 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CoreFoundation/CoreFoundation-Structs.h>
#import <CoreFoundation/NSCopying.h>
#import <CoreFoundation/NSMutableCopying.h>
#import <CoreFoundation/NSSecureCoding.h>
#import <CoreFoundation/NSFastEnumeration.h>

@interface NSDictionary : NSObject <NSCopying, NSMutableCopying, NSSecureCoding, NSFastEnumeration>

@property (nonatomic,readonly) unsigned short fileHFSFlags; 
@property (nonatomic,readonly) unsigned long long fileHFSResourceForkSize; 
+(id)convertFromXML:(id)arg1 ;
+(id)convertFromBinaryXML:(id)arg1 ;
+(id)_gkDictionaryWithFormEncodedString:(id)arg1 ;
+(id)dictionaryWithKeyArray:(id)arg1 defaultValue:(id)arg2 ;
+(id)dictionaryWithPlistData:(id)arg1 ;
+(id)_dictionaryWithData:(id)arg1 isPlist:(bool)arg2 allowedClasses:(id)arg3 ;
+(id)dictionaryWithArchiveData:(id)arg1 allowedClasses:(id)arg2 ;
+(id)dictionaryWithArchiveData:(id)arg1 ;
+(id)_geo_dictionaryFromXPCObject:(id)arg1 ;
+(id)newWithContentsOf:(id)arg1 immutable:(bool)arg2 ;
+(id)dictionaryWithContentsOfURL:(id)arg1 ;
+(bool)supportsSecureCoding;
+(id)dictionaryWithContentsOfFile:(id)arg1 ;
+(id)sharedKeySetForKeys:(id)arg1 ;
+(id)newDictionaryWithObjects:(const id*)arg1 forKeys:(const id*)arg2 count:(unsigned long long)arg3 ;
+(id)dictionaryWithDictionary:(id)arg1 copyItems:(bool)arg2 ;
+(id)dictionaryWithObjects:(const id*)arg1 forKeys:(const id*)arg2 count:(unsigned long long)arg3 ;
+(id)dictionaryWithObject:(id)arg1 forKey:(id)arg2 ;
+(id)dictionary;
+(id)dictionaryWithObjectsAndKeys:(id)arg1 ;
+(id)dictionaryWithDictionary:(id)arg1 ;
+(id)allocWithZone:(NSZone)arg1 ;
+(bool)supportsSecureCoding;
+(id)dictionaryWithObjects:(id)arg1 forKeys:(id)arg2 ;
-(bool)MSASIsGlobalResetSync;
-(id)MSASAlbumResetSyncAlbumGUID;
-(bool)MSASIsLocalChange;
-(id)MSASEventIsDueToAlbumDeletionAlbumGUID;
-(id)MSASEventIsDueToAssetCollectionDeletionAssetCollectionGUID;
-(bool)MSASIsNotInteresting;
-(bool)MSASIsErrorRecovery;
-(id)MSMutableDeepCopyWithZone:(NSZone)arg1 ;
-(id)MSDeepCopyWithZone:(NSZone)arg1 ;
-(id)MSMutableDeepCopy;
-(id)MSDeepCopy;
-(id)mutableCopyWithElementsCopy;
-(id)convertToXML;
-(id)convertToBinaryXML;
-(id)deepCopy;
-(id)dictionaryFromChanges:(id)arg1 ;
-(id)objectForInt:(int)arg1 ;
-(id)mutableCopyWithElementsCopy;
-(id)mf_filterUsingMap:(id)arg1 inverse:(bool)arg2 ;
-(bool)mf_boolForKey:(id)arg1 ;
-(int)mf_integerForKey:(id)arg1 ;
-(id)DAObjectForKeyCaseInsensitive:(id)arg1 ;
-(id)DAMergeOverrideDictionary:(id)arg1 ;
-(id)__ftreg_responseAppleID;
-(id)__ftreg_responseProfileID;
-(id)__ftreg_responseAuthToken;
-(bool)__ftreg_responseIsUpgrade;
-(bool)__ftreg_isValidSetupDictionary;
-(id)__ftreg_candidateAliases;
-(long long)abCompare:(id)arg1 ;
-(id)CDVObjectForKeyWithNameSpace:(id)arg1 andName:(id)arg2 ;
-(id)CDVObjectForKeyCaseInsensitive:(id)arg1 ;
-(id)CDVMergeOverrideDictionary:(id)arg1 ;
-(id)PKStringForKey:(id)arg1 ;
-(id)PKNumberForKey:(id)arg1 ;
-(id)PKArrayForKey:(id)arg1 ;
-(id)PKSetForKey:(id)arg1 ;
-(id)PKDateForKey:(id)arg1 ;
-(id)PKURLForKey:(id)arg1 ;
-(id)PKUUIDForKey:(id)arg1 ;
-(id)PKColorForKey:(id)arg1 ;
-(long long)PKIntegerForKey:(id)arg1 ;
-(double)PKDoubleForKey:(id)arg1 ;
-(bool)PKBoolForKey:(id)arg1 ;
-(id)PKDictionaryForKey:(id)arg1 ;
-(id)PKArrayContaining:(Class)arg1 forKey:(id)arg2 ;
-(id)PKSetContaining:(Class)arg1 forKey:(id)arg2 ;
-(id)_gkImageURLForSize:(long long)arg1 foundSize:(out unsigned long long*)arg2 ;
-(id)_gkDictionaryByRemovingObjectsForKeys:(id)arg1 ;
-(id)_gkDictionaryByRemovingObjectForKey:(id)arg1 ;
-(id)_gkSubDictionaryWithKeys:(id)arg1 ;
-(id)_gkSubDictionaryWithKeys:(id)arg1 mappedToNewKeys:(id)arg2 ;
-(id)_gkImageURLForSize:(long long)arg1 ;
-(id)deepCopy;
-(id)gksDeepMutableCopy;
-(bool)writeToProtectedFile:(id)arg1 atomically:(bool)arg2 ;
-(id)ML3StringForKey:(id)arg1 ;
-(id)_FTFilteredDictionaryForAPS;
-(id)_sa_mappedDictionaryWithBlock:(/*^block*/ id)arg1 ;
-(id)_web_messageText;
-(int)_web_messageLineNumber;
-(id)_web_messageSourceURL;
-(int)_web_messageType;
-(bool)_boolForKey:(id)arg1 ;
-(bool)_ui_dictionaryContainsUIStringDrawingKeys;
-(id)_ui_attributesForDictionaryContainingUIStringDrawingKeys;
-(id)_webkit_objectForMIMEType:(id)arg1 ;
-(id)_webkit_stringForKey:(id)arg1 ;
-(int)_webkit_intForKey:(id)arg1 ;
-(bool)_webkit_boolForKey:(id)arg1 ;
-(id)_webkit_arrayForKey:(id)arg1 ;
-(id)_webkit_numberForKey:(id)arg1 ;
-(id)asQueryParameterString;
-(unsigned short)fileHFSFlags;
-(unsigned long long)fileHFSResourceForkSize;
-(id)_dataForKey:(id)arg1 ;
-(id)_dictionaryForKey:(id)arg1 ;
-(id)_numberForKey:(id)arg1 ;
-(id)_arrayForKey:(id)arg1 ;
-(id)_stringForKey:(id)arg1 ;
-(id)archiveData;
-(id)plistData;
-(bool)__imIsMutable;
-(id)__imDeepCopy;
-(id)keysOfChangedEntriesComparedTo:(id)arg1 ;
-(id)dictionaryFromChanges:(id)arg1 ;
-(id)mutableDeepAutoreleasedCopy;
-(bool)matchesUID:(id)arg1 ;
-(void)encodeWithCAMLWriter:(id)arg1 ;
-(id)CAMLType;
-(KeyValueArray*)CA_copyRenderKeyValueArray;
-(id)MCMutableDeepCopyWithZone:(NSZone)arg1 ;
-(id)MCDeepCopyWithZone:(NSZone)arg1 ;
-(id)MCMutableDeepCopy;
-(id)MCDeepCopy;
-(id)MCRetainRequiredObjectKey:(id)arg1 type:(Class)arg2 errorDomain:(id)arg3 missingDataCode:(long long)arg4 missingDataErrorString:(id)arg5 invalidDataCode:(long long)arg6 invalidDataErrorString:(id)arg7 outError:(id*)arg8 ;
-(id)MCRetainOptionalObjectKey:(id)arg1 type:(Class)arg2 errorDomain:(id)arg3 invalidDataCode:(long long)arg4 invalidDataErrorString:(id)arg5 outError:(id*)arg6 ;
-(id)MCRetainRequiredNonZeroLengthStringKey:(id)arg1 errorDomain:(id)arg2 missingDataCode:(long long)arg3 missingDataErrorString:(id)arg4 invalidDataCode:(long long)arg5 invalidDataErrorString:(id)arg6 outError:(id*)arg7 ;
-(id)MCRetainOptionalNonZeroLengthStringKey:(id)arg1 errorDomain:(id)arg2 invalidDataCode:(long long)arg3 invalidDataErrorString:(id)arg4 outError:(id*)arg5 ;
-(bool)MR_isEqualToDictionary:(id)arg1 ;
-(id)_geo_newXPCObject;
-(id)_placeOrCurrentLocation:(bool*)arg1 ;
-(id)sbs_safeObjectForKey:(id)arg1 ofType:(Class)arg2 ;
-(id)bks_safeObjectForKey:(id)arg1 ofType:(Class)arg2 ;
-(id)replacementObjectForPortCoder:(id)arg1 ;
-(id)_web_numberForKey:(id)arg1 ;
-(int)_web_intForKey:(id)arg1 ;
-(id)_web_stringForKey:(id)arg1 ;
-(id)_web_objectForMIMEType:(id)arg1 ;
-(id)valueForKey:(id)arg1 ;
-(id)valueForKeyPath:(id)arg1 ;
-(unsigned long long)filePosixPermissions;
-(bool)fileIsImmutable;
-(unsigned long long)fileOwnerAccountNumber;
-(id)fileGroupOwnerAccountName;
-(unsigned long long)fileGroupOwnerAccountNumber;
-(long long)fileSystemNumber;
-(unsigned long long)fileSystemFileNumber;
-(bool)fileExtensionHidden;
-(unsigned)fileHFSCreatorCode;
-(unsigned)fileHFSTypeCode;
-(bool)fileIsAppendOnly;
-(id)fileCreationDate;
-(id)fileGroupOwnerAccountID;
-(id)fileType;
-(id)fileModificationDate;
-(unsigned long long)fileSize;
-(id)fileOwnerAccountID;
-(id)fileOwnerAccountName;
-(id)_stringToWrite;
-(id)descriptionInStringsFileFormat;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(bool)writeToFile:(id)arg1 atomically:(bool)arg2 ;
-(bool)writeToURL:(id)arg1 atomically:(bool)arg2 ;
-(Class)classForCoder;
-(id)initWithContentsOfFile:(id)arg1 ;
-(id)initWithContentsOfURL:(id)arg1 ;
-(bool)isNSDictionary__;
-(id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2 ;
-(void)getObjects:(id*)arg1 ;
-(void)getObjects:(id*)arg1 andKeys:(id*)arg2 ;
-(void)getKeys:(id*)arg1 ;
-(unsigned long long)countForKey:(id)arg1 ;
-(bool)containsKey:(id)arg1 ;
-(bool)__getValue:(id*)arg1 forKey:(id)arg2 ;
-(unsigned long long)countForObject:(id)arg1 ;
-(void)__apply:(/*function pointer*/ void*)arg1 context:(void*)arg2 ;
-(unsigned long long)_cfTypeID;
-(void)getObjects:(id*)arg1 andKeys:(id*)arg2 count:(unsigned long long)arg3 ;
-(void)enumerateKeysAndObjectsWithOptions:(unsigned long long)arg1 usingBlock:(/*^block*/ id)arg2 ;
-(id)keyOfEntryWithOptions:(unsigned long long)arg1 passingTest:(/*^block*/ id)arg2 ;
-(id)keysOfEntriesWithOptions:(unsigned long long)arg1 passingTest:(/*^block*/ id)arg2 ;
-(id)keysSortedByValueWithOptions:(unsigned long long)arg1 usingComparator:(/*^block*/ id)arg2 ;
-(id)invertedDictionary;
-(id)keyOfEntryPassingTest:(/*^block*/ id)arg1 ;
-(id)keysSortedByValueUsingComparator:(/*^block*/ id)arg1 ;
-(id)keysSortedByValueUsingSelector:(SEL)arg1 ;
-(id)objectsForKeys:(id)arg1 notFoundMarker:(id)arg2 ;
-(id)initWithObject:(id)arg1 forKey:(id)arg2 ;
-(id)initWithCoder:(id)arg1 ;
-(unsigned long long)countByEnumeratingWithState:(SCD_Struct_NS16*)arg1 objects:(id*)arg2 count:(unsigned long long)arg3 ;
-(void)encodeWithCoder:(id)arg1 ;
-(unsigned long long)count;
-(bool)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(id)initWithDictionary:(id)arg1 ;
-(id)objectForKeyedSubscript:(id)arg1 ;
-(id)objectForKey:(id)arg1 ;
-(bool)containsObject:(id)arg1 ;
-(id)initWithObjectsAndKeys:(id)arg1 ;
-(id)allKeys;
-(id)copyWithZone:(NSZone)arg1 ;
-(id)objectEnumerator;
-(void)enumerateKeysAndObjectsUsingBlock:(/*^block*/ id)arg1 ;
-(id)allObjects;
-(bool)isEqualToDictionary:(id)arg1 ;
-(id)initWithObjects:(id)arg1 forKeys:(id)arg2 ;
-(id)allValues;
-(id)keyEnumerator;
-(id)initWithObjects:(const id*)arg1 forKeys:(const id*)arg2 count:(unsigned long long)arg3 ;
-(id)mutableCopyWithZone:(NSZone)arg1 ;
-(id)allKeysForObject:(id)arg1 ;
-(id)keysOfEntriesPassingTest:(/*^block*/ id)arg1 ;
-(id)initWithDictionary:(id)arg1 copyItems:(bool)arg2 ;
-(id)descriptionWithLocale:(id)arg1 ;
@end

