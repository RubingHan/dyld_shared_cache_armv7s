/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:26 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/Foundation.framework/Foundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Foundation/Foundation-Structs.h>
#import <Foundation/NSValue.h>
#import <DAEAS/ASParsingLeafNode.h>

@interface NSNumber : NSValue <ASParsingLeafNode>
+(bool)expectsContent;
+(bool)acceptsTopLevelLeaves;
+(bool)parsingLeafNode;
+(bool)parsingWithSubItems;
+(bool)frontingBasicTypes;
+(bool)notifyOfUnknownTokens;
+(id)numberWithCGFloat:(double)arg1 ;
+(id)cr_numberWithCRRecentID:(long long)arg1 ;
+(id)cr_numberWithCRContactID:(long long)arg1 ;
+(id)_gkServerTimeInterval:(double)arg1 ;
+(id)boolFromICSString:(id)arg1 ;
+(id)numberWithItemIdentifier:(unsigned long long)arg1 ;
+(id)numberWithUnsignedChar:(unsigned char)arg1 ;
+(id)numberWithDouble:(double)arg1 ;
+(id)numberWithBool:(bool)arg1 ;
+(id)numberWithInt:(int)arg1 ;
+(id)numberWithLongLong:(long long)arg1 ;
+(id)numberWithInteger:(long long)arg1 ;
+(id)numberWithUnsignedLong:(unsigned long long)arg1 ;
+(id)allocWithZone:(NSZone)arg1 ;
+(id)numberWithUnsignedInt:(unsigned)arg1 ;
+(id)numberWithFloat:(float)arg1 ;
+(id)numberWithChar:(BOOL)arg1 ;
+(bool)supportsSecureCoding;
+(void)initialize;
+(id)numberWithLong:(long long)arg1 ;
+(id)numberWithUnsignedInteger:(unsigned long long)arg1 ;
+(id)numberWithUnsignedLongLong:(unsigned long long)arg1 ;
+(id)numberWithUnsignedShort:(unsigned short)arg1 ;
+(id)numberWithShort:(short)arg1 ;
-(id)initWithASParseContext:(id)arg1 root:(id)arg2 parent:(id)arg3 callbackDict:(id)arg4 streamCallbackDict:(id)arg5 lengthUntilEndOfTerminator:(int)arg6 ;
-(int)parsingState;
-(id)initWithCGFloat:(double)arg1 ;
-(long long)cr_CRContactIDValue;
-(long long)cr_CRRecentIDValue;
-(void)_ICSStringWithOptions:(unsigned long long)arg1 appendingToString:(id)arg2 ;
-(void)_ICSBoolAppendingToString:(id)arg1 ;
-(void)_ICSUTCOffsetAppendingToString:(id)arg1 ;
-(void)_ICSFBTypeAppendingToString:(id)arg1 ;
-(id)MPMediaLibraryDataProviderSystemML3CoercedString;
-(id)ml_stringValueForSQL;
-(void)ml_bindToSQLiteStatement:(sqlite3_stmtRef)arg1 atPosition:(int)arg2 ;
-(id)localizedString;
-(void)encodeWithCAMLWriter:(id)arg1 ;
-(id)CAMLType;
-(id)CA_roundToIntegerFromValue:(id)arg1 ;
-(id)CA_interpolateValues:(id)arg1 :(id)arg2 :(id)arg3 interpolator:(const ValueInterpolator*)arg4 ;
-(double)CA_distanceToValue:(id)arg1 ;
-(id)CA_addValue:(id)arg1 multipliedBy:(int)arg2 ;
-(id)CA_interpolateValue:(id)arg1 byFraction:(float)arg2 ;
-(Object*)CA_copyRenderValue;
-(id)initWithItemIdentifier:(unsigned long long)arg1 ;
-(unsigned long long)itemIdentifierValue;
-(SCD_Struct_NS45)decimalValue;
-(bool)isNSNumber__;
-(long long)_cfNumberType;
-(unsigned char)_getValue:(void*)arg1 forType:(long long)arg2 ;
-(long long)_reverseCompare:(id)arg1 ;
-(unsigned long long)_cfTypeID;
-(id)initWithLongLong:(long long)arg1 ;
-(BOOL)charValue;
-(unsigned short)unsignedShortValue;
-(id)initWithUnsignedLongLong:(unsigned long long)arg1 ;
-(bool)_getCString:(char*)arg1 length:(int)arg2 multiplier:(double)arg3 ;
-(bool)_allowsDirectEncoding;
-(id)initWithUnsignedShort:(unsigned short)arg1 ;
-(id)initWithShort:(short)arg1 ;
-(id)initWithUnsignedChar:(unsigned char)arg1 ;
-(id)initWithChar:(BOOL)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(bool)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(int)intValue;
-(double)doubleValue;
-(bool)boolValue;
-(unsigned)unsignedIntValue;
-(long long)integerValue;
-(id)copyWithZone:(NSZone)arg1 ;
-(Class)classForCoder;
-(id)initWithLong:(long long)arg1 ;
-(float)floatValue;
-(unsigned long long)unsignedIntegerValue;
-(long long)compare:(id)arg1 ;
-(long long)longLongValue;
-(id)stringValue;
-(unsigned long long)unsignedLongLongValue;
-(id)initWithBool:(bool)arg1 ;
-(id)initWithInt:(int)arg1 ;
-(id)initWithInteger:(long long)arg1 ;
-(id)initWithUnsignedInteger:(unsigned long long)arg1 ;
-(id)initWithUnsignedInt:(unsigned)arg1 ;
-(unsigned long long)unsignedLongValue;
-(unsigned char)unsignedCharValue;
-(id)initWithFloat:(float)arg1 ;
-(bool)isEqualToNumber:(id)arg1 ;
-(id)initWithUnsignedLong:(unsigned long long)arg1 ;
-(short)shortValue;
-(long long)longValue;
-(id)descriptionWithLocale:(id)arg1 ;
-(id)initWithDouble:(double)arg1 ;
@end

