/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:30 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/Foundation.framework/Foundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Foundation/Foundation-Structs.h>
#import <Foundation/NSXPCProxyCreating.h>

@protocol OS_dispatch_queue, NSObject;
@class NSObject, NSXPCInterface, NSString, NSXPCListenerEndpoint;

@interface NSXPCConnection : NSObject <NSXPCProxyCreating> {

	void* _xconnection;
	id _incomingReplyInfo;
	NSObject<OS_dispatch_queue>* _userQueue;
	unsigned _state;
	unsigned _state2;
	/*^block*/ id _interruptionHandler;
	/*^block*/ id _invalidationHandler;
	id _exportInfo;
	id _replyInfo;
	id _importInfo;
	<NSObject>* _otherInfo;
	id _reserved1;
	id _lock;
	NSXPCInterface* _remoteObjectInterface;
	NSString* _serviceName;
	NSXPCListenerEndpoint* _endpoint;
	id _eCache;
	id _dCache;

}

@property (assign,setter=ml_setValid:,getter=ml_isValid,nonatomic) bool ml_valid; 
@property (readonly) NSString * serviceName; 
@property (readonly) NSXPCListenerEndpoint * endpoint; 
@property (retain) NSXPCInterface * exportedInterface; 
@property (retain) id exportedObject; 
@property (retain) NSXPCInterface * remoteObjectInterface;                                     //@synthesize remoteObjectInterface=_remoteObjectInterface - In the implementation block
@property (copy) id interruptionHandler; 
@property (copy) id invalidationHandler; 
@property (readonly) int auditSessionIdentifier; 
@property (readonly) int processIdentifier; 
@property (readonly) unsigned effectiveUserIdentifier; 
@property (readonly) unsigned effectiveGroupIdentifier; 
+(void)beginTransaction;
+(id)currentConnection;
+(void)endTransaction;
-(void)ml_setValid:(bool)arg1 ;
-(bool)ml_isValid;
-(id)initWithServiceName:(id)arg1 options:(unsigned long long)arg2 ;
-(id)initWithListenerEndpoint:(id)arg1 ;
-(void)_invalidate:(bool)arg1 ;
-(/*^block*/ id)invalidationHandler;
-(void)_sendInvocation:(id)arg1 proxyNumber:(unsigned long long)arg2 remoteInterface:(id)arg3 withErrorHandler:(/*^block*/ id)arg4 timeout:(double)arg5 userInfo:(id)arg6 ;
-(void)_sendDesistForProxyNumber:(unsigned long long)arg1 ;
-(void)_decodeAndInvokeReplyBlockWithData:(id)arg1 ;
-(void)_decodeAndInvokeMessageWithData:(id)arg1 ;
-(id)_initWithPeerConnection:(id)arg1 name:(id)arg2 options:(unsigned long long)arg3 ;
-(id)initWithEndpoint:(id)arg1 ;
-(void)addBarrierBlock:(/*^block*/ id)arg1 ;
-(void)_sendInvocation:(id)arg1 proxyNumber:(unsigned long long)arg2 remoteInterface:(id)arg3 ;
-(void)_sendInvocation:(id)arg1 proxyNumber:(unsigned long long)arg2 remoteInterface:(id)arg3 withErrorHandler:(/*^block*/ id)arg4 ;
-(void)_sendInvocation:(id)arg1 proxyNumber:(unsigned long long)arg2 remoteInterface:(id)arg3 withErrorHandler:(/*^block*/ id)arg4 timeout:(double)arg5 ;
-(/*^block*/ id)interruptionHandler;
-(id)serviceName;
-(id)_exportTable;
-(id)valueForEntitlement:(id)arg1 ;
-(id)replacementObjectForEncoder:(id)arg1 object:(id)arg2 ;
-(bool)_encodeCacheContainsClass:(Class)arg1 ;
-(void)_addClassToEncodeCache:(Class)arg1 ;
-(bool)_decodeCacheContainsClass:(Class)arg1 ;
-(void)_addClassToDecodeCache:(Class)arg1 ;
-(id)exportedObject;
-(id)remoteObjectProxyWithUserInfo:(id)arg1 errorHandler:(/*^block*/ id)arg2 ;
-(id)remoteObjectProxyWithTimeout:(double)arg1 errorHandler:(/*^block*/ id)arg2 ;
-(void)_addImportedProxy:(unsigned long long)arg1 ;
-(void)_removeImportedProxy:(unsigned long long)arg1 ;
-(int)auditSessionIdentifier;
-(unsigned)effectiveUserIdentifier;
-(unsigned)effectiveGroupIdentifier;
-(void)_setUUID:(id)arg1 ;
-(id)remoteObjectInterface;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(id)debugDescription;
-(id)delegate;
-(void)invalidate;
-(void)suspend;
-(id)userInfo;
-(void)start;
-(id)initWithMachServiceName:(id)arg1 options:(unsigned long long)arg2 ;
-(void)setRemoteObjectInterface:(id)arg1 ;
-(void)resume;
-(id)remoteObjectProxyWithErrorHandler:(/*^block*/ id)arg1 ;
-(id)initWithMachServiceName:(id)arg1 ;
-(void)setOptions:(unsigned long long)arg1 ;
-(void)_setQueue:(id)arg1 ;
-(id)remoteObjectProxy;
-(void)setUserInfo:(id)arg1 ;
-(void)stop;
-(id)_queue;
-(id)exportedInterface;
-(void)setExportedInterface:(id)arg1 ;
-(void)setExportedObject:(id)arg1 ;
-(void)setInterruptionHandler:(/*^block*/ id)arg1 ;
-(void)setInvalidationHandler:(/*^block*/ id)arg1 ;
-(int)processIdentifier;
-(SCD_Struct_NS90)auditToken;
-(id)endpoint;
-(id)initWithServiceName:(id)arg1 ;
-(void)finalize;
@end

