/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:25 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/Foundation.framework/Foundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@class NSDictionary, NSArray, NSString;

@interface NSProcessInfo : NSObject {

	NSDictionary* environment;
	NSArray* arguments;
	NSString* hostName;
	NSString* name;
	long long automaticTerminationOptOutCounter;

}
+(id)processInfo;
-(void)_disableAutomaticTerminationWithoutSettingRelaunchable:(id)arg1 ;
-(void)_enableAutomaticTerminationWithoutSettingRelaunchable:(id)arg1 ;
-(unsigned long long)operatingSystem;
-(void)performActivityWithOptions:(unsigned long long)arg1 reason:(id)arg2 usingBlock:(/*^block*/ id)arg3 ;
-(void)setArguments:(id)arg1 ;
-(id)hostName;
-(void)setProcessName:(id)arg1 ;
-(id)globallyUniqueString;
-(id)userName;
-(id)userFullName;
-(id)operatingSystemName;
-(id)operatingSystemVersionString;
-(unsigned long long)physicalMemory;
-(bool)isTranslated;
-(double)systemUptime;
-(void)disableSuddenTermination;
-(void)enableSuddenTermination;
-(void)_exitIfSuddenTerminationEnabledWithStatus:(int)arg1 ;
-(void)_exitWhenSuddenTerminationEnabledWithStatus:(int)arg1 ;
-(long long)_suddenTerminationDisablingCount;
-(void)disableAutomaticTermination:(id)arg1 ;
-(void)enableAutomaticTermination:(id)arg1 ;
-(void)setAutomaticTerminationSupportEnabled:(bool)arg1 ;
-(bool)automaticTerminationSupportEnabled;
-(void)_disableAutomaticTerminationOnly:(id)arg1 ;
-(void)_enableAutomaticTerminationOnly:(id)arg1 ;
-(id)beginSuspensionOfSystemBehaviors:(unsigned long long)arg1 reason:(id)arg2 ;
-(void)endSystemBehaviorSuspension:(id)arg1 ;
-(id)beginActivityWithOptions:(unsigned long long)arg1 reason:(id)arg2 ;
-(void)endActivity:(id)arg1 ;
-(void)performActivityWithOptions:(unsigned long long)arg1 reason:(id)arg2 block:(/*^block*/ id)arg3 ;
-(void)dealloc;
-(id)init;
-(id)environment;
-(id)userHomeDirectory;
-(id)arguments;
-(id)processName;
-(unsigned long long)processorCount;
-(int)processIdentifier;
-(unsigned long long)activeProcessorCount;
@end

