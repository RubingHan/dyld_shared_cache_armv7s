/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:24 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/Foundation.framework/Foundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@interface NSFileManager : NSObject
+(id)cacheDirectoryPathWithName:(id)arg1 ;
+(bool)_storeMovePath:(id)arg1 toPath:(id)arg2 ;
+(bool)ensureDirectoryExists:(id)arg1 ;
+(id)defaultManager;
-(bool)removeDirectoryAtPathIfEmpty:(id)arg1 ancestors:(int)arg2 ;
-(bool)directoryExistsAtPath:(id)arg1 ;
-(id)makeUniqueDirectoryWithPath:(id)arg1 ;
-(id)tmpFileForVideoTranscodeWithExtension:(id)arg1 ;
-(id)pathsAtDirectory:(id)arg1 withNameFamily:(id)arg2 ;
-(bool)removeItemsAtPaths:(id)arg1 ;
-(id)mf_makeUniqueFileInDirectory:(id)arg1 ;
-(bool)mf_protectFileAtPath:(id)arg1 withClass:(int)arg2 error:(id*)arg3 ;
-(id)mf_fileModificationDateAtPath:(id)arg1 traverseLink:(bool)arg2 ;
-(id)mf_pathsAtDirectory:(id)arg1 beginningWithString:(id)arg2 ;
-(bool)mf_setValue:(id)arg1 forAttribute:(id)arg2 ofItemAtPath:(id)arg3 error:(id*)arg4 ;
-(bool)mf_setValue:(id)arg1 forExtendedAttribute:(id)arg2 ofItemAtPath:(id)arg3 error:(id*)arg4 ;
-(bool)mf_makeCompletePath:(id)arg1 mode:(int)arg2 ;
-(bool)mf_canWriteToDirectoryAtPath:(id)arg1 ;
-(void)mf_deleteFilesInSortedArray:(id)arg1 matchingPrefix:(id)arg2 fromDirectory:(id)arg3 ;
-(long long)_gkReadXattrBytes:(void*)arg1 count:(unsigned long long)arg2 withName:(id)arg3 path:(id)arg4 ;
-(void)_gkWriteXattrBytes:(void*)arg1 count:(unsigned long long)arg2 withName:(id)arg3 path:(id)arg4 ;
-(void)_gkRemoveXattrNamed:(id)arg1 path:(id)arg2 ;
-(double)_gkExpirationIntervalOfFileAtPath:(id)arg1 ;
-(void)_gkSetExpirationInterval:(double)arg1 ofFileAtPath:(id)arg2 ;
-(id)_webkit_createTemporaryDirectoryWithTemplatePrefix:(id)arg1 ;
-(id)_webkit_pathWithUniqueFilenameForPath:(id)arg1 ;
-(id)_randomTemporaryPathWithSuffix:(id)arg1 ;
-(bool)makeDirectoriesInPath:(id)arg1 mode:(unsigned)arg2 ;
-(id)uniqueFilename:(id)arg1 atPath:(id)arg2 ofType:(id)arg3 ;
-(id)_randomTemporaryPathWithFileName:(id)arg1 ;
-(id)_randomTemporaryPathWithSuffix:(id)arg1 fileName:(id)arg2 ;
-(id)createUniqueDirectoryWithName:(id)arg1 atPath:(id)arg2 ofType:(id)arg3 ;
-(bool)_isPathOnMissingVolume:(id)arg1 ;
-(bool)_moveItemAtPath:(id)arg1 toPath:(id)arg2 uniquePath:(id*)arg3 error:(id*)arg4 asCopy:(bool)arg5 ;
-(id)_generateLinkForURL:(id)arg1 ;
-(bool)moveItemAtPath:(id)arg1 toPath:(id)arg2 uniquePath:(id*)arg3 error:(id*)arg4 ;
-(bool)copyItemAtPath:(id)arg1 toPath:(id)arg2 uniquePath:(id*)arg3 error:(id*)arg4 ;
-(id)cutRandomTemporaryPathWithFileName:(id)arg1 ;
-(bool)_cutIsPathOnMissingVolume:(id)arg1 ;
-(id)cutCreateUniqueDirectoryWithName:(id)arg1 atPath:(id)arg2 ofType:(id)arg3 ;
-(id)cutUniqueFilename:(id)arg1 atPath:(id)arg2 ofType:(id)arg3 ;
-(id)_web_carbonPathForPath_nowarn:(id)arg1 ;
-(bool)_web_fileExistsAtPath_nowarn:(id)arg1 isDirectory:(bool*)arg2 traverseLink:(bool)arg3 ;
-(id)_web_startupVolumeName_nowarn;
-(bool)_web_createIntermediateDirectoriesForPath_nowarn:(id)arg1 attributes:(id)arg2 ;
-(void)_web_noteFileChangedAtPath_nowarn:(id)arg1 ;
-(bool)_web_changeFileAttributes_nowarn:(id)arg1 atPath:(id)arg2 ;
-(bool)_web_changeFinderAttributes:(id)arg1 forFileAtPath:(id)arg2 ;
-(void)_performRemoveFileAtPath:(id)arg1 ;
-(bool)_web_createFileAtPath:(id)arg1 contents:(id)arg2 attributes:(id)arg3 ;
-(void)_web_backgroundRemoveFileAtPath:(id)arg1 ;
-(void)_web_backgroundRemoveLeftoverFiles:(id)arg1 ;
-(id)_web_visibleItemsInDirectoryAtPath:(id)arg1 ;
-(bool)_web_createDirectoryAtPathWithIntermediateDirectories:(id)arg1 attributes:(id)arg2 ;
-(id)_web_pathWithUniqueFilenameForPath:(id)arg1 ;
-(bool)_web_removeFileOnlyAtPath:(id)arg1 ;
-(bool)_web_createFileAtPathWithIntermediateDirectories:(id)arg1 contents:(id)arg2 attributes:(id)arg3 directoryAttributes:(id)arg4 ;
-(id)_info;
-(bool)isUbiquitousItemAtURL:(id)arg1 ;
-(bool)isReadableFileAtPath:(id)arg1 ;
-(id)URLForDirectory:(unsigned long long)arg1 inDomain:(unsigned long long)arg2 appropriateForURL:(id)arg3 create:(bool)arg4 error:(id*)arg5 ;
-(bool)startDownloadingUbiquitousItemAtURL:(id)arg1 error:(id*)arg2 ;
-(id)subpathsAtPath:(id)arg1 ;
-(id)attributesOfFileSystemForPath:(id)arg1 error:(id*)arg2 ;
-(bool)replaceItemAtURL:(id)arg1 withItemAtURL:(id)arg2 backupItemName:(id)arg3 options:(unsigned long long)arg4 resultingItemURL:(id*)arg5 error:(id*)arg6 ;
-(id)componentsToDisplayForPath:(id)arg1 ;
-(id)destinationOfSymbolicLinkAtPath:(id)arg1 error:(id*)arg2 ;
-(bool)getFileSystemRepresentation:(char*)arg1 maxLength:(unsigned long long)arg2 withPath:(id)arg3 ;
-(id)_URLForReplacingItemAtURL:(id)arg1 error:(id*)arg2 ;
-(id)currentDirectoryPath;
-(id)directoryContentsAtPath:(id)arg1 matchingExtension:(id)arg2 options:(long long)arg3 keepExtension:(bool)arg4 error:(id*)arg5 ;
-(id)directoryContentsAtPath:(id)arg1 matchingExtension:(id)arg2 options:(long long)arg3 keepExtension:(bool)arg4 ;
-(bool)changeFileAttributes:(id)arg1 atPath:(id)arg2 ;
-(bool)createSymbolicLinkAtPath:(id)arg1 withDestinationPath:(id)arg2 error:(id*)arg3 ;
-(const char*)fileSystemRepresentationWithPath:(id)arg1 ;
-(bool)contentsEqualAtPath:(id)arg1 andPath:(id)arg2 ;
-(bool)_processHasUbiquityContainerEntitlement;
-(id)mountedVolumeURLsIncludingResourceValuesForKeys:(id)arg1 options:(unsigned long long)arg2 ;
-(id)contentsOfDirectoryAtURL:(id)arg1 includingPropertiesForKeys:(id)arg2 options:(unsigned long long)arg3 error:(id*)arg4 ;
-(id)_URLForTrashingItemAtURL:(id)arg1 create:(bool)arg2 error:(id*)arg3 ;
-(id)_displayPathForPath:(id)arg1 ;
-(bool)directoryCanBeCreatedAtPath:(id)arg1 ;
-(bool)changeCurrentDirectoryPath:(id)arg1 ;
-(id)fileAttributesAtPath:(id)arg1 traverseLink:(bool)arg2 ;
-(bool)isExecutableFileAtPath:(id)arg1 ;
-(bool)isDeletableFileAtPath:(id)arg1 ;
-(bool)removeFileAtPath:(id)arg1 handler:(id)arg2 ;
-(id)directoryContentsAtPath:(id)arg1 ;
-(bool)createDirectoryAtPath:(id)arg1 attributes:(id)arg2 ;
-(id)pathContentOfSymbolicLinkAtPath:(id)arg1 ;
-(bool)createSymbolicLinkAtPath:(id)arg1 pathContent:(id)arg2 ;
-(id)contentsAtPath:(id)arg1 ;
-(id)fileSystemAttributesAtPath:(id)arg1 ;
-(id)extendedAttributesAtPath:(id)arg1 error:(id*)arg2 ;
-(id)extendedAttributeForKey:(id)arg1 atPath:(id)arg2 error:(id*)arg3 ;
-(bool)removeExtendedAttributeForKey:(id)arg1 atPath:(id)arg2 error:(id*)arg3 ;
-(bool)setExtendedAttribute:(id)arg1 forKey:(id)arg2 atPath:(id)arg3 error:(id*)arg4 ;
-(bool)filesystemItemCopyOperation:(id)arg1 shouldCopyItemAtPath:(id)arg2 toPath:(id)arg3 ;
-(bool)filesystemItemCopyOperation:(id)arg1 shouldProceedAfterError:(id)arg2 copyingItemAtPath:(id)arg3 toPath:(id)arg4 ;
-(bool)filesystemItemMoveOperation:(id)arg1 shouldMoveItemAtPath:(id)arg2 toPath:(id)arg3 ;
-(bool)filesystemItemMoveOperation:(id)arg1 shouldProceedAfterError:(id)arg2 movingItemAtPath:(id)arg3 toPath:(id)arg4 ;
-(bool)filesystemItemLinkOperation:(id)arg1 shouldLinkItemAtPath:(id)arg2 toPath:(id)arg3 ;
-(bool)filesystemItemLinkOperation:(id)arg1 shouldProceedAfterError:(id)arg2 linkingItemAtPath:(id)arg3 toPath:(id)arg4 ;
-(bool)filesystemItemRemoveOperation:(id)arg1 shouldRemoveItemAtPath:(id)arg2 ;
-(bool)filesystemItemRemoveOperation:(id)arg1 shouldProceedAfterError:(id)arg2 removingItemAtPath:(id)arg3 ;
-(bool)trashItemAtURL:(id)arg1 resultingItemURL:(id*)arg2 error:(id*)arg3 ;
-(id)_attributesOfItemAtPath:(id)arg1 filterResourceFork:(bool)arg2 error:(id*)arg3 ;
-(id)_attributesOfItemAtURL:(id)arg1 filterResourceFork:(bool)arg2 error:(id*)arg3 ;
-(bool)createSymbolicLinkAtURL:(id)arg1 withDestinationURL:(id)arg2 error:(id*)arg3 ;
-(bool)setUbiquitous:(bool)arg1 itemAtURL:(id)arg2 destinationURL:(id)arg3 error:(id*)arg4 ;
-(bool)evictUbiquitousItemAtURL:(id)arg1 error:(id*)arg2 ;
-(id)URLForPublishingUbiquitousItemAtURL:(id)arg1 expirationDate:(id*)arg2 error:(id*)arg3 ;
-(void)_registerForUbiquityAccountChangeNotifications;
-(id)containerURLForSecurityApplicationGroupIdentifier:(id)arg1 ;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)delegate;
-(bool)createDirectoryAtPath:(id)arg1 withIntermediateDirectories:(bool)arg2 attributes:(id)arg3 error:(id*)arg4 ;
-(bool)removeItemAtURL:(id)arg1 error:(id*)arg2 ;
-(bool)createDirectoryAtURL:(id)arg1 withIntermediateDirectories:(bool)arg2 attributes:(id)arg3 error:(id*)arg4 ;
-(bool)setAttributes:(id)arg1 ofItemAtPath:(id)arg2 error:(id*)arg3 ;
-(bool)fileExistsAtPath:(id)arg1 ;
-(bool)removeItemAtPath:(id)arg1 error:(id*)arg2 ;
-(bool)isWritableFileAtPath:(id)arg1 ;
-(bool)linkItemAtURL:(id)arg1 toURL:(id)arg2 error:(id*)arg3 ;
-(bool)copyItemAtURL:(id)arg1 toURL:(id)arg2 error:(id*)arg3 ;
-(id)subpathsOfDirectoryAtPath:(id)arg1 error:(id*)arg2 ;
-(id)displayNameAtPath:(id)arg1 ;
-(bool)fileExistsAtPath:(id)arg1 isDirectory:(bool*)arg2 ;
-(bool)moveItemAtURL:(id)arg1 toURL:(id)arg2 error:(id*)arg3 ;
-(id)URLForUbiquityContainerIdentifier:(id)arg1 ;
-(id)ubiquityIdentityToken;
-(id)URLsForDirectory:(unsigned long long)arg1 inDomains:(unsigned long long)arg2 ;
-(id)contentsOfDirectoryAtPath:(id)arg1 error:(id*)arg2 ;
-(id)attributesOfItemAtPath:(id)arg1 error:(id*)arg2 ;
-(id)enumeratorAtPath:(id)arg1 ;
-(id)enumeratorAtURL:(id)arg1 includingPropertiesForKeys:(id)arg2 options:(unsigned long long)arg3 errorHandler:(/*^block*/ id)arg4 ;
-(bool)moveItemAtPath:(id)arg1 toPath:(id)arg2 error:(id*)arg3 ;
-(bool)linkItemAtPath:(id)arg1 toPath:(id)arg2 error:(id*)arg3 ;
-(bool)copyItemAtPath:(id)arg1 toPath:(id)arg2 error:(id*)arg3 ;
-(bool)createFileAtPath:(id)arg1 contents:(id)arg2 attributes:(id)arg3 ;
-(id)stringWithFileSystemRepresentation:(const char*)arg1 length:(unsigned long long)arg2 ;
@end

