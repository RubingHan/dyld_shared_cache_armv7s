/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:29 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/Foundation.framework/Foundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@class NSURL, NSString, NSDate;

@interface NSFileVersion : NSObject {

	NSURL* _fileURL;
	id _library;
	NSString* _clientID;
	NSString* _name;
	NSURL* _contentsURL;
	bool _isBackup;
	NSString* _localizedName;
	NSString* _localizedComputerName;
	NSDate* _modificationDate;
	bool _isResolved;
	bool _contentsURLIsAccessed;
	id _reserved1;
	id _reserved2;
	bool _discardable;

}

@property (getter=_isBackup,readonly) bool _isBackup; 
@property (readonly) NSURL * URL; 
@property (readonly) NSString * localizedName; 
@property (readonly) NSString * localizedNameOfSavingComputer; 
@property (readonly) NSDate * modificationDate; 
@property (readonly) <NSCoding> * persistentIdentifier; 
@property (getter=isConflict,readonly) bool conflict; 
@property (getter=isResolved) bool resolved; 
@property (getter=isDiscardable) bool discardable;                          //@synthesize discardable=_discardable - In the implementation block
+(bool)unresolvedConflictsExistForItemAtURL:(id)arg1 ;
+(id)versionsOfItemAtURL:(id)arg1 ;
+(bool)_conflictsExistForItemAtURL:(id)arg1 ;
+(void)_markConflicts:(id)arg1 asHandledForItemAtURL:(id)arg2 ;
+(void*)_addConflictObserverForItemAtURL:(id)arg1 statusChangedHandler:(/*^block*/ id)arg2 ;
+(void)_removeConflictObserver:(void*)arg1 ;
+(id)_versionOfItemAtURL:(id)arg1 forClientID:(id)arg2 name:(id)arg3 temporaryStorageIdentifier:(id)arg4 evenIfDeleted:(bool)arg5 ;
+(id)_versionOfItemAtURL:(id)arg1 forPersistentIdentifier:(id)arg2 temporaryStorageIdentifier:(id)arg3 ;
+(id)_autosaveDirectoryURLCreateIfNecessary:(bool)arg1 ;
+(id)_temporaryStorageLocationForIdentifier:(id)arg1 ;
+(id)_libraryForURL:(id)arg1 clientID:(id)arg2 temporaryStorageIdentifier:(id*)arg3 ;
+(id)_supportedGenerationalStorageClientIDs;
+(id)_otherVersionsOfItemAtURL:(id)arg1 temporaryStorageIdentifier:(id)arg2 ;
+(id)_otherNonpurgeableVersionsOfItemAtURL:(id)arg1 temporaryStorageIdentifier:(id)arg2 ;
+(id)_addVersionOfItemAtURL:(id)arg1 withContentsOfURL:(id)arg2 options:(unsigned long long)arg3 temporaryStorageIdentifier:(id*)arg4 error:(id*)arg5 ;
+(id)_temporaryDirectoryURLForNewVersionOfItemAtURL:(id)arg1 temporaryStorageIdentifier:(id)arg2 ;
+(bool)_removeOtherVersionsOfItemAtURL:(id)arg1 temporaryStorageIdentifier:(id)arg2 error:(id*)arg3 ;
+(void)_removeTemporaryDirectoryAtURL:(id)arg1 ;
+(bool)removeOtherVersionsOfItemAtURL:(id)arg1 error:(id*)arg2 ;
+(id)currentVersionOfItemAtURL:(id)arg1 ;
+(id)otherVersionsOfItemAtURL:(id)arg1 ;
+(id)versionOfItemAtURL:(id)arg1 forPersistentIdentifier:(id)arg2 ;
+(id)addVersionOfItemAtURL:(id)arg1 withContentsOfURL:(id)arg2 options:(unsigned long long)arg3 error:(id*)arg4 ;
+(id)temporaryDirectoryURLForNewVersionOfItemAtURL:(id)arg1 ;
+(id)unresolvedConflictVersionsOfItemAtURL:(id)arg1 ;
-(id)restoreOverItemAtURL:(id)arg1 error:(id*)arg2 ;
-(id)_initWithFileURL:(id)arg1 library:(id)arg2 clientID:(id)arg3 name:(id)arg4 contentsURL:(id)arg5 isBackup:(bool)arg6 revision:(id)arg7 ;
-(bool)_isBackup;
-(id)_documentInfo;
-(id)_initWithFileURL:(id)arg1 library:(id)arg2 clientID:(id)arg3 generationInfo:(id)arg4 ;
-(bool)_setDocumentInfo:(id)arg1 ;
-(void)_overrideModificationDateWithDate:(id)arg1 ;
-(bool)_preserveConflictVersionLocally;
-(id)replaceItemAtURL:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
-(void)setResolved:(bool)arg1 ;
-(bool)removeAndReturnError:(id*)arg1 ;
-(bool)isDiscardable;
-(void)setDiscardable:(bool)arg1 ;
-(id)localizedNameOfSavingComputer;
-(bool)isConflict;
-(bool)isResolved;
-(void)dealloc;
-(id)init;
-(bool)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)URL;
-(id)localizedName;
-(id)persistentIdentifier;
-(id)modificationDate;
@end

