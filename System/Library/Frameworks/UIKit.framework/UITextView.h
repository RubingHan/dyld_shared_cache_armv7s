/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:00:20 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIKit/UIKit-Structs.h>
#import <UIKit/UIScrollView.h>
#import <UIKit/UITextInputControllerDelegate.h>
#import <UIKit/UITextAutoscrolling.h>
#import <UIKit/UIKeyboardInput.h>
#import <UIKit/UITextInputTraits_Private.h>
#import <UIKit/UITextInput.h>
#import <UIKit/UITextLinkInteraction.h>

@protocol UITextInputTokenizer;
@class NSTextStorage, NSTextContainer, NSLayoutManager, _UITextContainerView, UITextInputController, UITextInteractionAssistant, UITextInputTraits, UIAutoscroll, _UITextViewRestorableScrollPosition, UIView, NSString, UIFont, UIColor, NSAttributedString, NSDictionary, UIImage, UITextRange, UITextPosition;

@interface UITextView : UIScrollView <UITextInputControllerDelegate, UITextAutoscrolling, UIKeyboardInput, UITextInputTraits_Private, UITextInput, UITextLinkInteraction> {

	id _private;
	NSTextStorage* _textStorage;
	NSTextContainer* _textContainer;
	NSLayoutManager* _layoutManager;
	_UITextContainerView* _containerView;
	id _inputDelegate;
	<UITextInputTokenizer>* _tokenizer;
	UITextInputController* _inputController;
	UITextInteractionAssistant* _interactionAssistant;
	UITextInputTraits* _textInputTraits;
	UIAutoscroll* _autoscroll;
	struct {
		unsigned needsScrollToSelectionAfterLayout : 1;
		unsigned isInteractingWithLink : 1;
		unsigned linkInteractionIsLongPress : 1;
		unsigned editable : 1;
		unsigned reentrancyGuard : 1;
		unsigned usesExplicitPreferredMaxLayoutWidth : 1;
		unsigned determiningPreferredMaxLayoutWidth : 1;
		unsigned inSecondConstraintsPass : 1;
		unsigned interactiveSelectionDisabled : 1;
		unsigned selectable : 1;
	}  _tvFlags;
	id _linkInteractionItem;
	_UITextViewRestorableScrollPosition* _scrollTarget;
	CGPoint _scrollTargetOffset;
	unsigned long long _dataDetectorTypes;
	double _preferredMaxLayoutWidth;
	UIView* _inputAccessoryView;
	bool _clearsOnInsertion;
	UIView* _inputView;

}

@property (assign,setter=_setDrawsDebugBaselines:,nonatomic) bool _drawsDebugBaselines; 
@property (assign,nonatomic) <UITextViewDelegate> * delegate; 
@property (nonatomic,copy) NSString * text; 
@property (nonatomic,retain) UIFont * font; 
@property (nonatomic,retain) UIColor * textColor; 
@property (assign,nonatomic) long long textAlignment; 
@property (assign,nonatomic) NSRange selectedRange; 
@property (assign,getter=isEditable,nonatomic) bool editable; 
@property (assign,getter=isSelectable,nonatomic) bool selectable; 
@property (assign,nonatomic) unsigned long long dataDetectorTypes; 
@property (assign,nonatomic) bool allowsEditingTextAttributes; 
@property (nonatomic,copy) NSAttributedString * attributedText; 
@property (nonatomic,copy) NSDictionary * typingAttributes; 
@property (retain) UIView * inputView;                                                                                                                                   //@synthesize inputView=_inputView - In the implementation block
@property (retain) UIView * inputAccessoryView; 
@property (assign,nonatomic) bool clearsOnInsertion;                                                                                                                     //@synthesize clearsOnInsertion=_clearsOnInsertion - In the implementation block
@property (nonatomic,readonly) NSTextContainer * textContainer;                                                                                                          //@synthesize textContainer=_textContainer - In the implementation block
@property (assign,nonatomic) UIEdgeInsets textContainerInset; 
@property (nonatomic,readonly) NSLayoutManager * layoutManager;                                                                                                          //@synthesize layoutManager=_layoutManager - In the implementation block
@property (nonatomic,readonly) NSTextStorage * textStorage;                                                                                                              //@synthesize textStorage=_textStorage - In the implementation block
@property (nonatomic,copy) NSDictionary * linkTextAttributes; 
@property (assign,setter=_setInteractiveTextSelectionDisabled:,getter=_isInteractiveTextSelectionDisabled,nonatomic) bool interactiveTextSelectionDisabled; 
@property (assign,nonatomic,@dynamic) long long autocapitalizationType; 
@property (assign,nonatomic,@dynamic) long long autocorrectionType; 
@property (assign,nonatomic,@dynamic) long long spellCheckingType; 
@property (assign,nonatomic,@dynamic) long long keyboardType; 
@property (assign,nonatomic,@dynamic) long long keyboardAppearance; 
@property (assign,nonatomic,@dynamic) long long returnKeyType; 
@property (assign,nonatomic,@dynamic) bool enablesReturnKeyAutomatically; 
@property (assign,getter=isSecureTextEntry,nonatomic,@dynamic) bool secureTextEntry; 
@property (assign,nonatomic) CFCharacterSetRef textTrimmingSet; 
@property (nonatomic,retain) UIColor * insertionPointColor; 
@property (nonatomic,retain) UIColor * selectionBarColor; 
@property (nonatomic,retain) UIColor * selectionHighlightColor; 
@property (nonatomic,retain) UIImage * selectionDragDotImage; 
@property (assign,nonatomic) unsigned long long insertionPointWidth; 
@property (assign,nonatomic) int textLoupeVisibility; 
@property (assign,nonatomic) int textSelectionBehavior; 
@property (assign,nonatomic) id textSuggestionDelegate; 
@property (assign,nonatomic) bool isSingleLineDocument; 
@property (assign,nonatomic) bool contentsIsSingleValue; 
@property (assign,nonatomic) bool acceptsEmoji; 
@property (assign,nonatomic) bool forceEnableDictation; 
@property (assign,nonatomic) int emptyContentReturnKeyType; 
@property (assign,nonatomic) bool returnKeyGoesToNextResponder; 
@property (assign,nonatomic) bool acceptsFloatingKeyboard; 
@property (assign,nonatomic) bool acceptsSplitKeyboard; 
@property (assign,nonatomic) bool displaySecureTextUsingPlainText; 
@property (assign,nonatomic) bool learnsCorrections; 
@property (assign,nonatomic) int shortcutConversionType; 
@property (assign,nonatomic) bool suppressReturnKeyStyling; 
@property (assign,nonatomic) bool useInterfaceLanguageForLocalization; 
@property (assign,nonatomic) bool deferBecomingResponder; 
@property (assign,nonatomic) bool enablesReturnKeyOnNonWhiteSpaceContent; 
@property (copy) UITextRange * selectedTextRange; 
@property (nonatomic,readonly) UITextRange * markedTextRange; 
@property (nonatomic,copy) NSDictionary * markedTextStyle; 
@property (nonatomic,readonly) UITextPosition * beginningOfDocument; 
@property (nonatomic,readonly) UITextPosition * endOfDocument; 
@property (assign,nonatomic) <UITextInputDelegate> * inputDelegate; 
@property (nonatomic,readonly) <UITextInputTokenizer> * tokenizer; 
@property (nonatomic,readonly) UIView * textInputView; 
@property (assign,nonatomic) long long selectionAffinity; 
+(id)_sharedHighlightView;
+(bool)_isCompatibilityTextView;
+(id)_bestInterpretationForDictationResult:(id)arg1 ;
-(id)dd_newOperation;
-(bool)mightHaveLinks;
-(void)tapLinkAtPoint:(CGPoint)arg1 ;
-(bool)isInteractingWithLink;
-(void)startInteractionWithLinkAtPoint:(CGPoint)arg1 ;
-(void)updateInteractionWithLinkAtPoint:(CGPoint)arg1 ;
-(void)validateInteractionWithLinkAtPoint:(CGPoint)arg1 ;
-(void)cancelInteractionWithLink;
-(void)startLongInteractionWithLinkAtPoint:(CGPoint)arg1 ;
-(bool)willInteractWithLinkAtPoint:(CGPoint)arg1 ;
-(id)_interactableItemAtPoint:(CGPoint)arg1 ;
-(void)_highlightLinkAtPoint:(CGPoint)arg1 ;
-(void)_resetLinkInteraction;
-(CGRect)_presentationRectForLinkAtRange:(NSRange)arg1 ;
-(void)_finishHandlingInteraction:(id)arg1 ;
-(void)encodeRestorableStateWithCoder:(id)arg1 ;
-(void)decodeRestorableStateWithCoder:(id)arg1 ;
-(void)_setDrawsDebugBaselines:(bool)arg1 ;
-(bool)_drawsDebugBaselines;
-(Class)_printFormatterClass;
-(void)drawRect:(CGRect)arg1 forViewPrintFormatter:(id)arg2 ;
-(bool)isAccessibilityElementByDefault;
-(bool)isElementAccessibilityExposedToInterfaceBuilder;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)_populateArchivedSubviews:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)hitTest:(CGPoint)arg1 withEvent:(id)arg2 ;
-(bool)respondsToSelector:(SEL)arg1 ;
-(CGSize)_intrinsicSizeWithinSize:(CGSize)arg1 ;
-(void)setFrame:(CGRect)arg1 ;
-(void)layoutSubviews;
-(void)setBounds:(CGRect)arg1 ;
-(CGSize)sizeThatFits:(CGSize)arg1 ;
-(bool)canPerformAction:(SEL)arg1 withSender:(id)arg2 ;
-(id)undoManager;
-(bool)resignFirstResponder;
-(id)methodSignatureForSelector:(SEL)arg1 ;
-(void)increaseSize:(id)arg1 ;
-(void)decreaseSize:(id)arg1 ;
-(bool)becomeFirstResponder;
-(bool)_isDisplayingShortcutViewController;
-(bool)isEditable;
-(void)setTextColor:(id)arg1 ;
-(void)setFont:(id)arg1 ;
-(void)setTextAlignment:(long long)arg1 ;
-(id)text;
-(void)setText:(id)arg1 ;
-(double)lineHeight;
-(bool)canBecomeFirstResponder;
-(void)tintColorDidChange;
-(void)setScrollEnabled:(bool)arg1 ;
-(void)_scrollViewAnimationEnded:(id)arg1 finished:(bool)arg2 ;
-(CGSize)intrinsicContentSize;
-(void)setAttributedText:(id)arg1 ;
-(id)attributedText;
-(id)font;
-(void)_updateContentSize;
-(bool)isEditing;
-(id)layoutManager;
-(void)_textStorageDidProcessEditing:(id)arg1 ;
-(id)textStorage;
-(id)interactionAssistant;
-(id)selectionView;
-(bool)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(bool)arg3 ;
-(bool)keyboardInput:(id)arg1 shouldReplaceTextInRange:(NSRange)arg2 replacementText:(id)arg3 ;
-(bool)keyboardInputShouldDelete:(id)arg1 ;
-(bool)keyboardInputChanged:(id)arg1 ;
-(void)keyboardInputChangedSelection:(id)arg1 ;
-(void)scrollSelectionToVisible:(bool)arg1 ;
-(id)textColor;
-(void)cancelAutoscroll;
-(id)textInputView;
-(NSRange)selectedRange;
-(void)setTypingAttributes:(id)arg1 ;
-(id)_textInputTraits;
-(void)takeTraitsFrom:(id)arg1 ;
-(long long)textAlignment;
-(id)typingAttributes;
-(id)beginningOfDocument;
-(id)endOfDocument;
-(id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2 ;
-(id)textInRange:(id)arg1 ;
-(id)inputDelegate;
-(void)setSelectedRange:(NSRange)arg1 ;
-(void)addTextAlternativesDisplayStyleToRange:(NSRange)arg1 ;
-(void)setSelectedTextRange:(id)arg1 ;
-(CGRect)caretRectForPosition:(id)arg1 ;
-(void)_scrollRangeToVisible:(NSRange)arg1 animated:(bool)arg2 ;
-(bool)hasText;
-(void)insertText:(id)arg1 ;
-(void)deleteBackward;
-(void)replaceRange:(id)arg1 withText:(id)arg2 ;
-(void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2 ;
-(id)selectedTextRange;
-(id)markedTextRange;
-(id)markedTextStyle;
-(void)setMarkedTextStyle:(id)arg1 ;
-(void)setMarkedText:(id)arg1 selectedRange:(NSRange)arg2 ;
-(void)unmarkText;
-(id)positionFromPosition:(id)arg1 offset:(long long)arg2 ;
-(id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3 ;
-(long long)comparePosition:(id)arg1 toPosition:(id)arg2 ;
-(long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2 ;
-(id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2 ;
-(id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2 ;
-(void)setInputDelegate:(id)arg1 ;
-(id)tokenizer;
-(long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2 ;
-(void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2 ;
-(CGRect)firstRectForRange:(id)arg1 ;
-(id)selectionRectsForRange:(id)arg1 ;
-(id)closestPositionToPoint:(CGPoint)arg1 ;
-(id)closestPositionToPoint:(CGPoint)arg1 withinRange:(id)arg2 ;
-(id)characterRangeAtPoint:(CGPoint)arg1 ;
-(void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2 ;
-(id)insertDictationResultPlaceholder;
-(CGRect)frameForDictationResultPlaceholder:(id)arg1 ;
-(void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(bool)arg2 ;
-(id)rangeWithTextAlternatives:(id*)arg1 atPosition:(id)arg2 ;
-(id)metadataDictionariesForDictationResults;
-(void)beginSelectionChange;
-(void)endSelectionChange;
-(id)forwardingTargetForSelector:(SEL)arg1 ;
-(bool)textInput:(id)arg1 shouldChangeCharactersInRange:(NSRange)arg2 replacementText:(id)arg3 ;
-(void)textInputDidChange:(id)arg1 ;
-(void)textInputDidChangeSelection:(id)arg1 ;
-(CGRect)visibleRect;
-(UIEdgeInsets)textContainerInset;
-(id)textContainer;
-(id)linkTextAttributes;
-(id)textStylingAtPosition:(id)arg1 inDirection:(long long)arg2 ;
-(long long)selectionAffinity;
-(void)startAutoscroll:(CGPoint)arg1 ;
-(void)updateConstraints;
-(id)_containerView;
-(bool)canResignFirstResponder;
-(id)inputView;
-(id)inputAccessoryView;
-(void)setAllowsEditingTextAttributes:(bool)arg1 ;
-(void)setEditable:(bool)arg1 ;
-(void)setLineHeight:(double)arg1 ;
-(void)setDataDetectorTypes:(unsigned long long)arg1 ;
-(bool)allowsEditingTextAttributes;
-(unsigned long long)dataDetectorTypes;
-(id)webView;
-(void)setInputView:(id)arg1 ;
-(void)setInputAccessoryView:(id)arg1 ;
-(void)selectAll:(id)arg1 ;
-(CGRect)visibleTextRect;
-(void)setClearsOnInsertion:(bool)arg1 ;
-(void)makeTextWritingDirectionRightToLeft:(id)arg1 ;
-(void)makeTextWritingDirectionLeftToRight:(id)arg1 ;
-(void)replace:(id)arg1 ;
-(void)cut:(id)arg1 ;
-(void)copy:(id)arg1 ;
-(void)paste:(id)arg1 ;
-(void)_define:(id)arg1 ;
-(void)_addShortcut:(id)arg1 ;
-(void)toggleBoldface:(id)arg1 ;
-(void)toggleItalics:(id)arg1 ;
-(void)toggleUnderline:(id)arg1 ;
-(void)_showTextStyleOptions:(id)arg1 ;
-(void)setContentToHTMLString:(id)arg1 ;
-(id)initWithFrame:(CGRect)arg1 font:(id)arg2 ;
-(void)_setDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2 ;
-(bool)clearsOnInsertion;
-(void)disableClearsOnInsertion;
-(void)updateSelection;
-(id)selectedText;
-(void)select:(id)arg1 ;
-(void)_promptForReplace:(id)arg1 ;
-(void)setBecomesEditableWithGestures:(bool)arg1 ;
-(unsigned long long)marginTop;
-(void)setMarginTop:(unsigned long long)arg1 ;
-(void)scrollRangeToVisible:(NSRange)arg1 ;
-(id)automaticallySelectedOverlay;
-(bool)_isDisplayingReferenceLibraryViewController;
-(double)_preferredMaxLayoutWidth;
-(bool)_needsDoubleUpdateConstraintsPass;
-(void)nsis_valueOfVariable:(id)arg1 didChangeInEngine:(id)arg2 ;
-(void)_prepareForFirstIntrinsicContentSizeCalculation;
-(void)_prepareForSecondIntrinsicContentSizeCalculationWithEngine:(id)arg1 ;
-(void)_setInSecondConstraintsPass:(bool)arg1 ;
-(void)setContinuousSpellCheckingEnabled:(bool)arg1 ;
-(void)_insertAttributedTextWithoutClosingTyping:(id)arg1 ;
-(bool)forceEnableDictation;
-(void)setForceEnableDictation:(bool)arg1 ;
-(id)_textInputViewForAddingGestureRecognizers;
-(bool)_isInteractiveTextSelectionDisabled;
-(id)initWithFrame:(CGRect)arg1 textContainer:(id)arg2 ;
-(void)_setInteractiveTextSelectionDisabled:(bool)arg1 ;
-(void)_observedTextViewDidChange:(id)arg1 ;
-(void)setSelectable:(bool)arg1 ;
-(void)_commonInitWithTextContainer:(id)arg1 isDecoding:(bool)arg2 isEditable:(bool)arg3 isSelectable:(bool)arg4 ;
-(void)setUsesTiledViews:(bool)arg1 ;
-(bool)isSelectable;
-(bool)_shouldStartDataDetectors;
-(void)_startDataDetectors;
-(unsigned long long)_totalNumberOfTextViewsInLayoutManager;
-(NSRange)_visibleRangeWithLayout:(bool)arg1 ;
-(CGPoint)_contentOffsetForScrollToVisible:(NSRange)arg1 ;
-(void)_setScrollTarget:(id)arg1 ;
-(CGRect)visibleRectIgnoringKeyboard;
-(void)_resyncContainerFrameForNonAutolayout;
-(void)_ensureSelectionVisible;
-(bool)_shouldScrollEnclosingScrollView;
-(void)_scrollSelectionToVisibleInContainingScrollView;
-(bool)usesTiledViews;
-(double)_currentPreferredMaxLayoutWidth;
-(CGRect)_rectForScrollToVisible:(NSRange)arg1 ;
-(void)_resetDataDetectorsResults;
-(void)_restoreScrollPosition:(id)arg1 animated:(bool)arg2 ;
-(void)setTextContainerInset:(UIEdgeInsets)arg1 ;
-(void)setLinkTextAttributes:(id)arg1 ;
-(void)_selectionMayChange:(id)arg1 ;
-(void)_registerUndoOperationForReplacementWithActionName:(id)arg1 replacementText:(id)arg2 ;
-(unsigned long long)_effectiveDataDetectorTypes;
-(id)initReadonlyAndUnselectableWithFrame:(CGRect)arg1 textContainer:(id)arg2 ;
-(void)_setPreferredMaxLayoutWidth:(double)arg1 ;
-(id)_restorableScrollPosition;
-(bool)_mightHaveSelection;
-(void)_cancelDataDetectors;
@end

