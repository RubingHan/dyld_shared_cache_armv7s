/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:00:16 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIKit/_UIViewServiceDeputyDelegate.h>
#import <UIKit/NSXPCConnectionDelegate.h>
#import <UIKit/_UIViewServiceViewControllerOperatorDelegate.h>
#import <UIKit/_UIViewServiceSession_HostInterface.h>

@protocol OS_dispatch_queue;
@class NSObject, NSXPCConnection, NSMutableDictionary, NSLock, _UIAsyncInvocation, NSMutableSet;

@interface _UIViewServiceSession : NSObject <_UIViewServiceDeputyDelegate, NSXPCConnectionDelegate, _UIViewServiceViewControllerOperatorDelegate, _UIViewServiceSession_HostInterface> {

	NSObject<OS_dispatch_queue>* _queue;
	NSXPCConnection* _connection;
	NSMutableDictionary* _connectionHandlers;
	NSLock* _connectionHandlersLock;
	_UIAsyncInvocation* _invalidationInvocation;
	NSMutableSet* _deputies;
	/*^block*/ id _terminationHandler;
	int __automatic_invalidation_retainCount;
	bool __automatic_invalidation_invalidated;

}

@property (nonatomic,copy) id terminationHandler;              //@synthesize terminationHandler=_terminationHandler - In the implementation block
+(id)exportedInterfaceSupportingDeputyInterfaces:(id)arg1 ;
+(id)sessionWithConnection:(id)arg1 ;
-(oneway void)release;
-(id)retain;
-(void)dealloc;
-(unsigned long long)retainCount;
-(id)methodSignatureForSelector:(SEL)arg1 ;
-(bool)_tryRetain;
-(bool)_isDeallocating;
-(void)forwardInvocation:(id)arg1 ;
-(int)__automatic_invalidation_logic;
-(void)setTerminationHandler:(/*^block*/ id)arg1 ;
-(void)__requestConnectionToDeputyOfType:(id)arg1 withReplyHandler:(/*^block*/ id)arg2 ;
-(void)_invalidateUnconditionallyThen:(/*^block*/ id)arg1 ;
-(Class)_deputyClassForConnectionSelector:(SEL)arg1 ;
-(void)__prototype_requestConnectionToDeputyFromHostObject:(id)arg1 replyHandler:(/*^block*/ id)arg2 ;
-(void)checkDeputyForRotation:(id)arg1 ;
-(void)__requestConnectionToDeputyOfClass:(Class)arg1 fromHostObject:(R)arg2 replyHandler:(id)arg3 :(/*^block*/ id)arg4 ;
-(void)unregisterDeputyClass:(Class)arg1 ;
-(void)registerDeputyClass:(Class)arg1 withConnectionHandler:(/*^block*/ id)arg2 ;
-(void)deputy:(id)arg1 didFailWithError:(id)arg2 ;
-(void)connection:(id)arg1 handleInvocation:(id)arg2 isReply:(bool)arg3 ;
-(void)viewControllerOperator:(id)arg1 didCreateServiceViewControllerOfClass:(Class)arg2 ;
-(/*^block*/ id)terminationHandler;
@end

