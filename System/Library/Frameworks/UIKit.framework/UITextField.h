/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:00:20 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIKit/UIKit-Structs.h>
#import <UIKit/UIControl.h>
#import <UIKit/UIKeyboardInput.h>
#import <UIKit/UITextInputTraits_Private.h>
#import <UIKit/UIPopoverControllerDelegate.h>
#import <UIKit/UITextInput.h>
#import <CoreFoundation/NSCoding.h>

@class _UICascadingTextStorage, UIImage, UIView, UITextInputTraits, UIButton, UITextFieldBorderView, UITextFieldBackgroundView, UITextFieldLabel, UIImageView, UILabel, UITextInteractionAssistant, UITextFieldAtomBackgroundView, NSLayoutConstraint, _UIBaselineLayoutStrut, NSString, NSAttributedString, UIColor, UIFont, NSDictionary, UITextRange, UITextPosition;

@interface UITextField : UIControl <UIKeyboardInput, UITextInputTraits_Private, UIPopoverControllerDelegate, UITextInput, NSCoding> {

	_UICascadingTextStorage* _textStorage;
	long long _borderStyle;
	double _minimumFontSize;
	id _delegate;
	UIImage* _background;
	UIImage* _disabledBackground;
	long long _clearButtonMode;
	UIView* _leftView;
	long long _leftViewMode;
	UIView* _rightView;
	long long _rightViewMode;
	UITextInputTraits* _traits;
	UITextInputTraits* _nonAtomTraits;
	double _fullFontSize;
	UIEdgeInsets _padding;
	NSRange _selectionRangeWhenNotEditing;
	int _scrollXOffset;
	int _scrollYOffset;
	float _progress;
	UIButton* _clearButton;
	CGSize _clearButtonOffset;
	CGSize _leftViewOffset;
	CGSize _rightViewOffset;
	UITextFieldBorderView* _backgroundView;
	UITextFieldBorderView* _disabledBackgroundView;
	UITextFieldBackgroundView* _systemBackgroundView;
	UITextFieldLabel* _displayLabel;
	UITextFieldLabel* _placeholderLabel;
	UITextFieldLabel* _suffixLabel;
	UITextFieldLabel* _prefixLabel;
	UIImageView* _iconView;
	UILabel* _label;
	double _labelOffset;
	UITextInteractionAssistant* _interactionAssistant;
	UIView* _inputView;
	UIView* _inputAccessoryView;
	UITextFieldAtomBackgroundView* _atomBackgroundView;
	struct {
		unsigned verticallyCenterText : 1;
		unsigned isAnimating : 4;
		unsigned inactiveHasDimAppearance : 1;
		unsigned becomesFirstResponderOnClearButtonTap : 1;
		unsigned clearsPlaceholderOnBeginEditing : 1;
		unsigned adjustsFontSizeToFitWidth : 1;
		unsigned fieldEditorAttached : 1;
		unsigned canBecomeFirstResponder : 1;
		unsigned shouldSuppressShouldBeginEditing : 1;
		unsigned inResignFirstResponder : 1;
		unsigned undoDisabled : 1;
		unsigned explicitAlignment : 1;
		unsigned implementsCustomDrawing : 1;
		unsigned needsClearing : 1;
		unsigned suppressContentChangedNotification : 1;
		unsigned allowsEditingTextAttributes : 1;
		unsigned usesAttributedText : 1;
		unsigned backgroundViewState : 2;
		unsigned clearingBehavior : 2;
	}  _textFieldFlags;
	bool _deferringBecomeFirstResponder;
	bool _avoidBecomeFirstResponder;
	bool _setSelectionRangeAfterFieldEditorIsAttached;
	bool _originFromBaselineLayoutIsInvalid;
	NSLayoutConstraint* _baselineLayoutConstraint;
	_UIBaselineLayoutStrut* _baselineLayoutLabel;

}

@property (nonatomic,copy) NSString * text; 
@property (nonatomic,copy) NSAttributedString * attributedText; 
@property (nonatomic,retain) UIColor * textColor; 
@property (nonatomic,retain) UIFont * font; 
@property (assign,nonatomic) long long textAlignment; 
@property (assign,nonatomic) long long borderStyle;                                                                            //@synthesize borderStyle=_borderStyle - In the implementation block
@property (nonatomic,copy) NSDictionary * defaultTextAttributes; 
@property (nonatomic,copy) NSString * placeholder; 
@property (nonatomic,copy) NSAttributedString * attributedPlaceholder; 
@property (assign,nonatomic) bool clearsOnBeginEditing; 
@property (assign,nonatomic) bool adjustsFontSizeToFitWidth; 
@property (assign,nonatomic) double minimumFontSize;                                                                           //@synthesize minimumFontSize=_minimumFontSize - In the implementation block
@property (assign,nonatomic) <UITextFieldDelegate> * delegate;                                                                 //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain) UIImage * background;                                                                             //@synthesize background=_background - In the implementation block
@property (nonatomic,retain) UIImage * disabledBackground;                                                                     //@synthesize disabledBackground=_disabledBackground - In the implementation block
@property (getter=isEditing,nonatomic,readonly) bool editing; 
@property (assign,nonatomic) bool allowsEditingTextAttributes; 
@property (nonatomic,copy) NSDictionary * typingAttributes; 
@property (assign,nonatomic) long long clearButtonMode;                                                                        //@synthesize clearButtonMode=_clearButtonMode - In the implementation block
@property (nonatomic,retain) UIView * leftView;                                                                                //@synthesize leftView=_leftView - In the implementation block
@property (assign,nonatomic) long long leftViewMode;                                                                           //@synthesize leftViewMode=_leftViewMode - In the implementation block
@property (nonatomic,retain) UIView * rightView;                                                                               //@synthesize rightView=_rightView - In the implementation block
@property (assign,nonatomic) long long rightViewMode;                                                                          //@synthesize rightViewMode=_rightViewMode - In the implementation block
@property (retain) UIView * inputView;                                                                                         //@synthesize inputView=_inputView - In the implementation block
@property (retain) UIView * inputAccessoryView; 
@property (assign,nonatomic) bool clearsOnInsertion; 
@property (setter=_setBaselineLayoutConstraint:,nonatomic,retain) NSLayoutConstraint * _baselineLayoutConstraint;              //@synthesize baselineLayoutConstraint=_baselineLayoutConstraint - In the implementation block
@property (setter=_setBaselineLayoutLabel:,nonatomic,retain) _UIBaselineLayoutStrut * _baselineLayoutLabel;                    //@synthesize baselineLayoutLabel=_baselineLayoutLabel - In the implementation block
@property (assign,nonatomic,@dynamic) long long autocapitalizationType; 
@property (assign,nonatomic,@dynamic) long long autocorrectionType; 
@property (assign,nonatomic,@dynamic) long long spellCheckingType; 
@property (assign,nonatomic,@dynamic) long long keyboardType; 
@property (assign,nonatomic,@dynamic) long long keyboardAppearance; 
@property (assign,nonatomic,@dynamic) long long returnKeyType; 
@property (assign,nonatomic,@dynamic) bool enablesReturnKeyAutomatically; 
@property (assign,getter=isSecureTextEntry,nonatomic,@dynamic) bool secureTextEntry; 
@property (assign,nonatomic) CFCharacterSetRef textTrimmingSet; 
@property (nonatomic,retain) UIColor * insertionPointColor; 
@property (nonatomic,retain) UIColor * selectionBarColor; 
@property (nonatomic,retain) UIColor * selectionHighlightColor; 
@property (nonatomic,retain) UIImage * selectionDragDotImage; 
@property (assign,nonatomic) unsigned long long insertionPointWidth; 
@property (assign,nonatomic) int textLoupeVisibility; 
@property (assign,nonatomic) int textSelectionBehavior; 
@property (assign,nonatomic) id textSuggestionDelegate; 
@property (assign,nonatomic) bool isSingleLineDocument; 
@property (assign,nonatomic) bool contentsIsSingleValue; 
@property (assign,nonatomic) bool acceptsEmoji; 
@property (assign,nonatomic) bool forceEnableDictation; 
@property (assign,nonatomic) int emptyContentReturnKeyType; 
@property (assign,nonatomic) bool returnKeyGoesToNextResponder; 
@property (assign,nonatomic) bool acceptsFloatingKeyboard; 
@property (assign,nonatomic) bool acceptsSplitKeyboard; 
@property (assign,nonatomic) bool displaySecureTextUsingPlainText; 
@property (assign,nonatomic) bool learnsCorrections; 
@property (assign,nonatomic) int shortcutConversionType; 
@property (assign,nonatomic) bool suppressReturnKeyStyling; 
@property (assign,nonatomic) bool useInterfaceLanguageForLocalization; 
@property (assign,nonatomic,@dynamic) bool deferBecomingResponder; 
@property (assign,nonatomic) bool enablesReturnKeyOnNonWhiteSpaceContent; 
@property (copy) UITextRange * selectedTextRange; 
@property (nonatomic,readonly) UITextRange * markedTextRange; 
@property (nonatomic,copy) NSDictionary * markedTextStyle; 
@property (nonatomic,readonly) UITextPosition * beginningOfDocument; 
@property (nonatomic,readonly) UITextPosition * endOfDocument; 
@property (assign,nonatomic) <UITextInputDelegate> * inputDelegate; 
@property (nonatomic,readonly) <UITextInputTokenizer> * tokenizer; 
@property (nonatomic,readonly) UIView * textInputView; 
@property (assign,nonatomic) long long selectionAffinity; 
+(bool)_isDisplayingShortcutViewController;
+(void)_preheatDictationIfNecessary;
+(bool)_isCompatibilityTextField;
-(void)configureFromScriptTextField:(id)arg1 ;
-(bool)isReallyFirstResponder;
-(void)encodeRestorableStateWithCoder:(id)arg1 ;
-(void)decodeRestorableStateWithCoder:(id)arg1 ;
-(id)_scriptingInfo;
-(bool)_isPasscodeStyle;
-(double)_passcodeStyleAlpha;
-(void)_updateForPasscodeAppearance;
-(void)_setPasscodeStyleAlpha:(double)arg1 ;
-(bool)isAccessibilityElementByDefault;
-(bool)isElementAccessibilityExposedToInterfaceBuilder;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)dealloc;
-(void)drawRect:(CGRect)arg1 ;
-(void)setBackgroundColor:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(id)backgroundColor;
-(void)_populateArchivedSubviews:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)setDelegate:(id)arg1 ;
-(id)hitTest:(CGPoint)arg1 withEvent:(id)arg2 ;
-(bool)respondsToSelector:(SEL)arg1 ;
-(CGSize)_intrinsicSizeWithinSize:(CGSize)arg1 ;
-(void)setFrame:(CGRect)arg1 ;
-(void)layoutSubviews;
-(void)setBounds:(CGRect)arg1 ;
-(CGSize)sizeThatFits:(CGSize)arg1 ;
-(id)delegate;
-(id)_backgroundView;
-(bool)canPerformAction:(SEL)arg1 withSender:(id)arg2 ;
-(void)_physicalButtonsBegan:(id)arg1 withEvent:(id)arg2 ;
-(id)undoManager;
-(bool)resignFirstResponder;
-(id)methodSignatureForSelector:(SEL)arg1 ;
-(void)touchesCancelled:(id)arg1 withEvent:(id)arg2 ;
-(void)increaseSize:(id)arg1 ;
-(void)decreaseSize:(id)arg1 ;
-(bool)becomeFirstResponder;
-(void)_physicalButtonsEnded:(id)arg1 withEvent:(id)arg2 ;
-(void)_physicalButtonsCancelled:(id)arg1 withEvent:(id)arg2 ;
-(bool)isEditable;
-(void)setTextColor:(id)arg1 ;
-(void)setFont:(id)arg1 ;
-(void)setTextAlignment:(long long)arg1 ;
-(id)text;
-(void)setText:(id)arg1 ;
-(void)setShadowColor:(id)arg1 ;
-(void)setShadowOffset:(CGSize)arg1 ;
-(void)touchesEnded:(id)arg1 withEvent:(id)arg2 ;
-(void)setCenter:(CGPoint)arg1 ;
-(void)_windowBecameKey;
-(void)_encodeBackgroundColorWithCoder:(id)arg1 ;
-(bool)_canDrawContent;
-(bool)canBecomeFirstResponder;
-(void)tintColorDidChange;
-(bool)_needsOriginRecheckForConstraintsLayout;
-(void)willMoveToWindow:(id)arg1 ;
-(void)setEnabled:(bool)arg1 ;
-(void)setProgress:(float)arg1 ;
-(CGSize)shadowOffset;
-(void)setAttributedText:(id)arg1 ;
-(id)shadowColor;
-(void)setContentVerticalAlignment:(long long)arg1 ;
-(id)attributedText;
-(void)_updateLabel;
-(void)setAdjustsFontSizeToFitWidth:(bool)arg1 ;
-(bool)adjustsFontSizeToFitWidth;
-(id)font;
-(bool)isEditing;
-(id)textLabel;
-(id)_fieldEditor;
-(bool)_shouldObscureInput;
-(CGPoint)_originForTextFieldLabel:(id)arg1 ;
-(id)interactionAssistant;
-(id)selectionView;
-(bool)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(bool)arg3 ;
-(bool)keyboardInput:(id)arg1 shouldReplaceTextInRange:(NSRange)arg2 replacementText:(id)arg3 ;
-(bool)keyboardInputShouldDelete:(id)arg1 ;
-(bool)keyboardInputChanged:(id)arg1 ;
-(void)keyboardInputChangedSelection:(id)arg1 ;
-(void)fieldEditorDidChange:(id)arg1 ;
-(NSRange)fieldEditor:(id)arg1 willChangeSelectionFromCharacterRange:(NSRange)arg2 toCharacterRange:(NSRange)arg3 ;
-(bool)fieldEditor:(id)arg1 shouldInsertText:(id)arg2 replacingRange:(NSRange)arg3 ;
-(void)_sanitizeText:(id)arg1 ;
-(void)selectAllFromFieldEditor:(id)arg1 ;
-(id)textInputTraits;
-(id)textColor;
-(CGRect)_selectionClipRect;
-(void)cancelAutoscroll;
-(CGRect)editingRectForBounds:(CGRect)arg1 ;
-(id)textInputView;
-(void)willDetachFieldEditor:(id)arg1 ;
-(void)setTypingAttributes:(id)arg1 ;
-(void)takeTraitsFrom:(id)arg1 ;
-(CGRect)editRect;
-(void)willAttachFieldEditor:(id)arg1 ;
-(void)attachFieldEditor:(id)arg1 ;
-(long long)textAlignment;
-(id)typingAttributes;
-(id)beginningOfDocument;
-(id)endOfDocument;
-(id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2 ;
-(id)textInRange:(id)arg1 ;
-(id)inputDelegate;
-(void)setSelectedTextRange:(id)arg1 ;
-(CGRect)caretRectForPosition:(id)arg1 ;
-(void)_scrollRangeToVisible:(NSRange)arg1 animated:(bool)arg2 ;
-(bool)drawsAsAtom;
-(int)atomStyle;
-(bool)hasText;
-(void)clearText;
-(void)insertText:(id)arg1 ;
-(void)deleteBackward;
-(void)replaceRange:(id)arg1 withText:(id)arg2 ;
-(void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2 ;
-(id)selectedTextRange;
-(id)markedTextRange;
-(id)markedTextStyle;
-(void)setMarkedTextStyle:(id)arg1 ;
-(void)setMarkedText:(id)arg1 selectedRange:(NSRange)arg2 ;
-(void)unmarkText;
-(id)positionFromPosition:(id)arg1 offset:(long long)arg2 ;
-(id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3 ;
-(long long)comparePosition:(id)arg1 toPosition:(id)arg2 ;
-(long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2 ;
-(id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2 ;
-(id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2 ;
-(void)setInputDelegate:(id)arg1 ;
-(id)tokenizer;
-(long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2 ;
-(void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2 ;
-(CGRect)firstRectForRange:(id)arg1 ;
-(id)selectionRectsForRange:(id)arg1 ;
-(id)closestPositionToPoint:(CGPoint)arg1 ;
-(id)closestPositionToPoint:(CGPoint)arg1 withinRange:(id)arg2 ;
-(id)characterRangeAtPoint:(CGPoint)arg1 ;
-(void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2 ;
-(id)insertDictationResultPlaceholder;
-(CGRect)frameForDictationResultPlaceholder:(id)arg1 ;
-(void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(bool)arg2 ;
-(id)rangeWithTextAlternatives:(id*)arg1 atPosition:(id)arg2 ;
-(id)metadataDictionariesForDictationResults;
-(void)beginSelectionChange;
-(void)endSelectionChange;
-(void)setSecureTextEntry:(bool)arg1 ;
-(id)forwardingTargetForSelector:(SEL)arg1 ;
-(id)textStylingAtPosition:(id)arg1 inDirection:(long long)arg2 ;
-(void)setKeyboardAppearance:(long long)arg1 ;
-(void)startAutoscroll:(CGPoint)arg1 ;
-(void)selectAll;
-(NSRange)selectionRange;
-(unsigned long long)characterOffsetAtPoint:(CGPoint)arg1 ;
-(bool)hasMarkedText;
-(id)_inputController;
-(void)setPlaceholder:(id)arg1 ;
-(void)updateConstraints;
-(void)setAnimating:(bool)arg1 ;
-(void)_becomeFirstResponder;
-(void)_resignFirstResponder;
-(bool)canResignFirstResponder;
-(id)inputView;
-(id)inputAccessoryView;
-(bool)_requiresKeyboardResetOnReload;
-(void)setAttributes:(id)arg1 range:(NSRange)arg2 ;
-(id)viewForBaselineLayout;
-(void)setLabel:(id)arg1 ;
-(void)setAllowsEditingTextAttributes:(bool)arg1 ;
-(bool)allowsEditingTextAttributes;
-(id)webView;
-(id)_proxyTextInput;
-(void)setInputView:(id)arg1 ;
-(void)setInputAccessoryView:(id)arg1 ;
-(void)selectAll:(id)arg1 ;
-(void)setClearsOnInsertion:(bool)arg1 ;
-(void)layoutTilesNow;
-(void)makeTextWritingDirectionRightToLeft:(id)arg1 ;
-(void)makeTextWritingDirectionLeftToRight:(id)arg1 ;
-(void)replace:(id)arg1 ;
-(void)cut:(id)arg1 ;
-(void)copy:(id)arg1 ;
-(void)paste:(id)arg1 ;
-(void)_define:(id)arg1 ;
-(void)_addShortcut:(id)arg1 ;
-(void)toggleBoldface:(id)arg1 ;
-(void)toggleItalics:(id)arg1 ;
-(void)toggleUnderline:(id)arg1 ;
-(void)_showTextStyleOptions:(id)arg1 ;
-(bool)hasSelection;
-(CGPoint)constrainedPoint:(CGPoint)arg1 ;
-(bool)clearsOnInsertion;
-(void)disableClearsOnInsertion;
-(id)selectedText;
-(void)select:(id)arg1 ;
-(void)_promptForReplace:(id)arg1 ;
-(id)supportedPasteboardTypesForCurrentSelection;
-(id)documentFragmentForPasteboardItemAtIndex:(long long)arg1 ;
-(id)automaticallySelectedOverlay;
-(bool)_isDisplayingReferenceLibraryViewController;
-(void)drawTextInRect:(CGRect)arg1 ;
-(void)setMinimumFontSize:(double)arg1 ;
-(double)minimumFontSize;
-(void)setShadowBlur:(double)arg1 ;
-(double)shadowBlur;
-(CGRect)textRectForBounds:(CGRect)arg1 ;
-(void)setIcon:(id)arg1 ;
-(void)setBorderStyle:(long long)arg1 ;
-(CGRect)iconRect;
-(CGRect)rightViewRectForBounds:(CGRect)arg1 ;
-(id)_placeholderColor;
-(CGRect)_availableTextRectExcludingButtonsForBounds:(CGRect)arg1 ;
-(void)setPaddingTop:(float)arg1 paddingLeft:(float)arg2 ;
-(bool)_shouldSendContentChangedNotificationsIfOnlyMarkedTextChanged;
-(void)setLeftView:(id)arg1 ;
-(void)setRightView:(id)arg1 ;
-(id)leftView;
-(id)rightView;
-(void)setContinuousSpellCheckingEnabled:(bool)arg1 ;
-(void)_startDictation;
-(void)_stopDictation;
-(id)_dictationLanguage;
-(void)_insertAttributedTextWithoutClosingTyping:(id)arg1 ;
-(void)_clearButtonClicked:(id)arg1 ;
-(void)setUndoEnabled:(bool)arg1 ;
-(void)setTextCentersVertically:(bool)arg1 ;
-(void)setTextCentersHorizontally:(bool)arg1 ;
-(id)background;
-(void)setBackground:(id)arg1 ;
-(id)placeholder;
-(CGSize)_leftViewOffset;
-(void)_setLeftViewOffset:(CGSize)arg1 ;
-(CGSize)clearButtonOffset;
-(void)setClearButtonOffset:(CGSize)arg1 ;
-(float)paddingTop;
-(void)setPaddingTop:(float)arg1 ;
-(void)setRightViewMode:(long long)arg1 ;
-(void)_setRightViewOffset:(CGSize)arg1 ;
-(bool)_partsShouldBeMini;
-(CGRect)leftViewRectForBounds:(CGRect)arg1 ;
-(id)_systemBackgroundView;
-(void)__resumeBecomeFirstResponder;
-(void)_activateSelectionView;
-(id)_placeholderLabel;
-(void)setLeftViewMode:(long long)arg1 ;
-(void)setDisabledBackground:(id)arg1 ;
-(void)setClearButtonMode:(long long)arg1 ;
-(id)searchText;
-(void)_setEnabled:(bool)arg1 animated:(bool)arg2 ;
-(void)setPaddingLeft:(float)arg1 ;
-(id)_clearButton;
-(void)_updateButtons;
-(id)_clearButtonImageForState:(unsigned long long)arg1 ;
-(float)paddingLeft;
-(bool)_showsClearButtonWhenNonEmpty:(bool)arg1 ;
-(bool)_fieldEditorAttached;
-(CGRect)placeholderRectForBounds:(CGRect)arg1 ;
-(CGSize)_clearButtonSize;
-(CGRect)clearButtonRectForBounds:(CGRect)arg1 ;
-(CGRect)_availableTextRectForBounds:(CGRect)arg1 forEditing:(bool)arg2 ;
-(bool)_hasSuffixField;
-(CGRect)_suffixFrame;
-(bool)_showsLeftView;
-(long long)_currentTextAlignment;
-(float)paddingRight;
-(void)_updateBackgroundViewsAnimated:(bool)arg1 ;
-(void)_clearBackgroundViews;
-(long long)_suffixLabelTextAlignment;
-(Class)_placeholderLabelClass;
-(Class)_systemBackgroundViewClass;
-(id)_text;
-(int)clearingBehavior;
-(void)setDrawsAsAtom:(bool)arg1 ;
-(void)setClearingBehavior:(int)arg1 ;
-(bool)_useGesturesForEditableContent;
-(id)_textInputViewForAddingGestureRecognizers;
-(void)_setSuffix:(id)arg1 withColor:(id)arg2 ;
-(CGRect)closestCaretRectInMarkedTextRangeForPoint:(CGPoint)arg1 ;
-(unsigned long long)offsetInMarkedTextForSelection:(id)arg1 ;
-(void)setPaddingBottom:(float)arg1 ;
-(void)setPaddingRight:(float)arg1 ;
-(float)paddingBottom;
-(void)setClearsOnBeginEditing:(bool)arg1 ;
-(CGSize)_textSize;
-(void)_selectionMayChange:(id)arg1 ;
-(void)_drawTextInRect:(CGRect)arg1 forLabel:(id)arg2 ;
-(void)setAtomStyle:(int)arg1 ;
-(void)_setBaselineLayoutConstraint:(id)arg1 ;
-(id)createTextLabelWithTextColor:(id)arg1 ;
-(CGRect)_frameForLabel:(id)arg1 inTextRect:(CGRect)arg2 ;
-(id)createPlaceholderLabelWithFont:(id)arg1 andTextAlignment:(long long)arg2 ;
-(void)_updateTextLabel;
-(bool)clearsOnBeginEditing;
-(void)_stopObservingFieldEditorScroll;
-(void)_setNeedsStyleRecalc;
-(double)_baselineLayoutConstraintConstant;
-(void)_sizeChanged:(bool)arg1 ;
-(CGSize)_textSizeUsingFullFontSize:(bool)arg1 ;
-(void)_createBaselineLayoutLabelIfNecessary;
-(long long)clearButtonMode;
-(id)clearButton;
-(bool)_shouldEndEditing;
-(void)scrollTextFieldToVisible;
-(void)_initialScrollDidFinish:(id)arg1 ;
-(void)setSelectionRange:(NSRange)arg1 ;
-(id)customOverlayContainer;
-(void)_syncTypingAttributesWithDefaultAttribute:(id)arg1 ;
-(double)actualMinimumFontSize;
-(id)_copyFont:(id)arg1 newSize:(float)arg2 maxSize:(float)arg3 ;
-(void)_updateAtomTextColor;
-(CGRect)clearButtonRect;
-(bool)_showsClearButton:(bool)arg1 ;
-(bool)_showsRightView;
-(void)setFont:(id)arg1 fullFontSize:(float)arg2 ;
-(bool)_heightShouldBeMini;
-(long long)borderStyle;
-(bool)_hasContent;
-(bool)_showsAtomBackground;
-(CGRect)_atomBackgroundViewFrame;
-(bool)_showsClearButtonWhenEmpty;
-(long long)leftViewMode;
-(long long)rightViewMode;
-(CGRect)_baselineLeftViewRectForBounds:(CGRect)arg1 ;
-(float)_marginTop;
-(void)_setUpBaselineLayoutConstraints;
-(bool)_isShowingPlaceholder;
-(void)_updatePlaceholderPosition;
-(void)_updateAtomBackground;
-(void)_updateAutosizeStyleIfNeeded;
-(bool)clearsPlaceholderOnBeginEditing;
-(CGRect)_prefixFrame;
-(CGRect)borderRectForBounds:(CGRect)arg1 ;
-(id)_attributedText;
-(bool)_textNeedsSanitizing:(id)arg1 ;
-(void)finishedSettingTextOrAttributedText;
-(void)_setAttributedText:(id)arg1 onFieldEditorAndSetCaretSelectionAfterText:(bool)arg2 ;
-(void)_invalidateBaselineLayoutConstraints;
-(void)createPlaceholderIfNecessary;
-(void)finishedSettingPlaceholder;
-(void)drawPlaceholderInRect:(CGRect)arg1 ;
-(void)drawSuffixInRect:(CGRect)arg1 ;
-(void)drawPrefixInRect:(CGRect)arg1 ;
-(void)_applicationResuming:(id)arg1 ;
-(void)_endedEditing;
-(void)drawBorder:(CGRect)arg1 ;
-(bool)_implementsCustomDrawing;
-(bool)isUndoEnabled;
-(CGRect)adjustedCaretRectForCaretRect:(CGRect)arg1 ;
-(void)_createInteractionAssistant;
-(bool)_isShowingPrefix;
-(id)actualFont;
-(CGPoint)_scrollOffset;
-(CGSize)_rightViewOffset;
-(void)_setSystemBackgroundViewActive:(bool)arg1 ;
-(id)_placeholderView;
-(id)_textLabelView;
-(void)setDefaultTextAttributes:(id)arg1 ;
-(id)defaultTextAttributes;
-(void)setAttributedPlaceholder:(id)arg1 ;
-(id)attributedPlaceholder;
-(void)_updateSuffix:(id)arg1 ;
-(void)_setPrefix:(id)arg1 ;
-(void)setClearsPlaceholderOnBeginEditing:(bool)arg1 ;
-(void)fieldEditorDidChangeSelection:(id)arg1 ;
-(id)_dictationInterpretations;
-(void)setAutoresizesTextToFit:(bool)arg1 ;
-(void)setTextAutorresizesToFit:(bool)arg1 ;
-(void)setClearButtonStyle:(int)arg1 ;
-(CGRect)textRect;
-(void)setInactiveHasDimAppearance:(bool)arg1 ;
-(void)_clearSelectionUI;
-(void)_resetSelectionUI;
-(void)setBecomesFirstResponderOnClearButtonTap:(bool)arg1 ;
-(void)setLabelOffset:(float)arg1 ;
-(id)selectedAttributedText;
-(void)_setBackgroundStrokeColor:(id)arg1 ;
-(void)_setBackgroundFillColor:(id)arg1 ;
-(void)_setBackgroundStrokeWidth:(double)arg1 ;
-(bool)_inPopover;
-(id)_baselineLayoutConstraint;
-(id)_baselineLayoutLabel;
-(void)_setBaselineLayoutLabel:(id)arg1 ;
-(id)disabledBackground;
@end

