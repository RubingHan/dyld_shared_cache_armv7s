/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:00:03 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIKit/UIKit-Structs.h>
#import <UIKit/UIView.h>
#import <CoreFoundation/NSCoding.h>

@class UIColor, NSAttributedString, NSMutableDictionary, _UILabelScaledMetrics, NSString, UIFont;

@interface UILabel : UIView <NSCoding> {

	CGSize _size;
	UIColor* _highlightedColor;
	long long _numberOfLines;
	long long _measuredNumberOfLines;
	double _lastLineBaseline;
	double _minimumScaleFactor;
	id _content;
	NSAttributedString* _synthesizedAttributedText;
	NSMutableDictionary* _defaultAttributes;
	double _minimumFontSize;
	long long _lineSpacing;
	id _layout;
	_UILabelScaledMetrics* _scaledMetrics;
	struct {
		unsigned unused1 : 3;
		unsigned highlighted : 1;
		unsigned autosizeTextToFit : 1;
		unsigned autotrackTextToFit : 1;
		unsigned baselineAdjustment : 2;
		unsigned unused2 : 2;
		unsigned enabled : 1;
		unsigned wordRoundingEnabled : 1;
		unsigned explicitAlignment : 1;
		unsigned marqueeEnabled : 1;
		unsigned marqueeRunable : 1;
		unsigned marqueeRequired : 1;
		unsigned drawsLetterpress : 1;
		unsigned unused3 : 1;
		unsigned usesExplicitPreferredMaxLayoutWidth : 1;
		unsigned determiningPreferredMaxLayoutWidth : 1;
		unsigned inSecondConstraintsPass : 1;
		unsigned drawsDebugBaselines : 1;
		unsigned explicitBaselineOffset : 1;
		unsigned usesSimpleTextEffects : 1;
		unsigned isComplexString : 1;
	}  _textLabelFlags;
	bool _wantsUnderlineForAccessibilityButtonShapesEnabled;
	double _preferredMaxLayoutWidth;

}

@property (assign,setter=_setWantsUnderlineForAccessibilityButtonShapesEnabled:,nonatomic,@dynamic) bool _wantsUnderlineForAccessibilityButtonShapesEnabled; 
@property (nonatomic,readonly) double _capOffsetFromBoundsTop; 
@property (nonatomic,readonly) double _firstLineBaselineOffsetFromBoundsTop; 
@property (assign,setter=_setFirstLineCapFrameOriginY:,nonatomic) double _firstLineCapFrameOriginY; 
@property (assign,setter=_setFirstLineBaselineFrameOriginY:,nonatomic) double _firstLineBaselineFrameOriginY; 
@property (assign,setter=_setLastLineBaselineFrameOriginY:,nonatomic) double _lastLineBaselineFrameOriginY; 
@property (assign,setter=_setDrawsDebugBaselines:,nonatomic) bool _drawsDebugBaselines; 
@property (nonatomic,copy) NSString * text; 
@property (nonatomic,retain) UIFont * font; 
@property (nonatomic,retain) UIColor * textColor; 
@property (nonatomic,retain) UIColor * shadowColor; 
@property (assign,nonatomic) CGSize shadowOffset; 
@property (assign,nonatomic) long long textAlignment; 
@property (assign,nonatomic) long long lineBreakMode; 
@property (nonatomic,copy) NSAttributedString * attributedText; 
@property (nonatomic,retain) UIColor * highlightedTextColor; 
@property (assign,getter=isHighlighted,nonatomic) bool highlighted; 
@property (assign,getter=isUserInteractionEnabled,nonatomic,@dynamic) bool userInteractionEnabled; 
@property (assign,getter=isEnabled,nonatomic) bool enabled; 
@property (assign,nonatomic) long long numberOfLines; 
@property (assign,nonatomic) bool adjustsFontSizeToFitWidth; 
@property (assign,nonatomic) bool adjustsLetterSpacingToFitWidth; 
@property (assign,nonatomic) double minimumFontSize; 
@property (assign,nonatomic) long long baselineAdjustment; 
@property (assign,nonatomic) double minimumScaleFactor;                                                                                                                   //@synthesize minimumScaleFactor=_minimumScaleFactor - In the implementation block
@property (assign,nonatomic) double preferredMaxLayoutWidth;                                                                                                              //@synthesize preferredMaxLayoutWidth=_preferredMaxLayoutWidth - In the implementation block
@property (assign,setter=_setWantsUnderlineForAccessibilityButtonShapesEnabled:,nonatomic) bool _wantsUnderlineForAccessibilityButtonShapesEnabled;                       //@synthesize wantsUnderlineForAccessibilityButtonShapesEnabled=_wantsUnderlineForAccessibilityButtonShapesEnabled - In the implementation block
@property (nonatomic,readonly) double _lastLineBaseline; 
@property (assign,nonatomic) long long lineSpacing; 
@property (setter=_setSynthesizedAttributedText:,getter=_synthesizedAttributedText,nonatomic,retain) NSAttributedString * _synthesizedAttributedText; 
+(CGSize)_legacy_adjustSizeForWebKitConstraining:(CGSize)arg1 withFont:(id)arg2 ;
+(id)defaultFont;
+(id)_defaultAttributes;
-(CGPoint)rc_baselinePoint;
-(id)textAttributes;
-(void)setTextAttributes:(id)arg1 ;
-(bool)labelTextIsTruncated;
-(bool)_isTextFieldCenteredLabel;
-(id)_image;
-(unsigned long long)defaultAccessibilityTraits;
-(bool)isAccessibilityElementByDefault;
-(bool)isElementAccessibilityExposedToInterfaceBuilder;
-(id)color;
-(CGSize)textSizeForWidth:(double)arg1 ;
-(void)_setColor:(id)arg1 ;
-(void)setAutotrackTextToFit:(bool)arg1 ;
-(bool)autotrackTextToFit;
-(void)setColor:(id)arg1 ;
-(void)setCentersHorizontally:(bool)arg1 ;
-(bool)centersHorizontally;
-(CGRect)textRectForBounds:(CGRect)arg1 ;
-(void)drawContentsInRect:(CGRect)arg1 ;
-(void)setRawSize:(CGSize)arg1 ;
-(CGSize)rawSize;
-(void)_didChangeFromIdiom:(long long)arg1 onScreen:(id)arg2 traverseHierarchy:(bool)arg3 ;
-(void)_accessibilityButtonShapesParametersDidChange;
-(void)_accessibilityButtonShapesChangedNotification:(id)arg1 ;
-(bool)_shouldShowAccessibilityButtonShapesUnderline;
-(void)_setWantsUnderlineForAccessibilityButtonShapesEnabled:(bool)arg1 ;
-(long long)_measuredNumberOfLines;
-(double)_capOffsetFromBoundsTop;
-(double)_firstLineBaselineOffsetFromBoundsTop;
-(double)_firstLineCapFrameOriginY;
-(void)_setFirstLineCapFrameOriginY:(double)arg1 ;
-(double)_firstLineBaselineFrameOriginY;
-(void)_setFirstLineBaselineFrameOriginY:(double)arg1 ;
-(double)_lastLineBaselineFrameOriginY;
-(void)_setLastLineBaselineFrameOriginY:(double)arg1 ;
-(id)_scriptingInfo;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)setUserInteractionEnabled:(bool)arg1 ;
-(void)dealloc;
-(void)drawRect:(CGRect)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(CGSize)_intrinsicSizeWithinSize:(CGSize)arg1 ;
-(void)setFrame:(CGRect)arg1 ;
-(void)_setTextColor:(id)arg1 ;
-(void)setBounds:(CGRect)arg1 ;
-(CGSize)sizeThatFits:(CGSize)arg1 ;
-(void)setTextColor:(id)arg1 ;
-(void)setFont:(id)arg1 ;
-(void)setTextAlignment:(long long)arg1 ;
-(id)text;
-(void)setText:(id)arg1 ;
-(void)setLineBreakMode:(long long)arg1 ;
-(void)setShadowColor:(id)arg1 ;
-(void)setShadowOffset:(CGSize)arg1 ;
-(double)_minimumFontSize;
-(void)_commonInit;
-(bool)isEnabled;
-(double)_baselineOffsetFromBottom;
-(void)setEnabled:(bool)arg1 ;
-(void)_setLineBreakMode:(long long)arg1 ;
-(CGSize)shadowOffset;
-(CGSize)intrinsicContentSize;
-(id)_synthesizedAttributedText;
-(void)setAttributedText:(id)arg1 ;
-(id)shadowColor;
-(void)_setFont:(id)arg1 ;
-(void)setHighlighted:(bool)arg1 ;
-(bool)isHighlighted;
-(id)attributedText;
-(void)setAdjustsFontSizeToFitWidth:(bool)arg1 ;
-(bool)adjustsFontSizeToFitWidth;
-(void)setMinimumScaleFactor:(double)arg1 ;
-(id)font;
-(id)textColor;
-(long long)textAlignment;
-(void)setNumberOfLines:(long long)arg1 ;
-(void)_setMinimumFontSize:(double)arg1 ;
-(void)setBaselineAdjustment:(long long)arg1 ;
-(void)_setWantsUnderlineForAccessibilityButtonShapesEnabled:(bool)arg1 ;
-(void)setHighlightedTextColor:(id)arg1 ;
-(void)updateConstraints;
-(CGSize)textSize;
-(id)_disabledFontColor;
-(id)_associatedScalingLabel;
-(double)_actualScaleFactor;
-(id)_defaultAttributes;
-(void)_invalidateSynthesizedAttributedTextAndLayout;
-(id)_shadow;
-(id)currentTextColor;
-(id)_compatibilityAttributedString;
-(id)_synthesizedTextAttributes;
-(void)_invalidateAsNeededForNewSize:(CGSize)arg1 oldSize:(CGSize)arg2 ;
-(void)_setText:(id)arg1 ;
-(void)_setTextAlignment:(long long)arg1 ;
-(long long)lineBreakMode;
-(bool)_attributedStringHasAttributesNotCoveredByPrimitives;
-(double)minimumScaleFactor;
-(bool)adjustsLetterSpacingToFitWidth;
-(void)setLetterpressStyle:(id)arg1 ;
-(id)_stringDrawingContext;
-(CGRect)_textRectForBounds:(CGRect)arg1 limitedToNumberOfLines:(long long)arg2 includingShadow:(bool)arg3 ;
-(bool)_shouldCeilSizeToViewScale;
-(void)_invalidateTextSize;
-(void)_baselineOffsetDidChange;
-(void)_setAttributedText:(id)arg1 andTakeOwnership:(bool)arg2 ;
-(bool)_updateScaledMetricsForRect:(CGRect)arg1 ;
-(id)highlightedTextColor;
-(void)_setShadow:(id)arg1 ;
-(void)_drawTextInRect:(CGRect)arg1 baselineCalculationOnly:(bool)arg2 ;
-(double)_preferredMaxLayoutWidth;
-(bool)_needsDoubleUpdateConstraintsPass;
-(void)nsis_valueOfVariable:(id)arg1 didChangeInEngine:(id)arg2 ;
-(void)_prepareForFirstIntrinsicContentSizeCalculation;
-(void)_prepareForSecondIntrinsicContentSizeCalculationWithEngine:(id)arg1 ;
-(CGRect)textRectForBounds:(CGRect)arg1 limitedToNumberOfLines:(long long)arg2 ;
-(id)letterpressStyle;
-(void)_drawFullMarqueeTextInRect:(CGRect)arg1 ;
-(void)_startMarqueeIfNecessary;
-(long long)lineSpacing;
-(void)drawTextInRect:(CGRect)arg1 ;
-(long long)numberOfLines;
-(void)setMarqueeRunning:(bool)arg1 ;
-(id)_siblingMarqueeLabels;
-(double)_maximumMarqueeTextWidth;
-(void)_coordinateBeginTimeForMarqueeAnimations:(double)arg1 ;
-(bool)marqueeRunning;
-(void)_startMarquee;
-(void)_stopMarqueeWithRedisplay:(bool)arg1 ;
-(bool)_drawsUnderline;
-(void)setPreferredMaxLayoutWidth:(double)arg1 ;
-(void)_setDefaultAttributes:(id)arg1 ;
-(void)_invalidateDefaultAttributes;
-(void)_setSynthesizedAttributedText:(id)arg1 ;
-(void)setMinimumFontSize:(double)arg1 ;
-(double)minimumFontSize;
-(void)_setShadowUIOffset:(UIOffset)arg1 ;
-(void)setShadowBlur:(double)arg1 ;
-(double)shadowBlur;
-(void)setLineSpacing:(long long)arg1 ;
-(void)setAdjustsLetterSpacingToFitWidth:(bool)arg1 ;
-(void)_setDrawsDebugBaselines:(bool)arg1 ;
-(bool)_drawsDebugBaselines;
-(long long)baselineAdjustment;
-(double)_lastLineBaseline;
-(void)_setInSecondConstraintsPass:(bool)arg1 ;
-(void)_setWordRoundingEnabled:(bool)arg1 ;
-(bool)_shouldDrawUnderlinesLikeWebKit;
-(void)setMarqueeEnabled:(bool)arg1 ;
-(void)setDrawsLetterpress:(bool)arg1 ;
-(bool)drawsLetterpress;
-(void)setDrawsUnderline:(bool)arg1 ;
-(bool)drawsUnderline;
-(void)_setUsesSimpleTextEffects:(bool)arg1 ;
-(bool)_usesSimpleTextEffects;
-(bool)_wantsUnderlineForAccessibilityButtonShapesEnabled;
-(double)preferredMaxLayoutWidth;
@end

