/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:00:14 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIKit/UIKit-Structs.h>
#import <UIKit/UIView.h>
#import <UIKit/UIPDFPageViewDelegate.h>
#import <UIKit/UIPDFAnnotationControllerDelegate.h>
#import <UIKit/WebPDFViewPlaceholderDelegate.h>
#import <UIKit/UIPopoverControllerDelegate.h>
#import <UIKit/UIGestureRecognizerDelegate.h>

@protocol UIWebPDFViewDelegate;
@class NSMutableArray, UIPDFDocument, NSObject, UITapGestureRecognizer, NSURL, NSArray, WebPDFViewPlaceholder, UIColor, NSString, NSData;

@interface UIWebPDFView : UIView <UIPDFPageViewDelegate, UIPDFAnnotationControllerDelegate, WebPDFViewPlaceholderDelegate, UIPopoverControllerDelegate, UIGestureRecognizerDelegate> {

	NSMutableArray* _backingLayerImageViews;
	CGPDFDocumentRef _cgPDFDocument;
	UIPDFDocument* _document;
	bool _hasScheduledCacheUpdate;
	CGRect _documentBounds;
	NSObject<UIWebPDFViewDelegate>* _pdfDelegate;
	bool _delegateRespondsToDidScroll;
	UITapGestureRecognizer* _tapGestureRecognizer;
	NSURL* _documentURL;
	bool _rotating;
	bool _zooming;
	double _initialZoomScale;
	CGAffineTransform _documentTransform;
	double _documentScale;
	long long _ignoreContentOffsetChanges;
	CGPoint _contentOffsetAtScrollStart;
	NSMutableArray* _pageViews;
	NSArray* _pageMinYs;
	bool hidePageViewsUntilReadyToRender;
	bool hideActivityIndicatorForUnRenderedContent;
	bool readyForSnapshot;
	WebPDFViewPlaceholder* pdfPlaceHolderView;
	UIColor* backgroundColorForUnRenderedContent;
	NSString* documentPassword;
	NSArray* pageRects;

}

@property (assign,nonatomic) NSObject<UIWebPDFViewDelegate> * pdfDelegate;                //@synthesize pdfDelegate=_pdfDelegate - In the implementation block
@property (nonatomic,retain) NSURL * documentURL;                                         //@synthesize documentURL=_documentURL - In the implementation block
@property (nonatomic,readonly) CGRect documentBounds;                                     //@synthesize documentBounds=_documentBounds - In the implementation block
@property (nonatomic,readonly) unsigned long long totalPages; 
@property (nonatomic,readonly) CGPDFDocumentRef cgPDFDocument; 
@property (nonatomic,readonly) UIPDFDocument * document; 
@property (nonatomic,readonly) NSData * documentData; 
@property (assign,nonatomic) bool readyForSnapshot; 
@property (assign) WebPDFViewPlaceholder * pdfPlaceHolderView; 
@property (assign,nonatomic) double initialZoomScale;                                     //@synthesize initialZoomScale=_initialZoomScale - In the implementation block
@property (nonatomic,retain) UIColor * backgroundColorForUnRenderedContent; 
@property (assign,nonatomic) bool hideActivityIndicatorForUnRenderedContent; 
@property (assign,nonatomic) bool hidePageViewsUntilReadyToRender; 
@property (assign,nonatomic) long long ignoreContentOffsetChanges;                        //@synthesize ignoreContentOffsetChanges=_ignoreContentOffsetChanges - In the implementation block
@property (assign,nonatomic) CGAffineTransform documentTransform;                         //@synthesize documentTransform=_documentTransform - In the implementation block
@property (nonatomic,retain) NSString * documentPassword; 
@property (nonatomic,readonly) double documentScale;                                      //@synthesize documentScale=_documentScale - In the implementation block
@property (nonatomic,retain) NSArray * pageRects; 
@property (nonatomic,retain) NSArray * pageMinYs;                                         //@synthesize pageMinYs=_pageMinYs - In the implementation block
+(void)initialize;
+(void)setAsPDFDocRepAndView;
-(void)dealloc;
-(bool)gestureRecognizerShouldBegin:(id)arg1 ;
-(bool)canPerformAction:(SEL)arg1 withSender:(id)arg2 ;
-(void)_didScroll;
-(void)_define:(id)arg1 ;
-(void)clearSelection;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(CGRect)documentBounds;
-(unsigned long long)totalPages;
-(id)pageRects;
-(void)didReceiveMemoryWarning:(id)arg1 ;
-(void)willRotate:(id)arg1 ;
-(void)didRotate:(id)arg1 ;
-(id)document;
-(id)_selection;
-(id)uiPDFDocument;
-(void)setBackgroundColorForUnRenderedContent:(id)arg1 ;
-(void)setPdfPlaceHolderView:(id)arg1 ;
-(id)pdfPlaceHolderView;
-(void)didCompleteLayout;
-(void)_tapGestureRecognized:(id)arg1 ;
-(void)willZoom:(id)arg1 ;
-(void)didZoom:(id)arg1 ;
-(void)willScroll:(id)arg1 ;
-(void)setPageRects:(id)arg1 ;
-(void)setPageMinYs:(id)arg1 ;
-(void)setDocumentURL:(id)arg1 ;
-(void)setDocumentPassword:(id)arg1 ;
-(void)_removeBackgroundImageObserverIfNeeded:(id)arg1 ;
-(id)viewportView;
-(CGRect)_viewportBoundsInUIVIewCoordsWithView:(id)arg1 ;
-(void)setReadyForSnapshot:(bool)arg1 ;
-(id)viewAtIndex:(long long)arg1 ;
-(id)_installViewAtIndex:(long long)arg1 inFrame:(CGRect)arg2 ;
-(CGRect)_viewCachingBoundsInUIViewCoords;
-(void)_removePageViewsNotInViewCoordsRect:(CGRect)arg1 ;
-(void)_removePageViewsNotInCurrentViewCoordsRect;
-(void)_addSubViewsInViewCoordsBounds:(CGRect)arg1 force:(bool)arg2 ;
-(void)_scheduleRemovePageViewsNotInViewCoordsRect;
-(void)ensureCorrectPagesAreInstalled:(bool)arg1 ;
-(CGRect)_viewportBoundsInUIViewCoords;
-(void)_recreateUIPDFDocument;
-(id)documentPassword;
-(bool)_checkIfDocumentNeedsUnlock;
-(void)resetZoom:(id)arg1 ;
-(void)_didTouch:(id)arg1 inRect:(CGRect)arg2 atPoint:(CGPoint)arg3 linkingToURL:(id)arg4 ;
-(void)_didTouch:(id)arg1 inRect:(CGRect)arg2 atPoint:(CGPoint)arg3 linkingToPageIndex:(unsigned long long)arg4 ;
-(void)_didLongPress:(id)arg1 inRect:(CGRect)arg2 atPoint:(CGPoint)arg3 linkingToURL:(id)arg4 ;
-(void)_didLongPress:(id)arg1 inRect:(CGRect)arg2 atPoint:(CGPoint)arg3 linkingToPageIndex:(unsigned long long)arg4 ;
-(id)_pageWithSelection;
-(unsigned long long)_pageNumberForRect:(CGRect)arg1 ;
-(CGPDFDocumentRef)cgPDFDocument;
-(void)zoom:(id)arg1 to:(CGRect)arg2 atPoint:(CGPoint)arg3 kind:(int)arg4 ;
-(void)annotation:(id)arg1 wasTouchedAtPoint:(CGPoint)arg2 controller:(id)arg3 ;
-(void)annotation:(id)arg1 isBeingPressedAtPoint:(CGPoint)arg2 controller:(id)arg3 ;
-(void)viewWillClose;
-(void)setIgnoreContentOffsetChanges:(long long)arg1 ;
-(void)setPdfDelegate:(id)arg1 ;
-(bool)_hasPageRects;
-(id)documentData;
-(id)initWithWebPDFViewPlaceholder:(id)arg1 ;
-(id)_addPageAtIndex:(unsigned long long)arg1 ;
-(unsigned long long)firstVisiblePageNumber;
-(void)prepareForSnapshot:(bool)arg1 ;
-(void)snapshotComplete;
-(bool)_tryToUnlockDocumentWithPassword:(id)arg1 ;
-(id)imageForContactRect:(CGRect)arg1 onPageInViewRect:(CGRect)arg2 destinationRect:(CGRect)arg3 ;
-(id)documentURL;
-(id)pdfDelegate;
-(double)initialZoomScale;
-(void)setInitialZoomScale:(double)arg1 ;
-(CGAffineTransform)documentTransform;
-(void)setDocumentTransform:(CGAffineTransform)arg1 ;
-(double)documentScale;
-(long long)ignoreContentOffsetChanges;
-(bool)hidePageViewsUntilReadyToRender;
-(void)setHidePageViewsUntilReadyToRender:(bool)arg1 ;
-(id)backgroundColorForUnRenderedContent;
-(bool)hideActivityIndicatorForUnRenderedContent;
-(void)setHideActivityIndicatorForUnRenderedContent:(bool)arg1 ;
-(bool)readyForSnapshot;
-(id)pageMinYs;
@end

