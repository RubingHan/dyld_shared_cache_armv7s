/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:00:17 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIKit/UIKit-Structs.h>
#import <UIKit/UIPickerView.h>
#import <UIKit/UIPickerViewDelegate.h>
#import <UIKit/UIPickerViewDataSource.h>

@class NSDate, NSLocale, NSCalendar, NSDateComponents, _UIDatePickerMode, NSTimeZone, UILabel, UIDatePicker, UIFont;

@interface _UIDatePickerView : UIPickerView <UIPickerViewDelegate, UIPickerViewDataSource> {

	long long _loadingDate;
	NSDate* _userSuppliedDate;
	NSDate* _userSuppliedMinimumDate;
	NSDate* _userSuppliedMaximumDate;
	NSLocale* _compositeLocale;
	NSLocale* _userProvidedLocale;
	NSCalendar* _userProvidedCalendar;
	NSDate* _minimumDate;
	NSDate* _maximumDate;
	NSDateComponents* _lastSelectedDateComponents;
	bool _allowsZeroTimeInterval;
	_UIDatePickerMode* _mode;
	NSTimeZone* _timeZone;
	double _timeInterval;
	UILabel* _hourLabel;
	UILabel* _minuteLabel;
	UIDatePicker* _datePickerDelegate;
	id _delegateOfDatePicker;
	int _expectedAMPM;
	struct {
		unsigned staggerTimeIntervals : 1;
		unsigned loadingDateOrTime : 1;
		unsigned highlightsToday : 1;
		unsigned usesBlackChrome : 1;
	}  _datePickerFlags;

}

@property (assign,nonatomic,@dynamic) bool highlightsToday; 
@property (nonatomic,@dynamic,readonly) NSCalendar * calendar; 
@property (nonatomic,@dynamic,readonly) NSLocale * locale; 
@property (getter=_amPmValue,nonatomic,@dynamic,readonly) long long amPmValue; 
@property (getter=_hrMinFont,nonatomic,@dynamic,readonly) UIFont * hrMinFont; 
@property (getter=_lastSelectedDateComponents,nonatomic,@dynamic,readonly) NSDateComponents * lastSelectedDateComponents; 
@property (assign,nonatomic,@dynamic) bool staggerTimeIntervals; 
@property (nonatomic,@dynamic,copy) NSDateComponents * dateComponents; 
@property (assign,nonatomic) long long datePickerMode; 
@property (nonatomic,retain) NSLocale * userProvidedLocale; 
@property (nonatomic,retain) NSTimeZone * timeZone;                                                                                                     //@synthesize timeZone=_timeZone - In the implementation block
@property (nonatomic,copy) NSCalendar * userProvidedCalendar; 
@property (nonatomic,copy) NSDate * date; 
@property (nonatomic,copy) NSDate * minimumDate;                                                                                                        //@synthesize userSuppliedMinimumDate=_userSuppliedMinimumDate - In the implementation block
@property (nonatomic,copy) NSDate * maximumDate;                                                                                                        //@synthesize userSuppliedMaximumDate=_userSuppliedMaximumDate - In the implementation block
@property (assign,nonatomic) double timeInterval; 
@property (assign,nonatomic) long long minuteInterval; 
@property (assign,nonatomic) id delegateOfDatePicker;                                                                                                   //@synthesize delegateOfDatePicker=_delegateOfDatePicker - In the implementation block
@property (assign,setter=_setUsesBlackChrome:,getter=_usesBlackChrome,nonatomic) bool usesBlackChrome; 
@property (assign,setter=_setAllowsZeroCountDownDuration:,getter=_allowsZeroCountDownDuration,nonatomic) bool allowsZeroCountDownDuration; 
@property (assign,setter=_setAllowsZeroTimeInterval:,getter=_allowsZeroTimeInterval,nonatomic) bool allowsZeroTimeInterval; 
@property (getter=_hasCustomCalendar,nonatomic,@dynamic,readonly) bool hasCustomCalendar; 
@property (getter=_hasCustomLocale,nonatomic,@dynamic,readonly) bool hasCustomLocale; 
@property (nonatomic,@dynamic,readonly) double contentWidth; 
@property (getter=_isTimeIntervalMode,nonatomic,@dynamic,readonly) bool isTimeIntervalMode; 
-(id)calendar;
-(id)locale;
-(void)setHighlightsToday:(bool)arg1 ;
-(bool)_updateDateOrTime;
-(id)_selectedTextForCalendarUnit:(unsigned long long)arg1 ;
-(id)_labelTextForCalendarUnit:(unsigned long long)arg1 ;
-(long long)_amPmValue;
-(id)_hoursStringForHour:(long long)arg1 ;
-(id)_minutesStringForHour:(long long)arg1 minutes:(long long)arg2 ;
-(id)_hrMinFont;
-(id)_lastSelectedDateComponents;
-(bool)staggerTimeIntervals;
-(bool)highlightsToday;
-(long long)_selectionBarRowInComponent:(long long)arg1 ;
-(int)hour;
-(id)dateComponents;
-(void)setDateComponents:(id)arg1 ;
-(void)setStaggerTimeIntervals:(bool)arg1 ;
-(int)minute;
-(int)second;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)dealloc;
-(id)pickerImageNamePrefix;
-(id)_orientationImageSuffix;
-(void)setDelegate:(id)arg1 ;
-(void)_selectRow:(long long)arg1 inComponent:(long long)arg2 animated:(bool)arg3 notify:(bool)arg4 ;
-(long long)numberOfComponentsInPickerView:(id)arg1 ;
-(long long)pickerView:(id)arg1 numberOfRowsInComponent:(long long)arg2 ;
-(double)pickerView:(id)arg1 widthForComponent:(long long)arg2 ;
-(double)pickerView:(id)arg1 rowHeightForComponent:(long long)arg2 ;
-(double)_tableRowHeight;
-(void)setFrame:(CGRect)arg1 ;
-(void)layoutSubviews;
-(void)_resetSelectionOfTables;
-(id)pickerView:(id)arg1 viewForRow:(long long)arg2 forComponent:(long long)arg3 reusingView:(id)arg4 ;
-(void)pickerView:(id)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3 ;
-(void)pickerTableView:(id)arg1 didChangeSelectionBarRowFrom:(long long)arg2 to:(long long)arg3 ;
-(void)scrollViewWillBeginDragging:(id)arg1 ;
-(void)setTimeZone:(id)arg1 ;
-(id)date;
-(id)shadowColor;
-(void)setDate:(id)arg1 ;
-(double)timeInterval;
-(void)setTimeInterval:(double)arg1 ;
-(void)setDatePickerMode:(long long)arg1 ;
-(void)setMinuteInterval:(long long)arg1 ;
-(bool)_isTimeIntervalMode;
-(void)setMinimumDate:(id)arg1 ;
-(void)setMaximumDate:(id)arg1 ;
-(long long)datePickerMode;
-(bool)_hasCustomLocale;
-(id)timeZone;
-(bool)_hasCustomCalendar;
-(id)minimumDate;
-(id)maximumDate;
-(long long)minuteInterval;
-(id)userProvidedLocale;
-(void)setUserProvidedLocale:(id)arg1 ;
-(id)userProvidedCalendar;
-(void)setUserProvidedCalendar:(id)arg1 ;
-(void)setDate:(id)arg1 animated:(bool)arg2 ;
-(void)setDelegateOfDatePicker:(id)arg1 ;
-(double)contentWidth;
-(void)_setHidesLabels:(bool)arg1 ;
-(void)_setUsesBlackChrome:(bool)arg1 ;
-(bool)_usesBlackChrome;
-(bool)_allowsZeroCountDownDuration;
-(void)_setAllowsZeroCountDownDuration:(bool)arg1 ;
-(bool)_allowsZeroTimeInterval;
-(void)_setAllowsZeroTimeInterval:(bool)arg1 ;
-(void)_rebuildCompositeLocale;
-(void)_datePickerReset:(id)arg1 ;
-(void)_todayChanged:(id)arg1 ;
-(bool)_updatedLastSelectedComponentsByValidatingSelectedDateWithLastManipulatedComponent:(long long)arg1 ;
-(bool)_isCurrentCalendar:(id)arg1 ;
-(void)_setDate:(id)arg1 animated:(bool)arg2 forced:(bool)arg3 ;
-(void)_doneLoadingDateOrTime;
-(void)_loadDate:(id)arg1 animated:(bool)arg2 ;
-(void)_updateEnabledCellsIncludingWMDCells:(bool)arg1 ;
-(void)_setMode:(id)arg1 ;
-(id)_componentsSelectedAfterEnforcingValidityOfComponents:(id)arg1 withLastManipulatedComponent:(long long)arg2 ;
-(int)_selectedHourForColumn:(int)arg1 ;
-(void)_fadeLabelForCalendarUnit:(unsigned long long)arg1 toText:(id)arg2 animated:(bool)arg3 ;
-(int)_selectedMinuteForColumn:(int)arg1 ;
-(id)_contentViewForSizingLabelForPositioningInComponent:(long long)arg1 ;
-(id)_labelForCalendarUnit:(unsigned long long)arg1 createIfNecessary:(bool)arg2 ;
-(id)_makeNewAccessoryLabel;
-(void)_positionLabel:(id)arg1 forCalendarUnit:(unsigned long long)arg2 relativeTo:(id)arg3 order:(long long)arg4 ;
-(void)_setLabel:(id)arg1 forCalendarUnit:(unsigned long long)arg2 animated:(bool)arg3 ;
-(void)_updateLabels:(bool)arg1 ;
-(bool)_showingDate;
-(id)_viewForSelectedRowInComponent:(long long)arg1 ;
-(id)delegateOfDatePicker;
@end

