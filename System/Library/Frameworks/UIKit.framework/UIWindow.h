/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:00:00 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIKit/UIKit-Structs.h>
#import <UIKit/UIView.h>
#import <UIKit/NSISEngineDelegate.h>

@class UIView, UIResponder, NSUndoManager, UIScreen, CALayer, NSMutableArray, UIViewController, UIColor, NSMutableSet, _UIResponderSelectionCursor, _UISystemGestureGateGestureRecognizer, NSArray;

@interface UIWindow : UIView <NSISEngineDelegate> {

	id _delegate;
	double _windowLevel;
	double _windowSublevel;
	id _layerContext;
	UIView* _lastMouseDownView;
	UIView* _lastMouseEnteredView;
	UIResponder* _firstResponder;
	id _fingerInfo;
	id _touchData;
	long long _viewOrientation;
	UIView* _exclusiveTouchView;
	NSUndoManager* _undoManager;
	UIScreen* _screen;
	CALayer* _transformLayer;
	NSMutableArray* _rotationViewControllers;
	UIViewController* _rootViewController;
	UIColor* _savedBackgroundColor;
	NSMutableSet* _subtreeMonitoringViews;
	NSMutableSet* _tintViews;
	id _currentTintView;
	struct {
		unsigned delegateWillRotate : 1;
		unsigned delegateDidRotate : 1;
		unsigned delegateWillAnimateFirstHalf : 1;
		unsigned delegateDidAnimationFirstHalf : 1;
		unsigned delegateWillAnimateSecondHalf : 1;
		unsigned autorotatesToPortrait : 1;
		unsigned autorotatesToPortraitUpsideDown : 1;
		unsigned autorotatesToLandscapeLeft : 1;
		unsigned autorotatesToLandscapeRight : 1;
		unsigned dontBecomeKeyOnOrderFront : 1;
		unsigned output : 1;
		unsigned inGesture : 1;
		unsigned bitsPerComponent : 4;
		unsigned autorotates : 1;
		unsigned isRotating : 1;
		unsigned isUsingOnePartRotationAnimation : 1;
		unsigned isHandlingContentRotation : 1;
		unsigned disableAutorotationCount : 4;
		unsigned needsAutorotationWhenReenabled : 1;
		unsigned forceTwoPartRotationAnimation : 1;
		unsigned orderKeyboardInAfterRotating : 1;
		unsigned roundedCorners : 4;
		unsigned resizesToFullScreen : 1;
		unsigned keepContextInBackground : 1;
		unsigned ignoreSetHidden : 1;
		unsigned forceVisibleOnInit : 1;
		unsigned settingFirstResponder : 1;
		unsigned legacyOrientationChecks : 1;
		unsigned windowResizedToFullScreen : 1;
		unsigned statusBarFollowsOrientation : 1;
	}  _windowFlags;
	id _windowController;
	_UIResponderSelectionCursor* _responderSelectionCursor;
	_UISystemGestureGateGestureRecognizer* _systemGestureGateForGestures;
	_UISystemGestureGateGestureRecognizer* _systemGestureGateForTouches;
	bool __usesLegacySupportedOrientationChecks;
	NSArray* _windowInternalConstraints;
	NSArray* _rootViewConstraints;
	/*^block*/ id _deferredLaunchBlock;
	/*^block*/ id __rotationCompleteBlock;

}

@property (nonatomic,retain) UIScreen * screen; 
@property (assign,nonatomic) double windowLevel; 
@property (getter=isKeyWindow,nonatomic,readonly) bool keyWindow; 
@property (nonatomic,retain) UIViewController * rootViewController;                                                 //@synthesize rootViewController=_rootViewController - In the implementation block
@property (setter=_setWindowInternalConstraints:,nonatomic,copy) NSArray * _windowInternalConstraints;              //@synthesize windowInternalConstraints=_windowInternalConstraints - In the implementation block
@property (nonatomic,readonly) bool _usesLegacySupportedOrientationChecks;                                          //@synthesize _usesLegacySupportedOrientationChecks=__usesLegacySupportedOrientationChecks - In the implementation block
@property (setter=_setDeferredLaunchBlock:,nonatomic,copy) id _deferredLaunchBlock;                                 //@synthesize deferredLaunchBlock=_deferredLaunchBlock - In the implementation block
@property (setter=_setRotationCompleteBlock:,nonatomic,copy) id _rotationCompleteBlock;                             //@synthesize _rotationCompleteBlock=__rotationCompleteBlock - In the implementation block
@property (assign,setter=_setLegacyOrientationChecks:,nonatomic) bool _legacyOrientationChecks; 
@property (setter=_setRootViewConstraints:,nonatomic,copy) NSArray * _rootViewConstraints;                          //@synthesize rootViewConstraints=_rootViewConstraints - In the implementation block
+(id)allWindowsIncludingInternalWindows:(bool)arg1 onlyVisibleWindows:(bool)arg2 ;
+(void)_executeDeferredLaunchBlocks;
+(id)keyWindow;
+(unsigned)_synchronizeDrawingAcrossProcesses;
+(void)_noteStatusBarHeightChanged:(double)arg1 oldHeight:(double)arg2 forAutolayoutRootViewsOnly:(bool)arg3 ;
+(void)_synchronizeDrawing;
+(void)_noteStatusBarHeightChanged:(double)arg1 oldHeight:(double)arg2 ;
+(id)_topVisibleWindowPassingTest:(/*^block*/ id)arg1 ;
+(void)_prepareWindowsForAppSuspend;
+(id)allWindowsIncludingInternalWindows:(bool)arg1 onlyVisibleWindows:(bool)arg2 forScreen:(id)arg3 ;
+(void*)createIOSurfaceWithContextIds:(const unsigned*)arg1 count:(unsigned long long)arg2 frame:(CGRect)arg3 ;
+(id)_externalKeyWindow;
+(void)_prepareWindowsPassingTestForAppResume:(/*^block*/ id)arg1 ;
+(void)_prepareWindowsForAppResume;
+(id)_hitTestToPoint:(CGPoint)arg1 pathIndex:(long long)arg2 forEvent:(id)arg3 screen:(id)arg4 ;
+(void)initialize;
+(void)adjustForAccessibilityIfNeeded:(id)arg1 ;
+(CGRect)constrainFrameToScreen:(CGRect)arg1 ;
+(unsigned)_synchronizeDrawingAcrossProcessesWithPreCommitHandler:(/*^block*/ id)arg1 ;
+(void)_synchronizeDrawingAcrossProcessesOverPort:(unsigned)arg1 withPreCommitHandler:(/*^block*/ id)arg2 ;
+(unsigned long long)_keyWindowStackSize;
+(void)__popKeyWindow:(id)arg1 findNewKeyWindowIfStackEmpty:(bool)arg2 ;
+(void)_popKeyWindow:(id)arg1 ;
+(void*)createIOSurfaceOnScreen:(id)arg1 withContextIds:(const unsigned*)arg2 count:(unsigned long long)arg3 frame:(CGRect)arg4 usePurpleGfx:(bool)arg5 outTransform:(CGAffineTransform*)arg6 ;
+(void*)createIOSurfaceFromScreen:(id)arg1 ;
+(void*)createIOSurfaceWithContextId:(unsigned)arg1 frame:(CGRect)arg2 ;
+(Class)layerClass;
+(void)setAllWindowsKeepContextInBackground:(bool)arg1 ;
+(void)_synchronizeDrawingAcrossProcessesOverPort:(unsigned)arg1 ;
+(void)_clearKeyWindowStack;
+(void)_setKeyWindowStackEnabled:(bool)arg1 ;
+(void)_pushKeyWindow:(id)arg1 ;
+(void)_popKeyWindow;
+(void)_removeWindowFromStack:(id)arg1 ;
+(void*)createIOSurfaceWithContextIds:(const unsigned*)arg1 count:(unsigned long long)arg2 frame:(CGRect)arg3 outTransform:(CGAffineTransform*)arg4 ;
+(void*)createIOSurfaceWithContextIds:(const unsigned*)arg1 count:(unsigned long long)arg2 frame:(CGRect)arg3 usePurpleGfx:(bool)arg4 outTransform:(CGAffineTransform*)arg5 ;
+(void*)createScreenIOSurface;
+(id)_statusBarControllingWindow;
+(id)_findWithDisplayPoint:(CGPoint)arg1 ;
-(id)addTouchCaptureViewWithTag:(long long)arg1 ;
-(id)removeTouchCaptureViewWithTag:(long long)arg1 ;
-(id)copyIOSurfaceSnapshotView:(long long)arg1 ;
-(CGRect)_axConvertRect:(CGRect)arg1 toWindow:(id)arg2 ;
-(void)setFrame:(CGRect)arg1 ;
-(void)setBounds:(CGRect)arg1 ;
-(void)setCenter:(CGPoint)arg1 ;
-(void)_updateConstraintsAtWindowLevelIfNeeded;
-(void)_constraints_subviewWillChangeSuperview:(id)arg1 ;
-(void)updateConstraints;
-(void)_invalidateWindowInternalConstraints;
-(id)_centerExpressionInContainer:(id)arg1 vertical:(bool)arg2 ;
-(bool)_isLoweringAnchoringConstraints;
-(unsigned long long)_expectedWindowInternalConstraintsCount;
-(void)_windowInternalConstraints_sizeDidChange;
-(void)_windowInternalConstraints_centerDidChange;
-(void)_setIsLoweringAnchoringConstraints:(bool)arg1 ;
-(void)_uiib_invalidateWindowInternalConstraints;
-(id)_layoutEngineCreateIfNecessary;
-(void)_switchToLayoutEngine:(id)arg1 ;
-(void)layoutSublayersOfLayer:(id)arg1 ;
-(id)_layoutEngineIfAvailable;
-(void)updateConstraintsIfNeeded;
-(void)_initializeLayoutEngine;
-(id)_uiib_candidateRedundantConstraints;
-(id)_descendantWithAmbiguousLayout;
-(void)exerciseAmbiguityInLayout;
-(id)_uiib_layoutEngineCreatingIfNecessary;
-(id)_redundantConstraints;
-(bool)hasAmbiguousLayout;
-(id)_hostingHandle;
-(bool)isElementAccessibilityExposedToInterfaceBuilder;
-(void)_matchDeviceBounds;
-(bool)_isTextEffectsWindow;
-(double)_classicOffset;
-(void)setupForOrientation:(long long)arg1 ;
-(void)matchDeviceOrientation;
-(void)keyboardDidHide;
-(void)matchDeviceOrientation:(id)arg1 ;
-(id)_window;
-(id)_responderWindow;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)dealloc;
-(id)_screen;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)setDelegate:(id)arg1 ;
-(void)setHidden:(bool)arg1 ;
-(void)removeFromSuperview;
-(id)delegate;
-(bool)_clearMouseView;
-(void)makeKeyAndVisible;
-(void)setRootViewController:(id)arg1 ;
-(id)nextResponder;
-(id)firstResponder;
-(bool)canPerformAction:(SEL)arg1 withSender:(id)arg2 ;
-(void)setWindowLevel:(double)arg1 ;
-(void)_orderFrontWithoutMakingKey;
-(unsigned)_contextId;
-(id)screen;
-(bool)_windowControlsStatusBarOrientation;
-(id)_currentTintView;
-(bool)isRotating;
-(void)_setRotationCompleteBlock:(/*^block*/ id)arg1 ;
-(long long)interfaceOrientation;
-(bool)_shouldZoom;
-(bool)_includeInDefaultImageSnapshot;
-(void)sendEvent:(id)arg1 ;
-(id)undoManager;
-(bool)_needsShakesWhenInactive;
-(void)synchronizeDrawingWithID:(int)arg1 ;
-(id)representation;
-(id)_touchData;
-(bool)_canActAsKeyWindowForScreen:(id)arg1 ;
-(id)_deepestUnambiguousResponder;
-(bool)becomeFirstResponder;
-(id)rootViewController;
-(void)_beginModalSession;
-(void)_endModalSession;
-(bool)_isWindowServerHostingManaged;
-(double)windowLevel;
-(bool)isKeyWindow;
-(void)_setFirstResponder:(id)arg1 ;
-(CGPoint)warpPoint:(CGPoint)arg1 ;
-(CGPoint)convertPoint:(CGPoint)arg1 fromWindow:(id)arg2 ;
-(id)_exclusiveTouchView;
-(void)_setExclusiveTouchView:(id)arg1 ;
-(bool)_isConstrainedByScreenJail;
-(bool)_isHostedInAnotherProcess;
-(void)beginDisablingInterfaceAutorotation;
-(void)endDisablingInterfaceAutorotation;
-(bool)_usesWindowServerHitTesting;
-(bool)_canAffectStatusBarAppearance;
-(bool)_canBecomeKeyWindow;
-(bool)isInternalWindow;
-(void)_updateTransformLayer;
-(void)_createSystemGestureGateGestureRecognizerIfNeeded;
-(void)_createContextIfNecessaryForCurrentApplicationState;
-(int)bitsPerComponent;
-(void)_commonInit;
-(void)_setLayerHidden:(bool)arg1 ;
-(void)awakeFromNib;
-(void)_resizeWindowToFullScreenIfNecessary;
-(void)_setWindowInternalConstraints:(id)arg1 ;
-(void)_setMouseDownView:(id)arg1 withEvent:(GSEventRef)arg2 ;
-(void)_setMouseEnteredView:(id)arg1 ;
-(void)_endKeyWindowDeferral;
-(void)_makeKeyWindowIgnoringOldKeyWindow:(bool)arg1 ;
-(void)_updateTransformLayerForClassicPresentation;
-(bool)_isClippedByScreenJail;
-(int)windowOutput;
-(bool)_ignoresHitTest;
-(bool)_disableGroupOpacity;
-(void)setLevel:(double)arg1 ;
-(void)_destroyContextFromScreen:(id)arg1 ;
-(void)_createContext;
-(bool)keepContextInBackground;
-(void)_destroyContext;
-(void)_orderContextToFront;
-(void)_beginKeyWindowDeferral;
-(id)_rootViewConstraints;
-(void)_setRootViewConstraints:(id)arg1 ;
-(void)_updateRootViewConstraintsForInterfaceOrientationAndStatusBarHeight;
-(id)_rootViewConstraintsUpdateIfNecessaryForView:(id)arg1 ;
-(void)makeKeyWindow;
-(void)_resignKeyWindowStatus;
-(void)addRootViewControllerViewIfPossible;
-(void)_updateToInterfaceOrientation:(long long)arg1 duration:(double)arg2 force:(bool)arg3 ;
-(void)_setHidden:(bool)arg1 forced:(bool)arg2 ;
-(double)_touchSloppinessFactor;
-(double)_chargeMultiplicationFactor;
-(CGPoint)convertPoint:(CGPoint)arg1 toWindow:(id)arg2 ;
-(bool)_isScrollingEnabledForView:(id)arg1 ;
-(CGRect)convertRect:(CGRect)arg1 toWindow:(id)arg2 ;
-(void)_sendGesturesForEvent:(id)arg1 ;
-(void)_sendTouchesForEvent:(id)arg1 ;
-(void)_sendButtonGesturesForEvent:(id)arg1 ;
-(void)_sendButtonsForEvent:(id)arg1 ;
-(id)_rootForKeyResponderCycle;
-(void)_positionHeaderView:(id)arg1 andFooterView:(id)arg2 outsideContentViewForInterfaceOrientation:(long long)arg3 ;
-(void)_slideHeaderView:(id)arg1 andFooterView:(id)arg2 offScreen:(bool)arg3 forInterfaceOrientation:(long long)arg4 ;
-(id)_rotationViewControllers;
-(id)_clientsForRotation;
-(bool)_legacyShouldAutorotateToInterfaceOrientation:(long long)arg1 ;
-(bool)_isAnyWindowRotating;
-(/*^block*/ id)_deferredLaunchBlock;
-(void)_setDeferredLaunchBlock:(/*^block*/ id)arg1 ;
-(void)_updateInterfaceOrientationFromDeviceOrientationIfRotationEnabled:(bool)arg1 ;
-(bool)_shouldAutorotateToInterfaceOrientation:(long long)arg1 ;
-(void)_setRotatableViewOrientation:(long long)arg1 duration:(double)arg2 force:(bool)arg3 ;
-(void)_updateInterfaceOrientationFromDeviceOrientation:(bool)arg1 ;
-(bool)isInterfaceAutorotationDisabled;
-(void)_handleDeviceOrientationChange:(id)arg1 ;
-(void)endDisablingInterfaceAutorotationAnimated:(bool)arg1 ;
-(void)setAutorotates:(bool)arg1 forceUpdateInterfaceOrientation:(bool)arg2 ;
-(void)_handleStatusBarOrientationChange:(id)arg1 ;
-(void)_setRotatableViewOrientation:(long long)arg1 updateStatusBar:(bool)arg2 duration:(double)arg3 force:(bool)arg4 ;
-(void)_updateStatusBarToInterfaceOrientation:(long long)arg1 duration:(double)arg2 fenceID:(int)arg3 animation:(int)arg4 ;
-(void)_setRotatableClient:(id)arg1 toOrientation:(long long)arg2 updateStatusBar:(bool)arg3 duration:(double)arg4 force:(bool)arg5 ;
-(void)_setRotatableClient:(id)arg1 toOrientation:(long long)arg2 updateStatusBar:(bool)arg3 duration:(double)arg4 force:(bool)arg5 isRotating:(bool)arg6 ;
-(id)__clientsForRotationCallbacks;
-(id)contentView;
-(void)_finishedFirstHalfRotation:(id)arg1 finished:(id)arg2 context:(id)arg3 ;
-(void)_updateStatusBarToInterfaceOrientation:(long long)arg1 duration:(double)arg2 ;
-(void)_finishedFullRotation:(id)arg1 finished:(id)arg2 context:(id)arg3 ;
-(void)_finishedFullRotation:(id)arg1 finished:(id)arg2 context:(id)arg3 skipNotification:(bool)arg4 ;
-(/*^block*/ id)_rotationCompleteBlock;
-(id)_effectiveScreen;
-(CGRect)_screenBounds;
-(void)resignKeyWindow;
-(void)becomeKeyWindow;
-(id)_deferralPropertiesWithContextID:(unsigned)arg1 ;
-(bool)_canPromoteFromKeyWindowStack;
-(void)undo:(id)arg1 ;
-(void)redo:(id)arg1 ;
-(bool)_isStatusBarWindow;
-(void)handleStatusBarChangeFromHeight:(double)arg1 toHeight:(double)arg2 ;
-(void*)createIOSurfaceWithFrame:(CGRect)arg1 ;
-(void)_updateAppTintView;
-(void)_updateCurrentTintView;
-(CGRect)convertRect:(CGRect)arg1 fromWindow:(id)arg2 ;
-(bool)resizesToFullScreen;
-(void)moveToNextResponderInDirection:(long long)arg1 ;
-(void)_moveWithEvent:(id)arg1 ;
-(void)_moveResponderSelectionInDirection:(long long)arg1 fromRect:(CGRect)arg2 ;
-(void)loadFirstResponderScrollViewContentInDirection:(CGSize)arg1 ;
-(id)_responderSelectionContainerViewForResponder:(id)arg1 ;
-(bool)_isPoint:(CGPoint)arg1 relativeToPoint:(CGPoint)arg2 inDirection:(long long)arg3 ;
-(void)_scrollResponderToVisible:(id)arg1 ;
-(id)initWithContentRect:(CGRect)arg1 ;
-(void)setContentView:(id)arg1 ;
-(void)_tagAsSpringboardPresentationWindow;
-(void)_transformLayerShouldMaskToBounds:(bool)arg1 ;
-(bool)_hasContext;
-(bool)_disableViewScaling;
-(bool)_legacyOrientationChecks;
-(void)_setLegacyOrientationChecks:(bool)arg1 ;
-(void)makeKeyAndOrderFront:(id)arg1 ;
-(void)orderFront:(id)arg1 ;
-(void)orderOut:(id)arg1 ;
-(void)makeKey:(id)arg1 ;
-(id)_targetForStolenStatusBarTouchesAtPoint:(CGPoint)arg1 withEvent:(id)arg2 excludingWindow:(id)arg3 ;
-(void)_scrollToTopViewsUnderScreenPointIfNecessary:(CGPoint)arg1 resultHandler:(/*^block*/ id)arg2 ;
-(CGPoint)_convertOffset:(CGPoint)arg1 toWindow:(id)arg2 ;
-(CGPoint)_convertOffset:(CGPoint)arg1 fromWindow:(id)arg2 ;
-(double)_convertVisualAltitude:(double)arg1 fromWindow:(id)arg2 ;
-(double)_convertVisualAltitude:(double)arg1 toWindow:(id)arg2 ;
-(bool)_containedInAbsoluteResponderChain;
-(CGPoint)convertWindowToDevice:(CGPoint)arg1 ;
-(CGPoint)convertDeviceToWindow:(CGPoint)arg1 ;
-(double)level;
-(void)setBecomeKeyOnOrderFront:(bool)arg1 ;
-(void)_slideFooterFromOrientation:(long long)arg1 toOrientation:(long long)arg2 startSnapshot:(id)arg3 endSnapshot:(id)arg4 duration:(double)arg5 ;
-(void)_addRotationViewController:(id)arg1 ;
-(void)_removeRotationViewController:(id)arg1 ;
-(void)_clearPendingKeyboardChanges;
-(unsigned long long)_supportedInterfaceOrientationsForRootViewController;
-(void)_setWindowControlsStatusBarOrientation:(bool)arg1 ;
-(void)_updateToInterfaceOrientation:(long long)arg1 animated:(bool)arg2 ;
-(void)_updateInterfaceOrientationFromDeviceOrientation;
-(void)setAutorotates:(bool)arg1 ;
-(void)_setRotatableViewOrientation:(long long)arg1 duration:(double)arg2 ;
-(void)_setRotatableViewOrientation:(long long)arg1 updateStatusBar:(bool)arg2 duration:(double)arg3 ;
-(void)_forceTwoPartRotationAnimation:(bool)arg1 ;
-(void)_setRotatableClient:(id)arg1 toOrientation:(long long)arg2 duration:(double)arg3 force:(bool)arg4 ;
-(bool)autorotates;
-(bool)isUsingOnePartRotationAnimation;
-(long long)_windowInterfaceOrientation;
-(void)synchronizeDrawingWithID:(int)arg1 count:(unsigned long long)arg2 ;
-(id)_appearanceContainer;
-(bool)_shouldDelayTouchForSystemGestures:(id)arg1 ;
-(void)setScreen:(id)arg1 ;
-(void)_makeExternalKeyWindow;
-(void)_registerChargedView:(id)arg1 ;
-(void)_unregisterChargedView:(id)arg1 ;
-(id)_registeredScrollToTopViews;
-(void)_registerScrollToTopView:(id)arg1 ;
-(void)_unregisterScrollToTopView:(id)arg1 ;
-(void)_setIsSettingFirstResponder:(bool)arg1 ;
-(bool)_isSettingFirstResponder;
-(id)_firstResponder;
-(bool)_becomeFirstResponderWhenPossible;
-(bool)_supportsBecomeFirstResponderWhenPossible;
-(void*)createIOSurface;
-(bool)_isInAWindow;
-(CGPoint)_transformDisplayToWindowCoordinates:(CGPoint)arg1 ;
-(void)setResizesToFullScreen:(bool)arg1 ;
-(void)setKeepContextInBackground:(bool)arg1 ;
-(void)_registerViewForSubtreeMonitoring:(id)arg1 ;
-(void)_unregisterViewForSubtreeMonitoring:(id)arg1 ;
-(id)_subtreeMonitorsForView:(id)arg1 ;
-(void)_writeLayerTreeToPath:(id)arg1 ;
-(void)_tintViewDidChangeAppearance:(id)arg1 ;
-(void)_updateCurrentTintViewForPotentialTintView:(id)arg1 ;
-(void)_addTintView:(id)arg1 ;
-(void)_removeTintView:(id)arg1 ;
-(void)_geometryDidChangeForView:(id)arg1 ;
-(id)_directionalGestureRecognizers;
-(id)_rootLayer;
-(id)_normalInheritedTintColor;
-(id)_windowInternalConstraints;
-(bool)_usesLegacySupportedOrientationChecks;
@end

