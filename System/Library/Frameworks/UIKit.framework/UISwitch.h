/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:00:05 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIKit/UIKit-Structs.h>
#import <UIKit/UIControl.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <CoreFoundation/NSCoding.h>

@protocol _UISwitchInternalViewProtocol;
@class UILongPressGestureRecognizer, UIPanGestureRecognizer, UIView, UIColor, UIImage;

@interface UISwitch : UIControl <UIGestureRecognizerDelegate, NSCoding> {

	UILongPressGestureRecognizer* _pressGesture;
	UIPanGestureRecognizer* _panGesture;
	UIView<_UISwitchInternalViewProtocol>* _control;
	bool _onStateChangedByLongPressGestureRecognizer;
	bool _onStateChangedByPanGestureRecognizer;
	bool _on;
	double _enabledAlpha;

}

@property (setter=_setOnColor:,getter=_onColor,nonatomic,retain) UIColor * onColor; 
@property (assign,setter=_setAlwaysShowsOnOffLabel:,getter=_alwaysShowOnOffLabel,nonatomic) bool alwaysShowOnOffLabel; 
@property (nonatomic,retain) UIColor * onTintColor; 
@property (nonatomic,retain) UIColor * tintColor; 
@property (nonatomic,retain) UIColor * thumbTintColor; 
@property (nonatomic,retain) UIImage * onImage; 
@property (nonatomic,retain) UIImage * offImage; 
@property (assign,getter=isOn,nonatomic) bool on;                                                                                   //@synthesize on=_on - In the implementation block
@property (assign,nonatomic) double enabledAlpha;                                                                                   //@synthesize enabledAlpha=_enabledAlpha - In the implementation block
-(unsigned long long)defaultAccessibilityTraits;
-(bool)isAccessibilityElementByDefault;
-(bool)isElementAccessibilityExposedToInterfaceBuilder;
-(id)_scriptingInfo;
-(void)setAlternateColors:(bool)arg1 ;
-(void)_setPressed:(bool)arg1 on:(bool)arg2 animated:(bool)arg3 completion:(/*^block*/ id)arg4 ;
-(double)_knobBounceDuration;
-(void)_setKnobBounceDuration:(double)arg1 ;
-(double)_knobBounceDamping;
-(void)_setKnobBounceDamping:(double)arg1 ;
-(double)_knobBounceStiffness;
-(void)_setKnobBounceStiffness:(double)arg1 ;
-(double)_knobBounceMass;
-(void)_setKnobBounceMass:(double)arg1 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)_populateArchivedSubviews:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)setAlpha:(double)arg1 ;
-(CGSize)_intrinsicSizeWithinSize:(CGSize)arg1 ;
-(id)init;
-(void)setFrame:(CGRect)arg1 ;
-(bool)_contentHuggingDefault_isUsuallyFixedHeight;
-(bool)_contentHuggingDefault_isUsuallyFixedWidth;
-(CGSize)sizeThatFits:(CGSize)arg1 ;
-(UIEdgeInsets)alignmentRectInsets;
-(void)_encodeFrameWithCoder:(id)arg1 ;
-(id)tintColor;
-(void)setTintColor:(id)arg1 ;
-(void)setEnabled:(bool)arg1 ;
-(bool)_gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(void)setThumbTintColor:(id)arg1 ;
-(id)thumbTintColor;
-(void)_setOnTintColor:(id)arg1 ;
-(void)_onAnimationDidStop:(id)arg1 finished:(id)arg2 context:(void*)arg3 ;
-(id)onTintColor;
-(void)setOnTintColor:(id)arg1 ;
-(id)onImage;
-(void)setOnImage:(id)arg1 ;
-(id)offImage;
-(void)setOffImage:(id)arg1 ;
-(void)setOn:(bool)arg1 ;
-(id)_onTintColor;
-(void)setEnabledAlpha:(double)arg1 ;
-(void)_handlePanNL:(id)arg1 ;
-(void)_handleTapNL:(id)arg1 ;
-(void)_handleLongPressNL:(id)arg1 ;
-(bool)_handleTranslationInPanGestureRecognizer:(id)arg1 ;
-(void)_animateToOn:(bool)arg1 withDuration:(double)arg2 sendAction:(bool)arg3 ;
-(bool)_useOldSize;
-(void)_commonInitNewLook;
-(void)_commonInitNewLookNeue1;
-(bool)_shouldAlterCodedFrame;
-(bool)isOn;
-(void)setOn:(bool)arg1 animated:(bool)arg2 ;
-(void)_setOnColor:(id)arg1 ;
-(id)_onColor;
-(void)_setAlwaysShowsOnOffLabel:(bool)arg1 ;
-(bool)_alwaysShowOnOffLabel;
-(double)enabledAlpha;
@end

