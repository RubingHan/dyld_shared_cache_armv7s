/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:00:20 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIKit/UIKit-Structs.h>
#import <UIKit/UITextInput.h>
#import <UIKit/UITextInputAdditions.h>

@protocol UITextInputDelegate, UITextInput, UITextInputControllerDelegate;
@class _UITextKitTextRange, _UITextInputControllerTokenizer, NSLayoutManager, NSHashTable, _UITextServiceSession, UITextInputTraits, NSArray, UIView, _UITextUndoManager, _UITextUndoOperationTyping, UITextChecker, _UIDictationAttachment, NSDictionary, UITextRange, UITextPosition;

@interface UITextInputController : NSObject <UITextInput, UITextInputAdditions> {

	<UITextInputDelegate>* _inputDelegate;
	_UITextKitTextRange* _selectedTextRange;
	_UITextInputControllerTokenizer* _tokenizer;
	NSLayoutManager* _layoutManager;
	NSHashTable* _observedScrollViews;
	_UITextServiceSession* _definitionSession;
	_UITextServiceSession* _learnSession;
	UITextInputTraits* _textInputTraits;
	NSRange _markedTextRange;
	NSRange _markedTextSelection;
	struct {
		unsigned delegateRespondsToTextInputShouldBeginEditing : 1;
		unsigned delegateRespondsToTextInputShouldChangeCharactersInRangeReplacementText : 1;
		unsigned delegateRespondsToTextInputDidChange : 1;
		unsigned delegateRespondsToTextInputDidChangeSelection : 1;
		unsigned delegateRespondsToTextInputWillChangeSelectionFromCharacterRangeToCharacterRange : 1;
		unsigned delegateRespondsToTextInputEditorDidChangeSelection : 1;
		unsigned delegateRespondsToTextInputPrepareAttributedTextForInsertion : 1;
		unsigned textOrSelectionChangeOriginatesWithKeyboard : 1;
		unsigned showingTextStyleOptions : 1;
		unsigned undoRedoInProgress : 1;
		unsigned textOrSelectionChangeOriginatesWithMarkedText : 1;
		unsigned nextSelectionChangeMustUpdate : 1;
		unsigned hasTextAlternatives : 1;
	}  _tiFlags;
	NSArray* _extraItemsBeforeTextStyleOptions;
	UIView<UITextInput>* _firstTextView;
	_UITextUndoManager* _undoManager;
	_UITextUndoOperationTyping* _undoOperationForCoalescing;
	UITextChecker* _textChecker;
	_UIDictationAttachment* _dictationPlaceholder;
	bool _allowsEditingTextAttributes;
	bool _continuousSpellCheckingEnabled;
	NSDictionary* _emptyStringAttributes;
	NSDictionary* _typingAttributes;
	<UITextInputControllerDelegate>* _delegate;
	NSRange _previousSelectedRange;

}

@property (assign,nonatomic) NSRange selectedRange; 
@property (assign,nonatomic) bool allowsEditingTextAttributes;                                                                                //@synthesize allowsEditingTextAttributes=_allowsEditingTextAttributes - In the implementation block
@property (nonatomic,copy) NSDictionary * typingAttributes;                                                                                   //@synthesize typingAttributes=_typingAttributes - In the implementation block
@property (nonatomic,retain) NSLayoutManager * layoutManager;                                                                                 //@synthesize layoutManager=_layoutManager - In the implementation block
@property (assign,nonatomic) <UITextInputControllerDelegate> * delegate;                                                                      //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) bool continuousSpellCheckingEnabled;                                                                             //@synthesize continuousSpellCheckingEnabled=_continuousSpellCheckingEnabled - In the implementation block
@property (assign,nonatomic) NSRange previousSelectedRange;                                                                                   //@synthesize previousSelectedRange=_previousSelectedRange - In the implementation block
@property (setter=_setEmptyStringAttributes:,getter=_emptyStringAttributes,nonatomic,copy) NSDictionary * emptyStringAttributes;              //@synthesize emptyStringAttributes=_emptyStringAttributes - In the implementation block
@property (assign,nonatomic) long long autocapitalizationType; 
@property (assign,nonatomic) long long autocorrectionType; 
@property (assign,nonatomic) long long spellCheckingType; 
@property (assign,nonatomic) long long keyboardType; 
@property (assign,nonatomic) long long keyboardAppearance; 
@property (assign,nonatomic) long long returnKeyType; 
@property (assign,nonatomic) bool enablesReturnKeyAutomatically; 
@property (assign,getter=isSecureTextEntry,nonatomic) bool secureTextEntry; 
@property (copy) UITextRange * selectedTextRange; 
@property (nonatomic,readonly) UITextRange * markedTextRange; 
@property (nonatomic,copy) NSDictionary * markedTextStyle; 
@property (nonatomic,readonly) UITextPosition * beginningOfDocument; 
@property (nonatomic,readonly) UITextPosition * endOfDocument; 
@property (assign,nonatomic) <UITextInputDelegate> * inputDelegate; 
@property (nonatomic,readonly) <UITextInputTokenizer> * tokenizer; 
@property (nonatomic,readonly) UIView * textInputView; 
@property (assign,nonatomic) long long selectionAffinity; 
@property (getter=isEditable,nonatomic,readonly) bool editable; 
@property (getter=isEditing,nonatomic,readonly) bool editing; 
@property (getter=_caretRect,nonatomic,readonly) CGRect caretRect; 
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(bool)respondsToSelector:(SEL)arg1 ;
-(id)delegate;
-(id)undoManager;
-(id)methodSignatureForSelector:(SEL)arg1 ;
-(void)increaseSize:(id)arg1 ;
-(void)decreaseSize:(id)arg1 ;
-(bool)_isDisplayingShortcutViewController;
-(bool)isEditable;
-(id)_parentScrollView;
-(bool)isEditing;
-(id)layoutManager;
-(id)initWithLayoutManager:(id)arg1 ;
-(void)_textStorageDidProcessEditing:(id)arg1 ;
-(id)interactionAssistant;
-(id)selectionView;
-(NSRange)selectedRange;
-(void)setTypingAttributes:(id)arg1 ;
-(void)_invalidateEmptyStringAttributes;
-(void)didEndEditing;
-(id)typingAttributes;
-(id)beginningOfDocument;
-(id)endOfDocument;
-(id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2 ;
-(id)textInRange:(id)arg1 ;
-(id)inputDelegate;
-(void)delegateWillChangeAttributedText:(id)arg1 ;
-(void)setSelectedRange:(NSRange)arg1 ;
-(void)addTextAlternativesDisplayStyleToRange:(NSRange)arg1 ;
-(id)_filteredAttributedTextInRange:(NSRange)arg1 ;
-(void)setSelectedTextRange:(id)arg1 ;
-(CGRect)caretRectForPosition:(id)arg1 ;
-(bool)drawsAsAtom;
-(int)atomStyle;
-(bool)hasText;
-(void)clearText;
-(id)_layoutManager;
-(void)insertText:(id)arg1 ;
-(void)deleteBackward;
-(void)replaceRange:(id)arg1 withText:(id)arg2 ;
-(void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2 ;
-(id)selectedTextRange;
-(id)markedTextRange;
-(id)markedTextStyle;
-(void)setMarkedTextStyle:(id)arg1 ;
-(void)setMarkedText:(id)arg1 selectedRange:(NSRange)arg2 ;
-(void)unmarkText;
-(id)positionFromPosition:(id)arg1 offset:(long long)arg2 ;
-(id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3 ;
-(long long)comparePosition:(id)arg1 toPosition:(id)arg2 ;
-(long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2 ;
-(id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2 ;
-(id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2 ;
-(void)setInputDelegate:(id)arg1 ;
-(id)tokenizer;
-(long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2 ;
-(void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2 ;
-(CGRect)firstRectForRange:(id)arg1 ;
-(id)selectionRectsForRange:(id)arg1 ;
-(id)closestPositionToPoint:(CGPoint)arg1 ;
-(id)closestPositionToPoint:(CGPoint)arg1 withinRange:(id)arg2 ;
-(id)characterRangeAtPoint:(CGPoint)arg1 ;
-(void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2 ;
-(id)insertDictationResultPlaceholder;
-(CGRect)frameForDictationResultPlaceholder:(id)arg1 ;
-(void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(bool)arg2 ;
-(id)rangeWithTextAlternatives:(id*)arg1 atPosition:(id)arg2 ;
-(id)metadataDictionariesForDictationResults;
-(void)beginSelectionChange;
-(void)endSelectionChange;
-(void)_selectionGeometryChanged;
-(id)_textStorage;
-(NSRange)markedRange;
-(bool)_hasDictationPlaceholder;
-(id)textStylingAtPosition:(id)arg1 inDirection:(long long)arg2 ;
-(long long)selectionAffinity;
-(void)selectAll;
-(void)setLayoutManager:(id)arg1 ;
-(void)setAllowsEditingTextAttributes:(bool)arg1 ;
-(bool)allowsEditingTextAttributes;
-(void)selectAll:(id)arg1 ;
-(void)makeTextWritingDirectionRightToLeft:(id)arg1 ;
-(void)makeTextWritingDirectionLeftToRight:(id)arg1 ;
-(void)replace:(id)arg1 ;
-(void)cut:(id)arg1 ;
-(void)copy:(id)arg1 ;
-(void)paste:(id)arg1 ;
-(void)_define:(id)arg1 ;
-(void)_addShortcut:(id)arg1 ;
-(void)toggleBoldface:(id)arg1 ;
-(void)toggleItalics:(id)arg1 ;
-(void)toggleUnderline:(id)arg1 ;
-(void)_showTextStyleOptions:(id)arg1 ;
-(void)forwardInvocation:(id)arg1 ;
-(void)updateSelection;
-(void)select:(id)arg1 ;
-(void)_promptForReplace:(id)arg1 ;
-(void)scrollRangeToVisible:(NSRange)arg1 ;
-(bool)_isDisplayingReferenceLibraryViewController;
-(void)setContinuousSpellCheckingEnabled:(bool)arg1 ;
-(void)_insertAttributedTextWithoutClosingTyping:(id)arg1 ;
-(void)_setGestureRecognizers;
-(void)_resetShowingTextStyle:(id)arg1 ;
-(id)_firstTextView;
-(CGRect)_caretRect;
-(NSRange)_selectedRange;
-(void)_ensureSelectionVisible;
-(void)_addToTypingAttributes:(id)arg1 value:(id)arg2 ;
-(bool)_canHandleResponderAction:(SEL)arg1 ;
-(bool)_shouldHandleResponderAction:(SEL)arg1 ;
-(NSRange)_rangeForBackwardsDelete;
-(void)_insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2 replacingRange:(NSRange)arg3 resultLength:(unsigned long long*)arg4 ;
-(void)_registerUndoOperationForReplacementWithActionName:(id)arg1 replacementText:(id)arg2 ;
-(bool)_mightHaveSelection;
-(void)_removeDefinitionController;
-(void)_clearSelectionUI;
-(void)stopCoalescing;
-(void)_commonInitWithLayoutManager:(id)arg1 ;
-(void)_textContainerDidChangeView:(id)arg1 ;
-(void)setPreviousSelectedRange:(NSRange)arg1 ;
-(void)_updateFirstTextView;
-(void)_cancelDictationIfNecessaryForChangeInRange:(NSRange)arg1 ;
-(void)_setupTextContainerView:(id)arg1 ;
-(void)_teardownTextContainerView:(id)arg1 ;
-(void)_setEmptyStringAttributes:(id)arg1 ;
-(void)_forceUnmarkTextDueToEditing;
-(void)_ensureSelectionValid;
-(void)_setSelectedTextRange:(id)arg1 ;
-(void)_sendDelegateChangeNotificationsForText:(bool)arg1 selection:(bool)arg2 ;
-(void)_coordinateSelectionChange:(/*^block*/ id)arg1 ;
-(void)_invalidateTypingAttributes;
-(void)_setSelectedRange:(NSRange)arg1 ;
-(void)_sendDelegateWillChangeNotificationsForText:(bool)arg1 selection:(bool)arg2 ;
-(id)_newAttributedStringForInsertionOfText:(id)arg1 inRange:(NSRange)arg2 ;
-(NSRange)nsRangeForTextRange:(id)arg1 ;
-(void)registerUndoOperationForType:(int)arg1 actionName:(id)arg2 affectedRange:(NSRange)arg3 replacementText:(id)arg4 ;
-(void)_insertText:(id)arg1 fromKeyboard:(bool)arg2 ;
-(void)checkSpellingForSelectionChangeIfNecessary;
-(void)removeAlternativesForCurrentWord;
-(void)_insertAttributedText:(id)arg1 fromKeyboard:(bool)arg2 ;
-(void)removeSpellingMarkersForCurrentWord;
-(id)textChecker;
-(void)removeSpellingMarkersFromWordInRange:(id)arg1 ;
-(bool)continuousSpellCheckingEnabled;
-(NSRange)previousSelectedRange;
-(void)checkSpellingForWordInRange:(id)arg1 ;
-(bool)_shouldConsiderTextViewForGeometry:(id)arg1 ;
-(unsigned long long)_validCaretPositionFromCharacterIndex:(unsigned long long)arg1 downstream:(bool)arg2 ;
-(CGRect)_caretRectForOffset:(unsigned long long)arg1 ;
-(id)_rectsForRange:(NSRange)arg1 ;
-(id)_characterPositionForPoint:(CGPoint)arg1 ;
-(id)_whitelistedTypingAttributes;
-(id)_attributesForReplacementInRange:(NSRange)arg1 ;
-(id)_emptyStringAttributes;
-(id)_fixupTypingAttributeForAttributes:(id)arg1 ;
-(void)_undoManagerWillUndo:(id)arg1 ;
-(bool)isCoalescing;
-(bool)_undoRedoInProgress;
-(void)coalesceInTextView:(id)arg1 affectedRange:(NSRange)arg2 replacementRange:(NSRange)arg3 ;
-(id)textRangeForNSRange:(NSRange)arg1 ;
-(id)_selectedText;
-(void)removeTextStylingFromString:(id)arg1 ;
-(void)_copySelectionToClipboard;
-(bool)_delegateShouldChangeTextInRange:(NSRange)arg1 replacementText:(id)arg2 ;
-(void)_removeShortcutController;
-(void)_toggleFontTrait:(int)arg1 ;
-(void)_selectionDidScroll:(id)arg1 ;
-(void)preheatTextChecker;
-(void)undoWillChangeText;
-(void)undoDidChangeText;
-(void)_setUndoRedoInProgress:(bool)arg1 ;
-(void)changeWillBeUndone:(id)arg1 ;
-(id)_selectedAttributedText;
-(bool)_isSecureTextEntry;
@end

