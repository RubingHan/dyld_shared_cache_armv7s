/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:00:03 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIKit/UIKit-Structs.h>
#import <UIKit/UIScrollView.h>
#import <UIKit/UITextLinkInteraction.h>
#import <UIKit/UITextInput.h>

@class UIView, NSString, UIFont, UIColor, NSAttributedString, NSDictionary, UITextRange, UITextPosition;

@interface _UICompatibilityTextView : UIScrollView <UITextLinkInteraction, UITextInput> {

	id _private;
	bool m_editing;
	UIView* m_inputView;

}

@property (assign,nonatomic,@dynamic) <UITextViewDelegate> * delegate; 
@property (nonatomic,copy) NSString * text; 
@property (nonatomic,retain) UIFont * font; 
@property (nonatomic,retain) UIColor * textColor; 
@property (assign,nonatomic) long long textAlignment; 
@property (assign,nonatomic) NSRange selectedRange; 
@property (assign,getter=isEditable,nonatomic) bool editable; 
@property (assign,nonatomic) unsigned long long dataDetectorTypes; 
@property (assign,nonatomic) bool allowsEditingTextAttributes; 
@property (nonatomic,copy) NSAttributedString * attributedText; 
@property (nonatomic,copy) NSDictionary * typingAttributes; 
@property (retain) UIView * inputView; 
@property (retain) UIView * inputAccessoryView; 
@property (assign,nonatomic) bool clearsOnInsertion; 
@property (assign,getter=isEditing,nonatomic) bool editing; 
@property (assign,nonatomic,@dynamic) long long autocapitalizationType; 
@property (assign,nonatomic,@dynamic) long long autocorrectionType; 
@property (assign,nonatomic,@dynamic) long long spellCheckingType; 
@property (assign,nonatomic,@dynamic) long long keyboardType; 
@property (assign,nonatomic,@dynamic) long long keyboardAppearance; 
@property (assign,nonatomic,@dynamic) long long returnKeyType; 
@property (assign,nonatomic,@dynamic) bool enablesReturnKeyAutomatically; 
@property (assign,getter=isSecureTextEntry,nonatomic,@dynamic) bool secureTextEntry; 
@property (copy) UITextRange * selectedTextRange; 
@property (nonatomic,readonly) UITextRange * markedTextRange; 
@property (nonatomic,copy) NSDictionary * markedTextStyle; 
@property (nonatomic,readonly) UITextPosition * beginningOfDocument; 
@property (nonatomic,readonly) UITextPosition * endOfDocument; 
@property (assign,nonatomic) <UITextInputDelegate> * inputDelegate; 
@property (nonatomic,readonly) <UITextInputTokenizer> * tokenizer; 
@property (nonatomic,readonly) UIView * textInputView; 
@property (assign,nonatomic) long long selectionAffinity; 
+(bool)_isCompatibilityTextView;
+(void)initialize;
+(id)excludedElementsForHTML;
+(id)_bestInterpretationForDictationResult:(id)arg1 ;
-(void)encodeRestorableStateWithCoder:(id)arg1 ;
-(void)decodeRestorableStateWithCoder:(id)arg1 ;
-(id)_automationValue;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)_populateArchivedSubviews:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)hitTest:(CGPoint)arg1 withEvent:(id)arg2 ;
-(bool)respondsToSelector:(SEL)arg1 ;
-(void)setFrame:(CGRect)arg1 ;
-(void)layoutSubviews;
-(void)removeFromSuperview;
-(void)setBounds:(CGRect)arg1 ;
-(CGSize)sizeThatFits:(CGSize)arg1 ;
-(bool)canPerformAction:(SEL)arg1 withSender:(id)arg2 ;
-(id)undoManager;
-(bool)resignFirstResponder;
-(id)methodSignatureForSelector:(SEL)arg1 ;
-(bool)becomeFirstResponder;
-(bool)isEditable;
-(void)setTextColor:(id)arg1 ;
-(void)setFont:(id)arg1 ;
-(void)setTextAlignment:(long long)arg1 ;
-(id)text;
-(void)setText:(id)arg1 ;
-(double)lineHeight;
-(void)touchesEnded:(id)arg1 withEvent:(id)arg2 ;
-(void)setCenter:(CGPoint)arg1 ;
-(bool)isFirstResponder;
-(bool)canBecomeFirstResponder;
-(void)didMoveToSuperview;
-(CGImageRef)newSnapshotWithRect:(CGRect)arg1 ;
-(CGImageRef)createSnapshotWithRect:(CGRect)arg1 ;
-(bool)_requiresKeyboardWhenFirstResponder;
-(bool)_alwaysHandleScrollerMouseEvent;
-(void)setScrollEnabled:(bool)arg1 ;
-(void)setScrollingEnabled:(bool)arg1 ;
-(void)setAttributedText:(id)arg1 ;
-(id)attributedText;
-(id)font;
-(bool)isEditing;
-(void)setEditing:(bool)arg1 ;
-(id)interactionAssistant;
-(id)selectionView;
-(bool)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(bool)arg3 ;
-(bool)keyboardInput:(id)arg1 shouldReplaceTextInRange:(NSRange)arg2 replacementText:(id)arg3 ;
-(bool)keyboardInputShouldDelete:(id)arg1 ;
-(bool)keyboardInputChanged:(id)arg1 ;
-(void)keyboardInputChangedSelection:(id)arg1 ;
-(void)scrollSelectionToVisible:(bool)arg1 ;
-(id)textInputTraits;
-(id)textColor;
-(id)textInputView;
-(NSRange)selectedRange;
-(void)setTypingAttributes:(id)arg1 ;
-(long long)textAlignment;
-(id)typingAttributes;
-(id)beginningOfDocument;
-(id)endOfDocument;
-(id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2 ;
-(id)textInRange:(id)arg1 ;
-(id)inputDelegate;
-(void)setSelectedRange:(NSRange)arg1 ;
-(void)setSelectedTextRange:(id)arg1 ;
-(CGRect)caretRectForPosition:(id)arg1 ;
-(bool)hasText;
-(void)insertText:(id)arg1 ;
-(void)deleteBackward;
-(void)replaceRange:(id)arg1 withText:(id)arg2 ;
-(id)selectedTextRange;
-(id)markedTextRange;
-(id)markedTextStyle;
-(void)setMarkedTextStyle:(id)arg1 ;
-(void)setMarkedText:(id)arg1 selectedRange:(NSRange)arg2 ;
-(void)unmarkText;
-(id)positionFromPosition:(id)arg1 offset:(long long)arg2 ;
-(id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3 ;
-(long long)comparePosition:(id)arg1 toPosition:(id)arg2 ;
-(long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2 ;
-(id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2 ;
-(id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2 ;
-(void)setInputDelegate:(id)arg1 ;
-(id)tokenizer;
-(long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2 ;
-(void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2 ;
-(CGRect)firstRectForRange:(id)arg1 ;
-(id)selectionRectsForRange:(id)arg1 ;
-(id)closestPositionToPoint:(CGPoint)arg1 ;
-(id)closestPositionToPoint:(CGPoint)arg1 withinRange:(id)arg2 ;
-(id)characterRangeAtPoint:(CGPoint)arg1 ;
-(void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2 ;
-(id)insertDictationResultPlaceholder;
-(CGRect)frameForDictationResultPlaceholder:(id)arg1 ;
-(void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(bool)arg2 ;
-(id)metadataDictionariesForDictationResults;
-(void)beginSelectionChange;
-(void)endSelectionChange;
-(id)forwardingTargetForSelector:(SEL)arg1 ;
-(CGRect)visibleRect;
-(long long)selectionAffinity;
-(void)setSelectionAffinity:(long long)arg1 ;
-(void)selectAll;
-(bool)canResignFirstResponder;
-(id)inputView;
-(id)inputAccessoryView;
-(id)_keyboardResponder;
-(void)commonInitWithWebDocumentView:(id)arg1 isDecoding:(bool)arg2 ;
-(void)setAllowsEditingTextAttributes:(bool)arg1 ;
-(void)setEditable:(bool)arg1 ;
-(void)setLineHeight:(double)arg1 ;
-(void)setDataDetectorTypes:(unsigned long long)arg1 ;
-(bool)allowsEditingTextAttributes;
-(unsigned long long)dataDetectorTypes;
-(id)webView;
-(id)styleString;
-(CGSize)tileSizeForSize:(CGSize)arg1 ;
-(id)_proxyTextInput;
-(void)updateWebViewObjects;
-(void)webViewDidChange:(id)arg1 ;
-(void)registerForEditingDelegateNotification:(id)arg1 selector:(SEL)arg2 ;
-(void)updateContentEditableAttribute:(bool)arg1 ;
-(void)keyboardDidShow:(id)arg1 ;
-(void)cancelDataDetectorsWithWebLock;
-(void)_dealloc;
-(void)setInputView:(id)arg1 ;
-(void)setInputAccessoryView:(id)arg1 ;
-(void)delayedUpdateForKeyboardDidShow;
-(void)performBecomeEditableTasks;
-(void)selectAll:(id)arg1 ;
-(void)setSelectionToEnd;
-(CGRect)visibleTextRect;
-(void)setClearsOnInsertion:(bool)arg1 ;
-(void)makeTextWritingDirectionRightToLeft:(id)arg1 ;
-(void)makeTextWritingDirectionLeftToRight:(id)arg1 ;
-(void)replace:(id)arg1 ;
-(void)cut:(id)arg1 ;
-(void)copy:(id)arg1 ;
-(void)paste:(id)arg1 ;
-(void)_define:(id)arg1 ;
-(void)_addShortcut:(id)arg1 ;
-(void)toggleBoldface:(id)arg1 ;
-(void)toggleItalics:(id)arg1 ;
-(void)toggleUnderline:(id)arg1 ;
-(void)_showTextStyleOptions:(id)arg1 ;
-(id)undoManagerForWebView:(id)arg1 ;
-(bool)shouldScrollEnclosingScrollView;
-(void)scrollRectToVisibleInContainingScrollView;
-(void)ensureSelection;
-(void)_updateForNewSize:(CGSize)arg1 withOldSize:(CGSize)arg2 ;
-(bool)shouldStartDataDetectors;
-(void)startDataDetectorsWithWebLock;
-(void)forwardInvocation:(id)arg1 ;
-(void)_transferAttribute:(id)arg1 fromString:(id)arg2 andSetPropertyWith:(SEL)arg3 usingValueClass:(Class)arg4 ;
-(void)_transferTextViewPropertiesFromText:(id)arg1 ;
-(void)setContentToHTMLString:(id)arg1 ;
-(void)recalculateStyle;
-(void)resetDataDetectorsResultsWithWebLock;
-(unsigned long long)_allowedLinkTypes;
-(long long)selectionGranularity;
-(void)setSelectionGranularity:(long long)arg1 ;
-(bool)mightHaveLinks;
-(void)tapLinkAtPoint:(CGPoint)arg1 ;
-(bool)isInteractingWithLink;
-(void)startInteractionWithLinkAtPoint:(CGPoint)arg1 ;
-(void)updateInteractionWithLinkAtPoint:(CGPoint)arg1 ;
-(void)validateInteractionWithLinkAtPoint:(CGPoint)arg1 ;
-(void)cancelInteractionWithLink;
-(void)startLongInteractionWithLinkAtPoint:(CGPoint)arg1 ;
-(bool)willInteractWithLinkAtPoint:(CGPoint)arg1 ;
-(id)initWithFrame:(CGRect)arg1 webView:(id)arg2 ;
-(id)initWithFrame:(CGRect)arg1 font:(id)arg2 ;
-(CGPoint)constrainedPoint:(CGPoint)arg1 ;
-(void)_setDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2 ;
-(bool)clearsOnInsertion;
-(void)disableClearsOnInsertion;
-(void)updateSelection;
-(id)selectedText;
-(void)select:(id)arg1 ;
-(void)_promptForReplace:(id)arg1 ;
-(id)supportedPasteboardTypesForCurrentSelection;
-(id)documentFragmentForPasteboardItemAtIndex:(long long)arg1 ;
-(void)setSelectionToStart;
-(CGRect)rectForSelection:(NSRange)arg1 ;
-(id)contentAsHTMLString;
-(bool)becomesEditableWithGestures;
-(void)setBecomesEditableWithGestures:(bool)arg1 ;
-(int)marginTop;
-(void)setMarginTop:(int)arg1 ;
-(void)scrollRangeToVisible:(NSRange)arg1 ;
-(id)automaticallySelectedOverlay;
-(void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5 ;
-(void)setBottomBufferHeight:(double)arg1 ;
-(double)bottomBufferHeight;
-(void)setShowScrollerIndicators:(bool)arg1 ;
-(bool)showScrollerIndicators;
-(void)displayScrollerIndicators;
-(void)setOffset:(CGPoint)arg1 ;
-(CGPoint)offset;
-(void)setAllowsRubberBanding:(bool)arg1 ;
-(bool)scrollingEnabled;
-(void)setAllowsFourWayRubberBanding:(bool)arg1 ;
-(void)setScrollerIndicatorSubrect:(CGRect)arg1 ;
-(void)scrollToMakeCaretVisible:(bool)arg1 ;
-(Class)_printFormatterClass;
@end

