/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:00:10 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIKit/UIKit-Structs.h>
#import <UIKit/UIPanGestureRecognizer.h>

@class UIScrollView;

@interface UIScrollViewPanGestureRecognizer : UIPanGestureRecognizer {

	UIScrollView* _scrollView;
	SEL _scrollViewAction;
	CGPoint _reconsideredLockingLocation;
	unsigned _lastLockingAxis : 2;
	unsigned _lockingAxis : 2;
	unsigned _hasChildScrollView : 1;
	unsigned _hasParentScrollView : 1;
	unsigned _caughtDeceleratingScrollView : 1;
	unsigned _directionalLockEnabled : 1;
	unsigned _transfersTrackingFromParentScrollView : 1;

}

@property (assign,nonatomic) UIScrollView * scrollView;                                                             //@synthesize scrollView=_scrollView - In the implementation block
@property (assign,getter=isDirectionalLockEnabled,nonatomic) bool directionalLockEnabled; 
@property (getter=_caughtDeceleratingScrollView,nonatomic,readonly) bool caughtDeceleratingScrollView; 
-(void)setDelegate:(id)arg1 ;
-(CGPoint)translationInView:(id)arg1 ;
-(CGPoint)velocityInView:(id)arg1 ;
-(id)initWithTarget:(id)arg1 action:(SEL)arg2 ;
-(double)_hysteresis;
-(void)touchesCancelled:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesBegan:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesMoved:(id)arg1 withEvent:(id)arg2 ;
-(void)setDirectionalLockEnabled:(bool)arg1 ;
-(bool)isDirectionalLockEnabled;
-(void)setScrollView:(id)arg1 ;
-(void)removeTarget:(id)arg1 action:(SEL)arg2 ;
-(bool)_caughtDeceleratingScrollView;
-(void)_scrollViewDidEndZooming;
-(bool)canBePreventedByGestureRecognizer:(id)arg1 ;
-(void)_resetGestureRecognizer;
-(id)scrollView;
-(CGPoint)_adjustScreenLocation:(CGPoint)arg1 ;
-(void)_centroidMovedTo:(CGPoint)arg1 atTime:(double)arg2 ;
-(bool)_shouldTryToBeginWithEvent:(id)arg1 ;
-(bool)_canTransferTrackingFromParentPagingScrollView;
-(bool)_shouldTransferTrackingFromParentScrollViewForCurrentOffset;
-(bool)_shouldContinueToWaitToTransferTrackingFromParentScrollView;
@end

