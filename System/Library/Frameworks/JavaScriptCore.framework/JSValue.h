/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:38 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <JavaScriptCore/JavaScriptCore-Structs.h>
@class JSContext;

@interface JSValue : NSObject {

	OpaqueJSValueRef m_value;
	JSContext* _context;

}

@property (readonly) JSContext * context;              //@synthesize context=_context - In the implementation block
+(SEL)selectorForStructToValue:(const char*)arg1 ;
+(SEL)selectorForValueToStruct:(const char*)arg1 ;
+(id)valueWithJSValueRef:(OpaqueJSValueRef)arg1 inContext:(id)arg2 ;
+(id)valueWithPoint:(CGPoint)arg1 inContext:(id)arg2 ;
+(id)valueWithRange:(NSRange)arg1 inContext:(id)arg2 ;
+(id)valueWithRect:(CGRect)arg1 inContext:(id)arg2 ;
+(id)valueWithSize:(CGSize)arg1 inContext:(id)arg2 ;
+(id)valueWithUndefinedInContext:(id)arg1 ;
+(id)valueWithDouble:(double)arg1 inContext:(id)arg2 ;
+(id)valueWithObject:(id)arg1 inContext:(id)arg2 ;
+(id)valueWithBool:(bool)arg1 inContext:(id)arg2 ;
+(id)valueWithInt32:(int)arg1 inContext:(id)arg2 ;
+(id)valueWithUInt32:(unsigned)arg1 inContext:(id)arg2 ;
+(id)valueWithNewObjectInContext:(id)arg1 ;
+(id)valueWithNewArrayInContext:(id)arg1 ;
+(id)valueWithNewRegularExpressionFromPattern:(id)arg1 flags:(id)arg2 inContext:(id)arg3 ;
+(id)valueWithNewErrorFromMessage:(id)arg1 inContext:(id)arg2 ;
+(id)valueWithNullInContext:(id)arg1 ;
-(id)initWithValue:(OpaqueJSValueRef)arg1 inContext:(id)arg2 ;
-(void)dealloc;
-(id)init;
-(id)description;
-(id)objectAtIndexedSubscript:(unsigned long long)arg1 ;
-(id)objectForKeyedSubscript:(id)arg1 ;
-(void)setObject:(id)arg1 forKeyedSubscript:(id)arg2 ;
-(void)setObject:(id)arg1 atIndexedSubscript:(unsigned long long)arg2 ;
-(CGSize)toSize;
-(NSRange)toRange;
-(CGRect)toRect;
-(CGPoint)toPoint;
-(id)toObject;
-(double)toDouble;
-(id)invokeMethod:(id)arg1 withArguments:(id)arg2 ;
-(OpaqueJSValueRef)JSValueRef;
-(id)toObjectOfClass:(Class)arg1 ;
-(bool)toBool;
-(int)toInt32;
-(unsigned)toUInt32;
-(id)toNumber;
-(id)toDate;
-(id)toArray;
-(id)toDictionary;
-(bool)deleteProperty:(id)arg1 ;
-(bool)hasProperty:(id)arg1 ;
-(void)defineProperty:(id)arg1 descriptor:(id)arg2 ;
-(bool)isUndefined;
-(bool)isBoolean;
-(bool)isNumber;
-(bool)isString;
-(bool)isObject;
-(bool)isEqualToObject:(id)arg1 ;
-(bool)isEqualWithTypeCoercionToObject:(id)arg1 ;
-(bool)isInstanceOf:(id)arg1 ;
-(id)constructWithArguments:(id)arg1 ;
-(id)context;
-(id)valueForProperty:(id)arg1 ;
-(void)setValue:(id)arg1 forProperty:(id)arg2 ;
-(bool)isNull;
-(void)setValue:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(id)valueAtIndex:(unsigned long long)arg1 ;
-(id)toString;
-(id)callWithArguments:(id)arg1 ;
@end

