/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:39 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

typedef struct OpaqueJSContext* OpaqueJSContextRef;

typedef struct Strong<JSC::JSObject> {
	JSValue m_slot;
} Strong<JSC::JSObject>;

typedef struct OpaqueJSValue* OpaqueJSValueRef;

typedef struct OpaqueJSContextGroup* OpaqueJSContextGroupRef;

typedef struct Weak<JSC::JSObject> {
	WeakImpl m_impl;
} Weak<JSC::JSObject>;

typedef struct HashTable<id, WTF::KeyValuePair<id, JSC::Weak<JSC::JSObject> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<id, JSC::Weak<JSC::JSObject> > >, WTF::PtrHash<id>, WTF::HashMapValueTraits<WTF::HashTraits<id>, WTF::HashTraits<JSC::Weak<JSC::JSObject> > >, WTF::HashTraits<id> > {
	KeyValuePair<id, JSC::Weak<JSC::JSObject> > m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
} HashTable<id, WTF::KeyValuePair<id, JSC::Weak<JSC::JSObject> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<id, JSC::Weak<JSC::JSObject> > >, WTF::PtrHash<id>, WTF::HashMapValueTraits<WTF::HashTraits<id>, WTF::HashTraits<JSC::Weak<JSC::JSObject> > >, WTF::HashTraits<id> >;

typedef struct WeakGCMap<id, JSC::JSObject, WTF::PtrHash<id>, WTF::HashTraits<id> > {
	HashTable<id, WTF::KeyValuePair<id, JSC::Weak<JSC::JSObject> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<id, JSC::Weak<JSC::JSObject> > >, WTF::PtrHash<id>, WTF::HashMapValueTraits<WTF::HashTraits<id>, WTF::HashTraits<JSC::Weak<JSC::JSObject> > >, WTF::HashTraits<id> > m_impl;
	int m_gcThreshold;
} WeakGCMap<id, JSC::JSObject, WTF::PtrHash<id>, WTF::HashTraits<id> >;

typedef struct Weak<JSC::JSGlobalObject> {
	WeakImpl m_impl;
} Weak<JSC::JSGlobalObject>;

typedef struct {
	int payload;
	int tag;
} SCD_Struct_JS8;

typedef struct Weak<JSC::JSString> {
	WeakImpl m_impl;
} Weak<JSC::JSString>;

typedef struct JSValue {
	EncodedValueDescriptor u;
	long long asInt64;
	JSCell ptr;
	SCD_Struct_JS8) asBits;
} JSValue;

typedef struct WeakValueRef {
	int m_tag;
	WeakValueUnion u;
	JSValue m_primitive;
	Weak<JSC::JSObject> m_object;
	Weak<JSC::JSString>) m_string;
} WeakValueRef;

