/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:13 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/CoreImage.framework/CoreImage
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CoreImage/CoreImage-Structs.h>
#import <CoreFoundation/NSCopying.h>

@interface CIBurstFaceStat : NSObject <NSCopying> {

	bool leftEyeOpen;
	bool rightEyeOpen;
	bool smiling;
	bool hasLeftEye;
	bool hasRightEye;
	bool foundByFaceCore;
	CGRect faceRect;
	CGRect leftEyeRect;
	CGRect rightEyeRect;
	float leftEyeBlinkScore;
	float rightEyeBlinkScore;
	float smileScore;
	CGRect normalizedFaceRect;
	int faceId;
	int framesSinceLast;
	float focusScore;
	float faceScore;
	float normalizedFocusScore;
	float normalizedSigma;
	bool hasRollAngle;
	bool hasYawAngle;
	float rollAngle;
	float yawAngle;
	double timestamp;

}

@property (assign) bool leftEyeOpen; 
@property (assign) bool rightEyeOpen; 
@property (assign) bool smiling; 
@property (assign) float leftEyeBlinkScore; 
@property (assign) float rightEyeBlinkScore; 
@property (assign) float smileScore; 
@property (assign) bool hasLeftEye; 
@property (assign) bool hasRightEye; 
@property (assign) bool foundByFaceCore; 
@property (assign) CGRect faceRect; 
@property (assign) CGRect normalizedFaceRect; 
@property (assign) int faceId; 
@property (assign) int framesSinceLast; 
@property (assign) float focusScore; 
@property (assign) float faceScore; 
@property (assign) CGRect leftEyeRect; 
@property (assign) CGRect rightEyeRect; 
@property (assign) float normalizedFocusScore; 
@property (assign) float normalizedSigma; 
@property (assign) bool hasRollAngle; 
@property (assign) bool hasYawAngle; 
@property (assign) float rollAngle; 
@property (assign) float yawAngle; 
@property (assign) double timestamp; 
-(int)faceId;
-(void)setFaceId:(int)arg1 ;
-(CGRect)faceRect;
-(void)setFaceRect:(CGRect)arg1 ;
-(int)framesSinceLast;
-(void)setFramesSinceLast:(int)arg1 ;
-(void)setNormalizedFaceRect:(CGRect)arg1 ;
-(void)setFoundByFaceCore:(bool)arg1 ;
-(void)setHasLeftEye:(bool)arg1 ;
-(void)setHasRightEye:(bool)arg1 ;
-(void)setLeftEyeOpen:(bool)arg1 ;
-(void)setRightEyeOpen:(bool)arg1 ;
-(void)setSmiling:(bool)arg1 ;
-(void)setLeftEyeBlinkScore:(float)arg1 ;
-(void)setRightEyeBlinkScore:(float)arg1 ;
-(void)setSmileScore:(float)arg1 ;
-(bool)leftEyeOpen;
-(bool)rightEyeOpen;
-(void)setLeftEyeRect:(CGRect)arg1 ;
-(void)setRightEyeRect:(CGRect)arg1 ;
-(bool)foundByFaceCore;
-(bool)hasLeftEye;
-(bool)hasRightEye;
-(CGRect)leftEyeRect;
-(CGRect)rightEyeRect;
-(void)setFocusScore:(float)arg1 ;
-(float)focusScore;
-(void)setNormalizedFocusScore:(float)arg1 ;
-(void)setNormalizedSigma:(float)arg1 ;
-(void)setHasRollAngle:(bool)arg1 ;
-(void)setRollAngle:(float)arg1 ;
-(void)setHasYawAngle:(bool)arg1 ;
-(void)setYawAngle:(float)arg1 ;
-(bool)smiling;
-(CGRect)normalizedFaceRect;
-(float)normalizedSigma;
-(float)normalizedFocusScore;
-(float)faceScore;
-(float)leftEyeBlinkScore;
-(float)rightEyeBlinkScore;
-(float)smileScore;
-(id)initWithFaceStat:(id)arg1 ;
-(void)setFaceScore:(float)arg1 ;
-(bool)hasRollAngle;
-(bool)hasYawAngle;
-(float)rollAngle;
-(float)yawAngle;
-(double)timestamp;
-(void)setTimestamp:(double)arg1 ;
-(id)copyWithZone:(NSZone)arg1 ;
@end

