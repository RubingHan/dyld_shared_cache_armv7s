/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:44 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Foundation/SSDownloadManagerObserver.h>

@protocol OS_dispatch_queue, MPAVQueuePlayerFeederSource;
@class MPDownloadManager, NSMutableArray, NSMutableSet, NSObject, MPQueuePlayer, MPAVItem, NSArray;

@interface MPAVQueuePlayerFeeder : NSObject <SSDownloadManagerObserver> {

	unsigned long long _desiredQueueDepth;
	MPDownloadManager* _downloadManager;
	bool _forceSynchronousQueueFilling;
	bool _fillQueueActive;
	NSMutableArray* _items;
	bool _managesSystemDownloads;
	unsigned long long _maxQueueDepth;
	unsigned long long _minQueueDepth;
	long long _nextFillQueueToken;
	NSMutableSet* _pausedDownloads;
	NSObject<OS_dispatch_queue>* _pausedDownloadsQueue;
	MPQueuePlayer* _player;
	NSObject<OS_dispatch_queue>* _playerQueue;
	<MPAVQueuePlayerFeederSource>* _playlistItemSource;
	NSMutableSet* _reusableItems;

}

@property (nonatomic,readonly) MPAVItem * currentItem; 
@property (nonatomic,readonly) NSArray * items; 
@property (assign,nonatomic) unsigned long long minQueueDepth;               //@synthesize minQueueDepth=_minQueueDepth - In the implementation block
@property (assign,nonatomic) unsigned long long maxQueueDepth;               //@synthesize maxQueueDepth=_maxQueueDepth - In the implementation block
@property (assign,nonatomic) bool managesSystemDownloads;                    //@synthesize managesSystemDownloads=_managesSystemDownloads - In the implementation block
@property (assign,nonatomic) bool forceSynchronousQueueFilling;              //@synthesize forceSynchronousQueueFilling=_forceSynchronousQueueFilling - In the implementation block
-(void)downloadManager:(id)arg1 downloadStatesDidChange:(id)arg2 ;
-(void)setForceSynchronousQueueFilling:(bool)arg1 ;
-(void)setManagesSystemDownloads:(bool)arg1 ;
-(void)setMaxQueueDepth:(unsigned long long)arg1 ;
-(bool)forceSynchronousQueueFilling;
-(bool)managesSystemDownloads;
-(id)initWithMPQueuePlayer:(id)arg1 itemSource:(id)arg2 ;
-(void)cancelReusableItemsPassingTest:(/*^block*/ id)arg1 ;
-(void)reloadQueueKeepingCurrentItem:(bool)arg1 ;
-(unsigned long long)maxQueueDepth;
-(unsigned long long)minQueueDepth;
-(void)setMinQueueDepth:(unsigned long long)arg1 ;
-(id)acquireReusableItemsUsingBlock:(/*^block*/ id)arg1 ;
-(void)advanceToNextItem;
-(void)_effectiveNetworkTypeDidChangeNotification:(id)arg1 ;
-(void)_pauseOrResumeDownloads:(id)arg1 currentDownloadID:(long long)arg2 ;
-(void)_removeCurrentItemAndFillQueue:(bool)arg1 ;
-(void)_updateQueueDepthForRateChange;
-(id)_fillInQueueWithExtraSpace:(int)arg1 ;
-(id)_fillInQueueWithExtraSpace:(int)arg1 ignoreExistingItems:(bool)arg2 ;
-(id)_fillInQueueWithExtraSpace:(int)arg1 ignoreExistingItems:(bool)arg2 removeCurrentItem:(bool)arg3 ;
-(void)_markIsReusable:(bool)arg1 item:(id)arg2 ;
-(void)_updatePlayerQueueWithRemovedItems:(id)arg1 addedItems:(id)arg2 removeCurrentItem:(bool)arg3 ;
-(void)_reloadQueueKeepingCurrentItem:(bool)arg1 allowReusingItems:(bool)arg2 ;
-(void)_removeInvalidItems:(id)arg1 ;
-(void)_fillInQueue;
-(void)dealloc;
-(id)description;
-(void)invalidate;
-(id)items;
-(id)currentItem;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void).cxx_destruct;
@end

