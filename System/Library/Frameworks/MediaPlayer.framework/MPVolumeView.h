/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:42 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <MediaPlayer/MediaPlayer-Structs.h>
#import <UIKit/UIView.h>
#import <MediaPlayer/MPAVRoutingControllerDelegate.h>
#import <CoreFoundation/NSCoding.h>

@class MPAVRoutingSheet, MPAVRoutingController, UIButton, UILabel, MPAudioVideoRoutingPopoverController, MPVolumeSlider, UIImage;

@interface MPVolumeView : UIView <MPAVRoutingControllerDelegate, NSCoding> {

	MPAVRoutingSheet* _routingSheet;
	MPAVRoutingController* _routingController;
	bool _hasNonDefaultRouteButtonImages;
	bool _hasNonDefaultMaxVolumeSliderImage;
	bool _hasNonDefaultMinVolumeSliderImage;
	bool _hidesRouteLabelWhenNoRouteChoice;
	UIButton* _routeButton;
	bool _routeButtonShowsTouchWhenHighlighted;
	bool _routeDiscoveryEnabled;
	UILabel* _routeLabel;
	MPAudioVideoRoutingPopoverController* _routePopoverController;
	bool _showingButton;
	bool _showingLabel;
	bool _showingSlider;
	bool _showsRouteButton;
	bool _showsVolumeSlider;
	long long _style;
	MPVolumeSlider* _volumeSlider;
	bool _volumeSliderShrinksFromBothEnds;
	bool _wirelessRouteIsPicked;
	bool _wirelessRoutesAvailable;
	bool _pushedRouteDiscoveryModeState;
	unsigned long long _routePopoverPermittedArrowDirections;

}

@property (assign,nonatomic) bool showsVolumeSlider; 
@property (assign,nonatomic) bool showsRouteButton; 
@property (getter=areWirelessRoutesAvailable,nonatomic,readonly) bool wirelessRoutesAvailable; 
@property (getter=isWirelessRouteActive,nonatomic,readonly) bool wirelessRouteActive; 
@property (nonatomic,retain) UIImage * volumeWarningSliderImage; 
@property (nonatomic,readonly) long long style; 
@property (nonatomic,readonly) MPVolumeSlider * volumeSlider; 
@property (assign,nonatomic) bool volumeSliderShrinksFromBothEnds; 
@property (assign,nonatomic) bool hidesRouteLabelWhenNoRouteChoice; 
@property (nonatomic,readonly) bool isVisible; 
@property (nonatomic,readonly) bool isShowingRouteButton; 
@property (assign,nonatomic) bool routeButtonShowsTouchWhenHighlighted; 
@property (assign,nonatomic) unsigned long long routePopoverPermittedArrowDirections;                       //@synthesize routePopoverPermittedArrowDirections=_routePopoverPermittedArrowDirections - In the implementation block
-(void)_applicationDidEnterBackgroundNotification:(id)arg1 ;
-(void)_applicationWillEnterForegroundNotification:(id)arg1 ;
-(void)routingControllerAvailableRoutesDidChange:(id)arg1 ;
-(void)_createSubviews;
-(void)_registerNotifications;
-(void)_initWithStyle:(long long)arg1 ;
-(void)_unregisterNotifications;
-(void)_setShowsVolumeSlider:(bool)arg1 ;
-(void)_setShowsRouteButton:(bool)arg1 animated:(bool)arg2 ;
-(void)_setRouteDiscoveryEnabled:(bool)arg1 ;
-(void)_updateWirelessRouteStatus;
-(void)_getDefaultVolumeSliderFrame:(CGRect*)arg1 routeButtonFrame:(CGRect*)arg2 forBounds:(CGRect)arg3 ;
-(bool)routeButtonShowsTouchWhenHighlighted;
-(id)_defaultRouteButtonImageAsSelected:(bool)arg1 ;
-(void)_displayAudioRoutePicker;
-(CGRect)volumeSliderRectForBounds:(CGRect)arg1 ;
-(CGRect)routeButtonRectForBounds:(CGRect)arg1 ;
-(bool)isShowingRouteButton;
-(bool)isWirelessRouteActive;
-(bool)areWirelessRoutesAvailable;
-(id)minimumVolumeSliderImageForState:(unsigned long long)arg1 ;
-(id)maximumVolumeSliderImageForState:(unsigned long long)arg1 ;
-(id)volumeWarningSliderImage;
-(id)routeButtonImageForState:(unsigned long long)arg1 ;
-(void)setMinimumVolumeSliderImage:(id)arg1 forState:(unsigned long long)arg2 ;
-(void)setMaximumVolumeSliderImage:(id)arg1 forState:(unsigned long long)arg2 ;
-(void)setVolumeWarningSliderImage:(id)arg1 ;
-(void)setRouteButtonImage:(id)arg1 forState:(unsigned long long)arg2 ;
-(void)setRouteButtonShowsTouchWhenHighlighted:(bool)arg1 ;
-(void)setShowsRouteButton:(bool)arg1 ;
-(void)setShowsVolumeSlider:(bool)arg1 ;
-(void)setVolumeThumbImage:(id)arg1 forState:(unsigned long long)arg2 ;
-(bool)showsRouteButton;
-(bool)showsVolumeSlider;
-(id)volumeThumbImageForState:(unsigned long long)arg1 ;
-(CGRect)volumeThumbRectForBounds:(CGRect)arg1 volumeSliderRect:(CGRect)arg2 value:(float)arg3 ;
-(id)volumeSlider;
-(bool)hidesRouteLabelWhenNoRouteChoice;
-(bool)volumeSliderShrinksFromBothEnds;
-(void)setHidesRouteLabelWhenNoRouteChoice:(bool)arg1 ;
-(void)setVolumeSliderShrinksFromBothEnds:(bool)arg1 ;
-(void)dismissActiveOverlaysAnimated:(bool)arg1 ;
-(bool)isShowingActiveOverlays;
-(void)_setVolumeAudioCategory:(id)arg1 ;
-(id)_routeButton;
-(unsigned long long)routePopoverPermittedArrowDirections;
-(void)setRoutePopoverPermittedArrowDirections:(unsigned long long)arg1 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(bool)pointInside:(CGPoint)arg1 withEvent:(id)arg2 ;
-(void)setHidden:(bool)arg1 ;
-(void)setAlpha:(double)arg1 ;
-(void)didMoveToWindow;
-(void)setFrame:(CGRect)arg1 ;
-(void)layoutSubviews;
-(CGSize)sizeThatFits:(CGSize)arg1 ;
-(long long)style;
-(void)willMoveToWindow:(id)arg1 ;
-(void)didMoveToSuperview;
-(id)initWithFrame:(CGRect)arg1 style:(long long)arg2 ;
-(bool)isVisible;
-(void).cxx_destruct;
-(void)popoverControllerDidDismissPopover:(id)arg1 ;
@end

