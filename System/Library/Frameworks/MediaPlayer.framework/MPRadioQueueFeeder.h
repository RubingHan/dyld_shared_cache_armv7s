/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:45 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <MediaPlayer/MPQueueFeeder.h>
#import <UIKit/UIAlertViewDelegate.h>

@class MPRadioAdObserver, NSMapTable, NSArray, ADBannerView, RadioStation, RadioStationSkipController;

@interface MPRadioQueueFeeder : MPQueueFeeder <UIAlertViewDelegate> {

	MPRadioAdObserver* _adObserver;
	bool _didReceiveTracklistEnd;
	NSMapTable* _fetchingTracksCompletionHandlersByStation;
	bool _hasReceivedStreamTrack;
	long long _maximumGetTracksRetryCount;
	NSArray* _previousDatabaseTrackPlaybackDescriptorQueue;
	ADBannerView* _skipAdView;
	RadioStation* _station;
	RadioStationSkipController* _stationSkipController;
	NSMapTable* _stationTracklistRetrievalRetryCount;
	NSArray* _tracks;
	bool _wasUsingBackgroundNetwork;

}

@property (nonatomic,retain) RadioStation * station; 
@property (nonatomic,copy) NSArray * tracks;                      //@synthesize tracks=_tracks - In the implementation block
+(bool)isProfileExplicitContentRestricted;
+(void)setUserDefaultExplicitTracksEnabled:(bool)arg1 ;
+(bool)isExplicitTracksEnabled;
+(void)_updateIsExplicitContentRestrictedAndPostNotification:(bool)arg1 removeTracks:(bool)arg2 ;
+(void)_explicitContentAllowedDidChangeNotification:(id)arg1 ;
+(bool)isUserDefaultExplicitTracksEnabled;
+(id)_tracksWithPromotionalContentFromTracks:(id)arg1 ;
+(long long)maximumNumberOfTracksToFetch;
-(void)_bufferingStateDidChangeNotification:(id)arg1 ;
-(int)playbackMode;
-(unsigned long long)itemCount;
-(id)copyRawItemAtIndex:(unsigned long long)arg1 ;
-(id)playbackInfoAtIndex:(unsigned long long)arg1 ;
-(id)localizedAttributedPositionInPlaylistStringForItem:(id)arg1 withRegularTextAttributes:(id)arg2 emphasizedTextAttributes:(id)arg3 ;
-(id)localizedPositionInPlaylistString:(id)arg1 ;
-(bool)reloadWithDataSource:(id)arg1 keepPlayingCurrentItemIfPossible:(bool)arg2 ;
-(Class)itemClass;
-(bool)hasValidItemAtIndex:(unsigned long long)arg1 ;
-(unsigned long long)initialPlaybackQueueDepth;
-(bool)canSkipItem:(id)arg1 ;
-(bool)canSkipToPreviousItem;
-(unsigned long long)itemTypeForIndex:(unsigned long long)arg1 ;
-(bool)playerPreparesItemsForPlaybackAsynchronously;
-(unsigned long long)realRepeatType;
-(void)controller:(id)arg1 willChangePlaybackIndexBy:(long long)arg2 deltaType:(int)arg3 ignoreElapsedTime:(bool)arg4 allowSkippingUnskippableContent:(bool)arg5 ;
-(void)setAVController:(id)arg1 ;
-(id)station;
-(void)_networkTypeDidChangeNotification:(id)arg1 ;
-(void)setStation:(id)arg1 ;
-(void)_didFailToLoadAdNotification:(id)arg1 ;
-(void)_songBeganResponseNotification:(id)arg1 ;
-(void)_itemIsBannedDidChangedNotification:(id)arg1 ;
-(void)_isExplicitTracksEnabledDidChangeNotification:(id)arg1 ;
-(void)_radioModelDidChangeNotification:(id)arg1 ;
-(void)_cellularNetworkingAllowedDidChangeNotification:(id)arg1 ;
-(void)_applicationWillTerminateNotification:(id)arg1 ;
-(void)_updateForLoadedStoreBag:(id)arg1 ;
-(void)_storeBagDidLoadNotification:(id)arg1 ;
-(bool)_hasReceivedStreamTrack;
-(unsigned long long)_indexOfCurrentItem;
-(id)_trackAtIndex:(unsigned long long)arg1 ;
-(bool)_canHavePlaceholderTrack;
-(bool)reloadWithDataSource:(id)arg1 keepPlayingCurrentItemIfPossible:(bool)arg2 startPlayback:(bool)arg3 ;
-(void)_itemWillChangeNotification:(id)arg1 ;
-(id)_currentTrackPlaybackDescriptorQueueWithCurrentItem:(id)arg1 shouldIncludePlaybackInformation:(bool)arg2 skipDate:(id)arg3 ;
-(bool)_endPlaybackIfNecessaryForNetworkType;
-(void)_updateWithTracks:(id)arg1 tracklistActionType:(long long)arg2 options:(long long)arg3 ;
-(void)_fetchAdditionalTracksWithBaseIndex:(long long)arg1 withCompletionHandler:(/*^block*/ id)arg2 ;
-(void)_cancelScheduledAds;
-(void)_updateTracksForChangedTrackPlaybackDescriptorQueue;
-(void)_insertAdTrack:(id)arg1 afterCurrentItemIndex:(unsigned long long)arg2 ;
-(unsigned long long)_indexOfItem:(id)arg1 ;
-(void)_performGetTracksOperationForStation:(id)arg1 withNumberOfTracks:(long long)arg2 ;
-(void)setTracks:(id)arg1 ;
-(bool)isRadioQueueFeeder;
-(void)dealloc;
-(id)init;
-(void).cxx_destruct;
-(bool)canSeek;
-(id)tracks;
@end

