/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:44 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol MPMediaLibraryDataProviderPrivate <MPMediaLibraryDataProvider>
@property (nonatomic,readonly) NSString * databasePath; 
@property (nonatomic,readonly) bool isGeniusEnabled; 
@property (nonatomic,readonly) NSArray * preferredAudioLanguages; 
@property (nonatomic,readonly) NSArray * preferredSubtitleLanguages; 
@property (nonatomic,readonly) NSArray * localizedSectionIndexTitles; 
@optional
-(bool)hasMediaOfType:(unsigned long long)arg1;
-(bool)hasGeniusMixes;
-(bool)hasUbiquitousBookmarkableItems;
-(long long)itemPersistentIDForStoreID:(long long)arg1;
-(long long)addPlaylistWithValuesForProperties:(id)arg1;
-(bool)removeItemsWithIdentifiers:(long long*)arg1 count:(unsigned long long)arg2 hideFromPurchaseHistory:(bool)arg3;
-(bool)removePlaylistWithIdentifier:(long long)arg1;
-(bool)isArtworkImageIdenticalForItemWithIdentifier:(long long)arg1 otherItemWithIdentifier:(long long)arg2 compareRepresentativeItemArtwork:(bool)arg3 missingAlwaysComparesEqual:(bool)arg4;
-(void)populateLocationPropertiesOfItemWithIdentifier:(long long)arg1 withPath:(id)arg2;
-(bool)isGeniusEnabled;
-(id)preferredAudioLanguages;
-(id)preferredSubtitleLanguages;
-(void)performReadTransactionWithBlock:(/*^block*/ id)arg1;
-(bool)itemExistsWithPersistentID:(unsigned long long)arg1;
-(bool)playlistExistsWithPersistentID:(unsigned long long)arg1;
-(bool)hasArtworkImageForItemWithIdentifier:(long long)arg1;
-(void)setValue:(id)arg1 forProperty:(id)arg2 ofItemWithIdentifier:(long long)arg3 completionBlock:(/*^block*/ id)arg4;
-(bool)shouldAsynchrounouslyLoadArtworkForItemWithIdentifier:(long long)arg1 artworkFormat:(long long)arg2 artworkCacheID:(id)arg3;
-(bool)shouldAsynchrounouslyLoadArtworkForItemWithIdentifier:(long long)arg1 artworkSize:(CGSize)arg2 artworkCacheID:(id)arg3;
-(void)loadArtworkImageForFormat:(long long)arg1 ofItemWithArtworkCacheID:(id)arg2 canUseSurfaceBackedImage:(bool)arg3 completionBlock:(/*^block*/ id)arg4;
-(void)loadArtworkImageForFormat:(long long)arg1 ofItemWithIdentifier:(long long)arg2 completionBlock:(/*^block*/ id)arg3;
-(void)loadBestArtworkImageForSize:(CGSize)arg1 forArtworkCacheID:(id)arg2 completionBlock:(/*^block*/ id)arg3;
-(id)artworkCacheIDForItemWithIdentifier:(long long)arg1 atPlaybackTime:(double)arg2;
-(void)setValue:(id)arg1 forProperty:(id)arg2 ofCollectionWithIdentifier:(long long)arg3 groupingType:(long long)arg4 completionBlock:(/*^block*/ id)arg5;
-(void)setValue:(id)arg1 forProperty:(id)arg2 ofPlaylistWithIdentifier:(long long)arg3 completionBlock:(/*^block*/ id)arg4;
-(void)addItemWithIdentifier:(long long)arg1 toPlaylistWithIdentifier:(long long)arg2 completionBlock:(/*^block*/ id)arg3;
-(void)addItemsWithIdentifiers:(long long*)arg1 count:(unsigned long long)arg2 toPlaylistWithIdentifier:(long long)arg3 completionBlock:(/*^block*/ id)arg4;
-(void)removeItemsWithIdentifiers:(long long*)arg1 atFilteredIndexes:(id)arg2 inPlaylistWithIdentifier:(long long)arg3 completionBlock:(/*^block*/ id)arg4;
-(void)removeAllItemsInPlaylistWithIdentifier:(long long)arg1;
-(void)moveItemFromIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2 inPlaylistWithIdentifier:(long long)arg3 completionBlock:(/*^block*/ id)arg4;
-(void)seedPlaylistWithIdentifier:(long long)arg1 withItemWithIdentifier:(long long)arg2 completionBlock:(/*^block*/ id)arg3;
-(void)releaseGeniusClusterPlaylist:(void*)arg1;
-(void*)createGeniusClusterPlaylistWithSeedItemIdentifiers:(long long*)arg1 count:(unsigned long long)arg2 error:(id*)arg3;
-(long long*)generateItemIdentifiersForGeniusClusterPlaylist:(void*)arg1 count:(unsigned long long*)arg2 error:(id*)arg3;
-(void)updateEntitesToCurrentRevision;
-(bool)supportsEntityChangeTrackingForMediaEntityType:(long long)arg1 collectionGroupingType:(long long)arg2 dataProviderClass:(out Class*)arg3;
-(id)valueForDatabaseProperty:(id)arg1;
-(bool)setValue:(id)arg1 forDatabaseProperty:(id)arg2;
-(bool)performTransactionWithBlock:(/*^block*/ id)arg1;
-(bool)isCurrentThreadInTransaction;
-(id)localizedSectionIndexTitles;
-(id)localizedSectionHeaderForSectionIndex:(unsigned long long)arg1;
-(id)databasePath;
-(id)lastModifiedDate;
@end

