/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:43 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <MediaPlayer/MediaPlayer-Structs.h>
#import <CoreFoundation/NSSecureCoding.h>
#import <CoreFoundation/NSCopying.h>

@class MPMediaLibrary, MPMediaQueryCriteria, NSArray, MPMediaPlaylist, MPMediaItemCollection, NSSet, NSDictionary, MPMediaQuerySectionInfo;

@interface MPMediaQuery : NSObject <NSSecureCoding, NSCopying> {

	MPMediaLibrary* _mediaLibrary;
	MPMediaQueryCriteria* _criteria;
	int _isFilteringDisabled;
	NSArray* _staticEntities;
	long long _staticEntityType;

}

@property (nonatomic,readonly) MPMediaPlaylist * containingPlaylist; 
@property (nonatomic,readonly) MPMediaItemCollection * collectionByJoiningCollections; 
@property (nonatomic,retain) NSSet * filterPredicates; 
@property (nonatomic,readonly) NSArray * items; 
@property (nonatomic,readonly) NSArray * collections; 
@property (assign,nonatomic) long long groupingType; 
@property (nonatomic,readonly) NSArray * itemSections; 
@property (nonatomic,readonly) NSArray * collectionSections; 
@property (nonatomic,retain) MPMediaLibrary * mediaLibrary; 
@property (nonatomic,copy) NSSet * itemPropertiesToFetch; 
@property (nonatomic,copy) NSSet * collectionPropertiesToFetch; 
@property (setter=_setOrderingProperties:,getter=_orderingProperties,nonatomic,copy) NSArray * orderingProperties; 
@property (setter=_setOrderingDirectionMappings:,getter=_orderingDirectionMappings,nonatomic,copy) NSDictionary * orderingDirectionMappings; 
@property (assign,nonatomic) bool sortItems; 
@property (assign,nonatomic) bool useSections; 
@property (nonatomic,readonly) bool _hasItems; 
@property (nonatomic,readonly) bool _hasCollections; 
@property (nonatomic,readonly) unsigned long long _countOfItems; 
@property (nonatomic,readonly) unsigned long long _countOfCollections; 
@property (nonatomic,readonly) NSArray * itemPersistentIdentifiers; 
@property (nonatomic,readonly) NSArray * collectionPersistentIdentifiers; 
@property (nonatomic,readonly) MPMediaQuerySectionInfo * itemSectionInfo; 
@property (nonatomic,readonly) MPMediaQuerySectionInfo * collectionSectionInfo; 
@property (nonatomic,readonly) bool excludesEntitiesWithBlankNames; 
@property (nonatomic,readonly) bool specifiesPlaylistItems; 
@property (nonatomic,readonly) bool willGroupEntities; 
@property (assign,nonatomic) bool ignoreSystemFilterPredicates; 
+(id)activeGeniusPlaylist;
+(id)currentDevicePurchasesPlaylist;
+(id)audiobooksQuery;
+(void)initFilteringDisabled;
+(id)moviesQuery;
+(bool)isFilteringDisabled;
+(id)albumsQuery;
+(id)artistsQuery;
+(id)songsQuery;
+(id)playlistsQuery;
+(id)podcastsQuery;
+(id)ITunesUQuery;
+(id)ITunesUAudioQuery;
+(id)videoITunesUQuery;
+(id)audibleAudiobooksQuery;
+(id)compilationsQuery;
+(id)composersQuery;
+(id)genresQuery;
+(void)setFilteringDisabled:(bool)arg1 ;
+(id)videosQuery;
+(id)musicVideosQuery;
+(id)tvShowsQuery;
+(id)homeVideosQuery;
+(id)movieRentalsQuery;
+(id)videoPodcastsQuery;
+(id)geniusMixesQuery;
+(bool)supportsSecureCoding;
+(void)initialize;
-(id)MPSD_mediaQueryForDownloadableEntities;
-(id)MPSD_mediaQueryForDownloadingEntities;
-(bool)MPSD_hasDownloadableEntities;
-(bool)MPSD_hasDownloadingEntities;
-(id)predicateForProperty:(id)arg1 ;
-(void)removePredicatesForProperty:(id)arg1 ;
-(void)setFilterPredicate:(id)arg1 forProperty:(id)arg2 ;
-(id)containingPlaylist;
-(void)setFilterPropertyPredicate:(id)arg1 ;
-(bool)_updatePredicateForProperty:(id)arg1 withPropertyPredicate:(id)arg2 ;
-(id)collectionByJoiningCollections;
-(id)filterPredicates;
-(long long)groupingType;
-(id)mediaLibrary;
-(id)initWithFilterPredicates:(id)arg1 ;
-(void)setFilterPredicates:(id)arg1 ;
-(id)initWithCriteria:(id)arg1 library:(id)arg2 ;
-(id)initWithFilterPredicatesInternal:(id)arg1 ;
-(bool)_isFilteringDisabled;
-(void)setStaticEntities:(id)arg1 entityType:(long long)arg2 ;
-(void)setGroupingType:(long long)arg1 ;
-(void)setSortItems:(bool)arg1 ;
-(void)addFilterPredicate:(id)arg1 ;
-(id)collections;
-(bool)specifiesPlaylistItems;
-(unsigned long long)groupingThreshold;
-(id)itemSectionInfo;
-(id)collectionSectionInfo;
-(id)_valueForAggregateFunction:(id)arg1 onProperty:(id)arg2 entityType:(long long)arg3 ;
-(void)_enumerateItemsInOrder:(bool)arg1 usingBlock:(/*^block*/ id)arg2 ;
-(void)_enumerateCollectionsInOrder:(bool)arg1 usingBlock:(/*^block*/ id)arg2 ;
-(id)initWithEntities:(id)arg1 entityType:(long long)arg2 ;
-(id)copyByRemovingStaticEntities;
-(void)removeFilterPredicate:(id)arg1 ;
-(void)setMediaLibrary:(id)arg1 ;
-(id)itemPropertiesToFetch;
-(void)setItemPropertiesToFetch:(id)arg1 ;
-(id)collectionPropertiesToFetch;
-(void)setCollectionPropertiesToFetch:(id)arg1 ;
-(bool)_hasItems;
-(bool)_hasCollections;
-(unsigned long long)_countOfItems;
-(unsigned long long)_countOfCollections;
-(id)itemPersistentIdentifiers;
-(id)collectionPersistentIdentifiers;
-(void)_setOrderingProperties:(id)arg1 ;
-(id)_orderingProperties;
-(void)_setOrderingDirectionMappings:(id)arg1 ;
-(id)_orderingDirectionMappings;
-(bool)sortItems;
-(void)setUseSections:(bool)arg1 ;
-(bool)useSections;
-(bool)excludesEntitiesWithBlankNames;
-(bool)willGroupEntities;
-(id)itemSections;
-(id)collectionSections;
-(id)valueForAggregateFunction:(id)arg1 onItemsForProperty:(id)arg2 ;
-(id)valueForAggregateFunction:(id)arg1 onCollectionsForProperty:(id)arg2 ;
-(void)_enumerateItemsUsingBlock:(/*^block*/ id)arg1 ;
-(void)_enumerateUnorderedItemsUsingBlock:(/*^block*/ id)arg1 ;
-(void)_enumerateCollectionsUsingBlock:(/*^block*/ id)arg1 ;
-(void)_enumerateUnorderedCollectionsUsingBlock:(/*^block*/ id)arg1 ;
-(id)criteria;
-(void)setCriteria:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)init;
-(bool)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(id)copyWithZone:(NSZone)arg1 ;
-(id)items;
-(void).cxx_destruct;
-(bool)ignoreSystemFilterPredicates;
-(void)setIgnoreSystemFilterPredicates:(bool)arg1 ;
@end

