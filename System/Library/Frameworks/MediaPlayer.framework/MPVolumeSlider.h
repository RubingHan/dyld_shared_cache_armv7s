/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:42 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <MediaPlayer/MediaPlayer-Structs.h>
#import <UIKit/UISlider.h>
#import <MediaPlayer/MPVolumeControllerDelegate.h>

@class MPVolumeController, NSTimer, UILabel, UIImageView, UIView, UIImage, MPAVRoutingController, MPAVController, NSString;

@interface MPVolumeSlider : UISlider <MPVolumeControllerDelegate> {

	MPVolumeController* _volumeController;
	NSTimer* _commitTimer;
	UILabel* _routeNameLabel;
	long long _style;
	UIImageView* _thumbImageView;
	UIImageView* _thumbMaskImageView;
	bool _isOffScreen;
	bool _forcingOffscreenVisibility;
	bool _thumbIsDefault;
	UIView* _volumeWarningView;
	bool _volumeWarningBlinking;
	UIImage* _volumeWarningTrackImage;
	MPAVRoutingController* _routingController;

}

@property (nonatomic,readonly) long long style;                                      //@synthesize style=_style - In the implementation block
@property (nonatomic,retain) MPAVController * player; 
@property (nonatomic,copy) NSString * volumeAudioCategory; 
@property (nonatomic,retain) UIImage * volumeWarningTrackImage;                      //@synthesize volumeWarningTrackImage=_volumeWarningTrackImage - In the implementation block
@property (assign,setter=_setIsOffScreen:,nonatomic) bool _isOffScreen; 
@property (nonatomic,readonly) UIView * _newVolumeWarningView; 
-(void)_isExternalPlaybackActiveDidChangeNotification:(id)arg1 ;
-(void)_applicationDidEnterBackgroundNotification:(id)arg1 ;
-(void)_applicationWillEnterForegroundNotification:(id)arg1 ;
-(void)_setIsOffScreen:(bool)arg1 ;
-(void)_resetThumbImageForState:(unsigned long long)arg1 ;
-(id)_minTrackImageForStyle:(long long)arg1 ;
-(id)_maxTrackImageForStyle:(long long)arg1 ;
-(void)_endBlinkingWarningView;
-(void)_layoutVolumeWarningView;
-(void)_commitVolumeChange;
-(void)_endTracking;
-(void)_layoutMaskForThumb;
-(void)_layoutForAvailableRoutes;
-(void)_availableRoutesDidChangeNotification:(id)arg1 ;
-(id)volumeAudioCategory;
-(void)setVolumeAudioCategory:(id)arg1 ;
-(void)_beginBlinkingWarningView;
-(id)_thumbImageForStyle:(long long)arg1 ;
-(void)_routeNameLabelAnimationDidEnd;
-(id)_newVolumeWarningView;
-(void)_blinkWarningView;
-(void)volumeController:(id)arg1 volumeValueDidChange:(float)arg2 ;
-(void)volumeController:(id)arg1 EUVolumeLimitDidChange:(float)arg2 ;
-(void)volumeController:(id)arg1 EUVolumeLimitEnforcedDidChange:(bool)arg2 ;
-(void)setVolumeWarningTrackImage:(id)arg1 ;
-(bool)_isOffScreen;
-(id)volumeWarningTrackImage;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)setUserInteractionEnabled:(bool)arg1 ;
-(void)dealloc;
-(bool)pointInside:(CGPoint)arg1 withEvent:(id)arg2 ;
-(void)setHidden:(bool)arg1 ;
-(void)setAlpha:(double)arg1 ;
-(void)didMoveToWindow;
-(void)setFrame:(CGRect)arg1 ;
-(void)layoutSubviews;
-(CGSize)sizeThatFits:(CGSize)arg1 ;
-(long long)style;
-(void)didMoveToSuperview;
-(id)initWithFrame:(CGRect)arg1 style:(long long)arg2 ;
-(void)cancelTrackingWithEvent:(id)arg1 ;
-(bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2 ;
-(void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2 ;
-(CGRect)thumbRectForBounds:(CGRect)arg1 trackRect:(CGRect)arg2 value:(float)arg3 ;
-(id)createThumbView;
-(float)minimumValue;
-(float)maximumValue;
-(void)setValue:(float)arg1 animated:(bool)arg2 ;
-(void)setThumbImage:(id)arg1 forState:(unsigned long long)arg2 ;
-(void).cxx_destruct;
-(id)player;
-(void)setPlayer:(id)arg1 ;
@end

