/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:54 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/QuickLook.framework/QuickLook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <QuickLook/QuickLook-Structs.h>
#import <UIKit/UIViewController.h>
#import <QuickLook/QLPreviewItemInteractionDelegate.h>
#import <UIKit/UIDocumentPasswordViewDelegate.h>
#import <QuickLook/QLSwippableItemProtocol.h>

@protocol QLPreviewItemInteractionDelegate, QLPreviewItem;
@class UIView, QLDisplayBundle, NSTimer, QLProgressView, NSString, UIDocumentPasswordView, QLGenericView;

@interface QLPreviewViewController : UIViewController <QLPreviewItemInteractionDelegate, UIDocumentPasswordViewDelegate, QLSwippableItemProtocol> {

	<QLPreviewItemInteractionDelegate>* _displayBundleDelegate;
	<QLPreviewItem>* _previewItem;
	long long _index;
	SCD_Struct_QL13 _clientContext;
	int _previewMode;
	bool _needsReload;
	bool _swiping;
	bool _shouldSwapDisplayBundles;
	UIView* _scalingView;
	UIView* _contentContainerView;
	UIView* _accessoryContainerView;
	double _aspectRatio;
	double _scaleFactor;
	double _navigationBarVerticalOffset;
	QLDisplayBundle* _displayBundle;
	QLDisplayBundle* _newDisplayBundle;
	NSTimer* _progressTimer;
	QLProgressView* _progressView;
	NSString* _loadingTextForMissingFiles;
	bool _overlayHidden;
	UIDocumentPasswordView* _documentPasswordView;
	QLGenericView* _airPlayPasswordView;
	bool _loadedWithPassword;
	bool _visible;
	CGRect _initialFrame;

}

@property (readonly) QLDisplayBundle * displayBundle; 
@property (assign) <QLPreviewItemInteractionDelegate> * displayBundleDelegate;              //@synthesize displayBundleDelegate=_displayBundleDelegate - In the implementation block
@property (assign) int previewMode; 
@property (assign) SCD_Struct_QL14 clientContext; 
@property (readonly) int airPlayMode; 
@property (readonly) UIView * airPlayView; 
@property (readonly) UIView * snapshotView; 
@property (assign,nonatomic) bool visible;                                                  //@synthesize visible=_visible - In the implementation block
@property (assign,nonatomic) CGRect initialFrame;                                           //@synthesize initialFrame=_initialFrame - In the implementation block
@property (assign) long long index;                                                         //@synthesize index=_index - In the implementation block
@property (retain) <QLPreviewItem> * previewItem; 
-(id)previewItem;
-(void)setPreviewItem:(id)arg1 ;
-(void)setOverlayHidden:(bool)arg1 duration:(double)arg2 ;
-(void)previewItemWillLoad:(id)arg1 ;
-(void)previewItemDidLoad:(id)arg1 atIndex:(long long)arg2 withError:(id)arg3 ;
-(void)previewItem:(id)arg1 requiresDisplayBundle:(id)arg2 withHints:(id)arg3 ;
-(void)viewDidUpdateForPreviewItem:(id)arg1 ;
-(void)cancelLoadIfNeeded;
-(int)airPlayMode;
-(void)beginTrackingViewUpdates;
-(void)endTrackingViewUpdates;
-(void)setupAirPlayView;
-(void)discardAirPlayView;
-(void)setNavigationBarVerticalOffset:(double)arg1 ;
-(void)showContentsWasTappedForPreviewItem:(id)arg1 ;
-(id)previewItem:(id)arg1 willSendRequest:(id)arg2 ;
-(void)previewItem:(id)arg1 receivedTapOnURL:(id)arg2 ;
-(id)clientProcessAlertViewForPreviewItem:(id)arg1 ;
-(void)overlayWasInteractedWithOnPreviewItem:(id)arg1 ;
-(void)_cancelScheduledShowProgressiveUI;
-(void)_prepareDisplayBundle:(id)arg1 preload:(bool)arg2 withHints:(id)arg3 ;
-(void)_showProgressUI;
-(void)_refreshPreviewItem:(bool)arg1 withPassword:(id)arg2 ;
-(void)refreshPreviewItem;
-(void)_updateProgressUIWithDuration:(double)arg1 ;
-(void)_hidePasswordView;
-(void)_hideProgressiveUI;
-(void)_removeDisplayBundles;
-(void)_showGenericDisplayBundleForPreviewItem:(id)arg1 ;
-(void)_scheduleShowProgressiveUI;
-(void)_swapDisplayBundles;
-(void)viewWasTappedOnPreviewItem:(id)arg1 ;
-(void)previewItem:(id)arg1 willShowOverlayWithDuration:(double)arg2 ;
-(void)previewItem:(id)arg1 willHideOverlayWithDuration:(double)arg2 ;
-(void)_showPasswordView;
-(void)previewItem:(id)arg1 setAVState:(id)arg2 ;
-(void)previewItem:(id)arg1 willEnterFullScreenWithHostedWindow:(id)arg2 ;
-(void)previewItemDidExitFullScreen:(id)arg1 ;
-(void)willStartSwiping;
-(void)didFinishSwiping;
-(void)setAspectRatio:(double)arg1 scaleFactor:(double)arg2 ;
-(id)displayBundle;
-(id)airPlayView;
-(void)preloadIfNeeded;
-(id)displayBundleDelegate;
-(void)setDisplayBundleDelegate:(id)arg1 ;
-(CGRect)initialFrame;
-(void)setInitialFrame:(CGRect)arg1 ;
-(void)dealloc;
-(id)init;
-(id)description;
-(id)snapshotView;
-(void)loadView;
-(void)setVisible:(bool)arg1 ;
-(void)willMoveToParentViewController:(id)arg1 ;
-(long long)index;
-(bool)visible;
-(void)_keyboardDidShow:(id)arg1 ;
-(void)_adjustContentOffsetForKeyboardIfNeeded;
-(void)userDidEnterPassword:(id)arg1 forPasswordView:(id)arg2 ;
-(void)didBeginEditingPassword:(id)arg1 inView:(id)arg2 ;
-(void)didEndEditingPassword:(id)arg1 inView:(id)arg2 ;
-(void)setIndex:(long long)arg1 ;
-(void)setLoadingTextForMissingFiles:(id)arg1 ;
-(void)setPreviewMode:(int)arg1 ;
-(int)previewMode;
-(SCD_Struct_QL14)clientContext;
-(void)_layoutViews;
-(void)setClientContext:(SCD_Struct_QL14)arg1 ;
@end

