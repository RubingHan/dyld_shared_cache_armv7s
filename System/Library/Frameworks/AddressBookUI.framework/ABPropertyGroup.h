/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:04 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/AddressBookUI.framework/AddressBookUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AddressBookUI/AddressBookUI-Structs.h>
#import <AddressBookUI/ABAbstractPropertyGroup.h>

@class NSMutableDictionary, NSMutableArray, ABActionsController, NSString, ABCapabilitiesManager;

@interface ABPropertyGroup : ABAbstractPropertyGroup {

	int _property;
	void* _context;
	NSMutableDictionary* _valuesByPerson;
	NSMutableArray* _recordInfoDictionaries;
	NSMutableArray* _propertyLabels;
	NSMutableDictionary* _lineInfosByIndex;
	ABActionsController* _actionsController;
	void* _defaultPolicy;
	NSMutableDictionary* _preinsertedRecordInfoDictionary;
	id _preinsertedValue;
	NSString* _preinsertedLabel;
	NSMutableDictionary* _insertionRecordInfoDictionary;
	id _insertionValue;
	NSString* _insertionLabel;
	NSMutableDictionary* _recordInfoDictionaryForItemBeingDeleted;
	NSMutableDictionary* _valueForItemBeingDeleted;
	NSString* _labelForItemBeingDeleted;
	long long _lastIndexWithAddedItem;
	ABCapabilitiesManager* _capabilitiesManager;
	bool _allowsVibrations;
	id _vibrationManager;

}
-(void)reloadFromModel;
-(void)updateRecord;
-(bool)canSave;
-(bool)allowsAdding;
-(id)writablePeopleAtIndex:(long long)arg1 ;
-(id)actualPropertyLabelAtIndex:(long long)arg1 forPerson:(id)arg2 ;
-(id)propertyLabelAtIndex:(long long)arg1 ;
-(void*)defaultPolicy;
-(id)countryCodeAtIndex:(long long)arg1 ;
-(bool)editableFlagFromInfo:(id)arg1 ;
-(id)accountBadgeFromInfo:(id)arg1 whenEditing:(bool)arg2 ;
-(id)labelTextForInfo:(id)arg1 ;
-(id)propertyValueForInfo:(id)arg1 ;
-(id)lineInfosForInfo:(id)arg1 ;
-(id)placeholderTextForKey:(id)arg1 info:(id)arg2 ;
-(id)valueForKey:(id)arg1 info:(id)arg2 ;
-(id)displayTextForInfo:(id)arg1 ;
-(bool)instantMessageServiceIsSupported;
-(bool)shouldDisambiguateNotes;
-(id)keyboardSettingsForKey:(id)arg1 info:(id)arg2 ;
-(void)_clearAllCachedInfo;
-(void)setAllowsVibrations:(bool)arg1 ;
-(void)setPropertyLabel:(id)arg1 atIndex:(long long)arg2 ;
-(long long)insertionIndex;
-(void)setPropertyValue:(id)arg1 atIndex:(long long)arg2 ;
-(int)alertIdentifierAtIndex:(long long)arg1 ;
-(void)setCountryCode:(id)arg1 atIndex:(long long)arg2 ;
-(id)propertyValueAtIndex:(long long)arg1 ;
-(void)setService:(id)arg1 atIndex:(long long)arg2 ;
-(void)getAnyIdentifier:(int*)arg1 andPerson:(id*)arg2 atIndex:(long long)arg3 ;
-(id)stringValueAtIndex:(long long)arg1 ;
-(id)localizedPropertyLabelAtIndex:(long long)arg1 ;
-(id)allRecordInfosAtIndex:(long long)arg1 ;
-(long long)indexOfIdentifier:(int)arg1 person:(id)arg2 ;
-(long long)rowCountWhenEditing:(bool)arg1 ;
-(long long)rowForIndex:(long long)arg1 editableFlag:(bool)arg2 whenEditing:(bool)arg3 ;
-(void)getIndex:(long long*)arg1 andEditableFlag:(bool*)arg2 forRow:(long long)arg3 whenEditing:(bool)arg4 ;
-(id)initWithProperty:(int)arg1 context:(void*)arg2 ;
-(id)rowsToInsertInTransition:(bool)arg1 ;
-(id)rowsToDeleteInTransition:(bool)arg1 ;
-(void)setDefaultPolicy:(void*)arg1 ;
-(bool)shouldShowAlertsWhenEditing:(bool)arg1 ;
-(bool)areLabelsEditable;
-(void)refreshVibrations;
-(bool)setEmptyValueAtIndex:(long long)arg1 editableFlag:(bool)arg2 whenEditing:(bool)arg3 ;
-(bool)removeItemAtRow:(long long)arg1 whenEditing:(bool)arg2 ;
-(bool)canDeleteAtIndex:(long long)arg1 editableFlag:(bool)arg2 ;
-(void)prepareActionsController:(id)arg1 withValueAtIndex:(long long)arg2 ;
-(bool)allowsVibrations;
-(void)setValue:(id)arg1 forKey:(id)arg2 forIndex:(long long)arg3 ;
-(void)addPreinsertedItem;
-(void)trimValueForCountryCodeAtIndex:(long long)arg1 ;
-(bool)canSaveAtIndex:(long long)arg1 editableFlag:(bool)arg2 ;
-(void)_reloadPreinsertedStuff:(bool)arg1 insertionStuff:(bool)arg2 ;
-(id)serviceAtIndex:(long long)arg1 ;
-(long long)indexOfRingtoneInAlertEquivalentMultiValue;
-(long long)indexOfCallVibrationInAlertEquivalentMultiValue;
-(long long)indexOfTextVibrationInAlertEquivalentMultiValue;
-(bool)hasMultipleAlertsAtIndex:(long long)arg1 ;
-(id)_vibrationManager;
-(void*)_copyCachedValueForPerson:(id)arg1 ;
-(void*)_policyForPerson:(id)arg1 ;
-(bool)_setValueInCache:(void*)arg1 forPerson:(id)arg2 ;
-(id)_peopleInCache;
-(bool)_removeValueInCacheForPerson:(id)arg1 ;
-(id)_allRecordInfosInRecordInfoDictionary:(id)arg1 ;
-(void)_getFromCachePropertyValue:(id*)arg1 andLabel:(id*)arg2 forPerson:(id)arg3 identifier:(int)arg4 ;
-(id)_bestValueBetween:(id)arg1 and:(id)arg2 ;
-(void)_getAnyIdentifier:(int*)arg1 person:(id*)arg2 propertyValue:(id*)arg3 propertyLabel:(id*)arg4 fromRecordInfoDictionary:(id)arg5 ;
-(id)shortServiceForService:(id)arg1 ;
-(id)_stringRepresentationOfPropertyValue:(id)arg1 ;
-(bool)_isEmptyValue:(id)arg1 isPreinserted:(bool)arg2 ;
-(bool)_setValueInCache:(void*)arg1 forPerson:(id)arg2 preventLabelChange:(bool)arg3 ;
-(id)_recordInfoDictionaryAtIndex:(long long)arg1 ;
-(bool)_updateCacheForPerson:(id)arg1 identifier:(int*)arg2 value:(id)arg3 label:(CFStringRef)arg4 shouldSetValue:(bool)arg5 shouldSetLabel:(bool)arg6 ;
-(bool)_updateCacheWithPropertyValue:(id)arg1 propertyLabel:(id)arg2 recordInfoDictionaryAtIndex:(unsigned long long)arg3 shouldSetValue:(bool)arg4 shouldSetLabel:(bool)arg5 ;
-(bool)_isSocialProfile:(id)arg1 equivalentTo:(id)arg2 ;
-(bool)_isBirthdayDate:(id)arg1 equivalentTo:(id)arg2 ;
-(bool)_isPropertyValue:(id)arg1 equivalentTo:(id)arg2 ;
-(id)_valueForCheckingExistenceOfPropertyValue:(id)arg1 ;
-(id)_findFuzzyMatchingValue:(id)arg1 inDictionary:(id)arg2 ;
-(bool)_recordInfoDictionary:(id)arg1 containsPerson:(id)arg2 ;
-(id)_recordInfoDictionaryForPerson:(id)arg1 identifier:(int)arg2 ;
-(id)_recordInfoForPerson:(id)arg1 identifier:(int)arg2 ;
-(id)_recordInfoForPerson:(id)arg1 ;
-(bool)allowsAddingForPerson:(id)arg1 ;
-(void)_setRecordInfoDictionary:(id)arg1 atIndex:(long long)arg2 ;
-(void)_setCountryCode:(id)arg1 atIndex:(long long)arg2 withCountryName:(bool)arg3 ;
-(bool)_instantMessageServiceIsSupportedForPerson:(id)arg1 ;
-(void)_addValuesToCache;
-(long long)indexOfTextToneInAlertEquivalentMultiValue;
-(id)_sortedPeople:(id)arg1 ;
-(void)_insertSingleValue:(id)arg1 label:(id)arg2 identifier:(int)arg3 forPerson:(id)arg4 indicesAndLabelsForValuesSeenAlready:(id)arg5 ;
-(id)_recordInfoDictionaryWithAllPeople;
-(bool)shouldShowRingtoneWhenEditing:(bool)arg1 ;
-(bool)shouldShowCallVibrationWhenEditing:(bool)arg1 ;
-(bool)shouldShowTextToneWhenEditing:(bool)arg1 ;
-(bool)shouldShowTextVibrationWhenEditing:(bool)arg1 ;
-(id)propertyValueAtIndex:(long long)arg1 forceUseReadonly:(bool)arg2 ;
-(void)_getFromCacheAnyPropertyValue:(id*)arg1 andLabel:(id*)arg2 forRecordInfoDictionary:(id)arg3 ;
-(bool)_canSaveAtIndex:(long long)arg1 ;
-(bool)_updateCacheWithPropertyLabel:(id)arg1 atIndex:(long long)arg2 ;
-(void)_setPropertyLabel:(id)arg1 atIndex:(long long)arg2 markChanged:(bool)arg3 ;
-(id)propertyLabelAtIndex:(long long)arg1 forceUseReadonly:(bool)arg2 ;
-(bool)_updateCacheWithPropertyValue:(id)arg1 atIndex:(long long)arg2 ;
-(id)_newLocalizedCountryNameForCountryCode:(id)arg1 ;
-(id)lineInfosAtIndex:(long long)arg1 ;
-(id)_valueFromCacheForPerson:(id)arg1 ;
-(bool)_hasNonNullSoundForIdentifier:(int)arg1 ;
-(bool)hasRingtone;
-(bool)hasTextTone;
-(bool)hasCallVibration;
-(bool)hasTextVibration;
-(void)_getIndex:(long long*)arg1 andEditableFlag:(bool*)arg2 fromInfo:(id)arg3 ;
-(long long)_indexFromInfo:(id)arg1 ;
-(id)_getFromLineInfos:(id)arg1 key:(id)arg2 valueForKey:(id)arg3 ;
-(id)_newLocalizedPlaceholderForKey:(id)arg1 ;
-(bool)_propertyIsDate;
-(id)_recordInfoDictionaryForPerson:(id)arg1 ;
-(bool)setEmptyValueAtRow:(long long)arg1 whenEditing:(bool)arg2 ;
-(bool)removeItemAtRow:(long long)arg1 ;
-(void)setCapabilitiesManager:(id)arg1 ;
-(id)actionsControllerPreparedWithValueAtIndex:(long long)arg1 ;
-(id)peopleFromInfo:(id)arg1 whenEditing:(bool)arg2 ;
-(bool)multiCellContentView:(id)arg1 alwaysShowsClearButtonAtIndexPath:(id)arg2 ;
-(int)property;
-(long long)itemCount;
-(void)dealloc;
-(id)description;
-(void*)context;
@end

