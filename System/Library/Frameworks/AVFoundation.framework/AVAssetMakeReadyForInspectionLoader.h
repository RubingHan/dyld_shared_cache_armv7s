/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:58:57 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AVFoundation/AVFoundation-Structs.h>
#import <AVFoundation/AVAssetInspectorLoader.h>

@class AVAssetInspector, AVAssetCache, NSURL, NSMutableArray;

@interface AVAssetMakeReadyForInspectionLoader : AVAssetInspectorLoader {

	AVAssetInspector* _assetInspector;
	AVAssetCache* _assetCache;
	bool _shouldMatchDataInCacheByURLPathComponentOnly;
	bool _shouldMatchDataInCacheByURLWithoutQueryComponent;
	NSURL* _downloadDestinationURL;
	OpaqueFigFormatReaderRef _formatReader;
	OpaqueFigSimpleMutexRef _loadingMutex;
	NSMutableArray* _keysAwaitingCompletion;
	long long _status;
	int _basicInspectionFailureCode;
	NSURL* _URL;

}

@property (nonatomic,readonly) AVAssetCache * assetCache;                                          //@synthesize assetCache=_assetCache - In the implementation block
@property (nonatomic,readonly) bool shouldMatchDataInCacheByURLPathComponentOnly;                  //@synthesize shouldMatchDataInCacheByURLPathComponentOnly=_shouldMatchDataInCacheByURLPathComponentOnly - In the implementation block
@property (nonatomic,readonly) bool shouldMatchDataInCacheByURLWithoutQueryComponent;              //@synthesize shouldMatchDataInCacheByURLWithoutQueryComponent=_shouldMatchDataInCacheByURLWithoutQueryComponent - In the implementation block
@property (nonatomic,readonly) NSURL * downloadDestinationURL;                                     //@synthesize downloadDestinationURL=_downloadDestinationURL - In the implementation block
-(void)cancelLoading;
-(OpaqueFigPlaybackItemRef)_playbackItem;
-(void)_serverHasDied;
-(bool)isExportable;
-(bool)isComposable;
-(OpaqueFigFormatReaderRef)_formatReader;
-(id)assetInspector;
-(id)chapterGroupInfo;
-(bool)shouldMatchDataInCacheByURLPathComponentOnly;
-(bool)shouldMatchDataInCacheByURLWithoutQueryComponent;
-(id)downloadDestinationURL;
-(long long)_status;
-(void)_setStatus:(long long)arg1 figErrorCode:(int)arg2 ;
-(OpaqueFigFormatReaderRef)_copyFormatReaderFromFigObjectWithFigErrorCode:(int*)arg1 ;
-(id)_dictionaryOfSpecialGettersForKeyValueStatus;
-(long long)_statusOfValueWhileMutexLockedForKey:(id)arg1 error:(id*)arg2 ;
-(bool)_statusOfValuesIsTerminalWhileMutexLockedForKeys:(id)arg1 ;
-(bool)_inspectionRequiresAFormatReader;
-(bool)_updateStatusWhileMutexLocked:(long long)arg1 figErrorCode:(int)arg2 ;
-(id)_getAndPruneCompletionsWhileMutexLocked;
-(id)_dictionaryOfSpecialLoadingMethodsForKeys;
-(id)_loadValuesUsingDefaultLoadingMethodWhileMutexLockedForKeys:(id)arg1 ;
-(id)_loadValuesWhileMutexLockedForKeys:(id)arg1 ;
-(OpaqueFigSimpleMutexRef)_loadingMutex;
-(bool)_providesAccurateTiming;
-(id)_statusOfValueForKeyThatIsAlwaysLoaded;
-(id)lyrics;
-(bool)_isStreaming;
-(bool)isPlayable;
-(id)assetCache;
-(void)dealloc;
-(SCD_Struct_CM4)duration;
-(id)copyWithZone:(NSZone)arg1 ;
-(id)URL;
-(id)initWithURL:(id)arg1 ;
-(long long)statusOfValueForKey:(id)arg1 error:(id*)arg2 ;
-(void)loadValuesAsynchronouslyForKeys:(id)arg1 completionHandler:(/*^block*/ id)arg2 ;
-(bool)hasProtectedContent;
-(bool)isReadable;
-(void)finalize;
@end

