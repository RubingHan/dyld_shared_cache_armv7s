/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:58:56 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <AVFoundation/AVFoundation-Structs.h>
@class AVCaptureConnectionInternal, NSArray, AVCaptureOutput, AVCaptureVideoPreviewLayer;

@interface AVCaptureConnection : NSObject {

	AVCaptureConnectionInternal* _internal;

}

@property (nonatomic,readonly) NSArray * inputPorts; 
@property (nonatomic,readonly) AVCaptureOutput * output; 
@property (nonatomic,readonly) AVCaptureVideoPreviewLayer * videoPreviewLayer; 
@property (assign,getter=isEnabled,nonatomic) bool enabled; 
@property (getter=isActive,nonatomic,readonly) bool active; 
@property (nonatomic,readonly) NSArray * audioChannels; 
@property (getter=isVideoMirroringSupported,nonatomic,readonly) bool supportsVideoMirroring; 
@property (assign,getter=isVideoMirrored,nonatomic) bool videoMirrored; 
@property (assign,nonatomic) bool automaticallyAdjustsVideoMirroring; 
@property (getter=isVideoOrientationSupported,nonatomic,readonly) bool supportsVideoOrientation; 
@property (assign,nonatomic) long long videoOrientation; 
@property (getter=isVideoMinFrameDurationSupported,nonatomic,readonly) bool supportsVideoMinFrameDuration; 
@property (assign,nonatomic) SCD_Struct_CM4 videoMinFrameDuration; 
@property (getter=isVideoMaxFrameDurationSupported,nonatomic,readonly) bool supportsVideoMaxFrameDuration; 
@property (assign,nonatomic) SCD_Struct_CM4 videoMaxFrameDuration; 
@property (nonatomic,readonly) double videoMaxScaleAndCropFactor; 
@property (assign,nonatomic) double videoScaleAndCropFactor; 
@property (getter=isVideoStabilizationSupported,nonatomic,readonly) bool supportsVideoStabilization; 
@property (getter=isVideoStabilizationEnabled,nonatomic,readonly) bool videoStabilizationEnabled; 
@property (assign,nonatomic) bool enablesVideoStabilizationWhenAvailable; 
+(id)connectionWithInputPorts:(id)arg1 output:(id)arg2 ;
+(id)connectionWithInputPort:(id)arg1 videoPreviewLayer:(id)arg2 ;
+(void)initialize;
-(id)session;
-(id)inputPorts;
-(float)getAvgAudioLevelForChannel:(id)arg1 ;
-(float)getPeakAudioLevelForChannel:(id)arg1 ;
-(id)output;
-(id)videoPreviewLayer;
-(id)audioChannels;
-(bool)automaticallyAdjustsVideoMirroring;
-(long long)videoOrientation;
-(SCD_Struct_CM4)videoMinFrameDuration;
-(SCD_Struct_CM4)videoMaxFrameDuration;
-(double)videoMaxScaleAndCropFactor;
-(double)videoScaleAndCropFactor;
-(int)videoRetainedBufferCountHint;
-(bool)enablesVideoStabilizationWhenAvailable;
-(id)initWithInputPorts:(id)arg1 output:(id)arg2 ;
-(id)initWithInputPort:(id)arg1 videoPreviewLayer:(id)arg2 ;
-(bool)sourcesFromFrontFacingCamera;
-(void)inputPortFormatDescriptionChanged:(id)arg1 ;
-(void)updateAudioChannelsArray;
-(bool)isVideoStabilizationSupported;
-(void)initCommonStorage;
-(void)updateAudioLevelsArray;
-(bool)isVideoMirroringSupported;
-(bool)isVideoOrientationSupported;
-(id)sourceDevice;
-(SCD_Struct_CM4)_videoMinFrameDuration;
-(void)_setVideoMinFrameDuration:(SCD_Struct_CM4)arg1 ;
-(SCD_Struct_CM4)_videoMaxFrameDuration;
-(bool)isVideoRetainedBufferCountHintSupported;
-(void)addInputPort:(id)arg1 ;
-(void)removeInputPort:(id)arg1 ;
-(bool)isVideoMirrored;
-(void)setVideoMirrored:(bool)arg1 ;
-(void)_setVideoMirrored:(bool)arg1 ;
-(void)setAutomaticallyAdjustsVideoMirroring:(bool)arg1 ;
-(void)setVideoOrientation:(long long)arg1 ;
-(bool)isVideoMinFrameDurationSupported;
-(bool)isVideoMinFrameDurationSet;
-(void)setVideoMinFrameDuration:(SCD_Struct_CM4)arg1 ;
-(bool)isVideoMaxFrameDurationSupported;
-(bool)isVideoMaxFrameDurationSet;
-(void)setVideoMaxFrameDuration:(SCD_Struct_CM4)arg1 ;
-(void)setVideoScaleAndCropFactor:(double)arg1 ;
-(bool)isVideoStabilizationEnabled;
-(void)setEnablesVideoStabilizationWhenAvailable:(bool)arg1 ;
-(void)setVideoRetainedBufferCountHint:(int)arg1 ;
-(bool)isLive;
-(void)dealloc;
-(id)description;
-(bool)isActive;
-(void)invalidate;
-(bool)isEnabled;
-(void)setEnabled:(bool)arg1 ;
-(void)setActive:(bool)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(id)mediaType;
@end

