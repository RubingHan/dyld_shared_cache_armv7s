/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:58:56 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <AVFoundation/AVFoundation-Structs.h>
@class AVCaptureSessionInternal, NSString, NSArray;

@interface AVCaptureSession : NSObject {

	AVCaptureSessionInternal* _internal;

}

@property (nonatomic,copy) NSString * sessionPreset; 
@property (nonatomic,readonly) NSArray * inputs; 
@property (nonatomic,readonly) NSArray * outputs; 
@property (getter=isRunning,nonatomic,readonly) bool running; 
@property (getter=isInterrupted,nonatomic,readonly) bool interrupted; 
@property (assign,nonatomic) bool usesApplicationAudioSession; 
@property (assign,nonatomic) bool automaticallyConfiguresApplicationAudioSession; 
@property (nonatomic,readonly) OpaqueCMClockRef masterClock; 
+(bool)automaticallyNotifiesObserversOfMasterClock;
+(id)avCaptureSessionPlist;
+(id)allSessionPresets;
+(id)_createCaptureOptionsForPreset:(id)arg1 audioDevice:(id)arg2 videoDevice:(id)arg3 errorStatus:(int*)arg4 ;
+(id)publicSessionPresets;
+(void)initialize;
-(id)outputs;
-(OpaqueCMClockRef)masterClock;
-(bool)canAddOutput:(id)arg1 ;
-(bool)canAddInput:(id)arg1 ;
-(void)addInput:(id)arg1 ;
-(int)_stopRecording;
-(bool)usesApplicationAudioSession;
-(bool)automaticallyConfiguresApplicationAudioSession;
-(int)_startRecording;
-(bool)isInterrupted;
-(id)outputWithClass:(Class)arg1 ;
-(id)videoPreviewLayer;
-(id)captureOptions;
-(void)removeInput:(id)arg1 ;
-(bool)isBeingConfigured;
-(void)_rebuildGraph;
-(id)_resolvedCaptureOptions;
-(id)sessionPreset;
-(void)removeConnection:(id)arg1 ;
-(id)figRecorderOptions;
-(void)_setMasterClock:(OpaqueCMClockRef)arg1 ;
-(void)_beginConfiguration;
-(void)_teardownFigRecorder;
-(bool)canSetSessionPreset:(id)arg1 ;
-(void)_rebuildInternalCaptureOptions;
-(void)_commitConfiguration;
-(bool)_buildAndRunGraph;
-(bool)_canAddInput:(id)arg1 failureReason:(id*)arg2 ;
-(void)_addInputWithNoConnections:(id)arg1 ;
-(id)_connectionsForNewInputPort:(id)arg1 ;
-(void)_addConnection:(id)arg1 ;
-(void)addVideoPreviewLayerConnection:(id)arg1 ;
-(id)_liveConnections;
-(void)_removeConnectionsForInputPort:(id)arg1 ;
-(void)_removeVideoPreviewLayerConnectionsForInputPort:(id)arg1 ;
-(bool)_canAddOutput:(id)arg1 failureReason:(id*)arg2 ;
-(void)_addOutputWithNoConnections:(id)arg1 ;
-(id)_connectionsForNewOutput:(id)arg1 ;
-(void)_removeConnection:(id)arg1 ;
-(id)_connectionsForNewVideoPreviewLayer:(id)arg1 ;
-(void)removeVideoPreviewLayerConnection:(id)arg1 ;
-(void)removeVideoPreviewLayer;
-(void)addVideoPreviewLayer:(id)arg1 ;
-(bool)_canAddConnection:(id)arg1 failureReason:(id*)arg2 ;
-(void)_doWillStart;
-(id)_stopError;
-(bool)isPreviewing;
-(void)_postRuntimeError:(id)arg1 ;
-(bool)_stopPreviewing;
-(void)_rebuildLiveConnections;
-(void)setSessionPreset:(id)arg1 ;
-(void)_excludeOutputsForCaptureOptions:(id)arg1 ;
-(bool)_sessionHasEnabledMovieFileOutput;
-(id)_addFastSwitchOptionsToCaptureOptions:(id)arg1 forDevice:(id)arg2 preset:(id)arg3 ;
-(id)_resolvedCaptureOptionsByApplyingOverridesToCaptureOptions:(id)arg1 preset:(id)arg2 ;
-(id)_currentDeviceWithMediaType:(id)arg1 ;
-(id)_resolvedCaptureOptionsForPreset:(id)arg1 audioDevice:(id)arg2 videoDevice:(id)arg3 ;
-(void)_determineMasterClock;
-(int)_createRecorderIfNeeded;
-(bool)_figRecorderOldOptionsAreEqual:(id)arg1 toNewOptions:(id)arg2 livesourceOptionsAreEqual:(bool*)arg3 frameRatesChanged:(bool*)arg4 ;
-(bool)_startPreviewing;
-(void)_doDidStart:(bool)arg1 ;
-(void)_stopAndTearDownGraph;
-(void)_setInterrupted:(bool)arg1 ;
-(id)_errorForFigRecorderNotification:(id)arg1 ;
-(void)_doDidStop:(id)arg1 ;
-(void)_doDidStartSources;
-(void)beginConfiguration;
-(void)commitConfiguration;
-(id)inputWithClass:(Class)arg1 ;
-(void)addInputWithNoConnections:(id)arg1 ;
-(void)addOutputWithNoConnections:(id)arg1 ;
-(void)setVideoPreviewLayer:(id)arg1 ;
-(bool)canAddConnection:(id)arg1 ;
-(void)addConnection:(id)arg1 ;
-(void)setUsesApplicationAudioSession:(bool)arg1 ;
-(void)setAutomaticallyConfiguresApplicationAudioSession:(bool)arg1 ;
-(void)startRunning;
-(void)stopRunning;
-(void)_handleNotification:(id)arg1 payload:(id)arg2 ;
-(void)removeOutput:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(id)description;
-(OpaqueFigRecorderRef)recorder;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(id)valueForUndefinedKey:(id)arg1 ;
-(bool)isRunning;
-(void)_setRunning:(bool)arg1 ;
-(void)addOutput:(id)arg1 ;
-(id)inputs;
@end

