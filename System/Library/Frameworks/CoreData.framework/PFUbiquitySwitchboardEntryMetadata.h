/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:10 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/CoreData.framework/CoreData
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
@class NSString, PFUbiquityLocation, NSMutableSet, NSPersistentStoreCoordinator, NSSQLCore, _PFUbiquityRecordsImporter, _PFUbiquityRecordsExporter, PFUbiquitySwitchboardCacheWrapper, PFUbiquityRecordsImporterSchedulingContext, NSObject, PFUbiquityBaselineHeuristics, NSSet;

@interface PFUbiquitySwitchboardEntryMetadata : NSObject {

	NSString* _localPeerID;
	NSString* _storeName;
	PFUbiquityLocation* _ubiquityRootLocation;
	PFUbiquityLocation* _localRootLocation;
	NSString* _activeModelVersionHash;
	NSMutableSet* _stores;
	NSPersistentStoreCoordinator* _privatePSC;
	NSSQLCore* _privateStore;
	_PFUbiquityRecordsImporter* _importer;
	_PFUbiquityRecordsExporter* _exporter;
	PFUbiquitySwitchboardCacheWrapper* _cacheWrapper;
	PFUbiquityRecordsImporterSchedulingContext* _schedulingContext;
	bool _useLocalStorage;
	bool _useLocaAccount;
	NSObject<OS_dispatch_queue>* _privateQueue;
	PFUbiquityBaselineHeuristics* _baselineHeuristics;

}

@property (nonatomic,retain) PFUbiquitySwitchboardCacheWrapper * cacheWrapper;                              //@synthesize cacheWrapper=_cacheWrapper - In the implementation block
@property (nonatomic,readonly) _PFUbiquityRecordsImporter * importer;                                       //@synthesize importer=_importer - In the implementation block
@property (nonatomic,readonly) _PFUbiquityRecordsExporter * exporter;                                       //@synthesize exporter=_exporter - In the implementation block
@property (nonatomic,retain) PFUbiquityLocation * ubiquityRootLocation;                                     //@synthesize ubiquityRootLocation=_ubiquityRootLocation - In the implementation block
@property (nonatomic,readonly) NSSet * stores;                                                              //@synthesize stores=_stores - In the implementation block
@property (nonatomic,readonly) NSString * activeModelVersionHash;                                           //@synthesize activeModelVersionHash=_activeModelVersionHash - In the implementation block
@property (nonatomic,readonly) NSPersistentStoreCoordinator * privatePSC;                                   //@synthesize privatePSC=_privatePSC - In the implementation block
@property (nonatomic,readonly) NSSQLCore * privateStore;                                                    //@synthesize privateStore=_privateStore - In the implementation block
@property (nonatomic,readonly) PFUbiquityRecordsImporterSchedulingContext * schedulingContext;              //@synthesize schedulingContext=_schedulingContext - In the implementation block
@property (assign,nonatomic) bool useLocalStorage;                                                          //@synthesize useLocalStorage=_useLocalStorage - In the implementation block
@property (assign,nonatomic) bool useLocalAccount;                                                          //@synthesize useLocaAccount=_useLocaAccount - In the implementation block
@property (nonatomic,readonly) PFUbiquityBaselineHeuristics * baselineHeuristics;                           //@synthesize baselineHeuristics=_baselineHeuristics - In the implementation block
-(id)stores;
-(id)privateStore;
-(id)ubiquityRootLocation;
-(id)cacheWrapper;
-(id)baselineHeuristics;
-(void)setCacheWrapper:(id)arg1 ;
-(id)importer;
-(void)setUseLocalStorage:(bool)arg1 ;
-(void)setUbiquityRootLocation:(id)arg1 ;
-(bool)useLocalStorage;
-(void)tearDown;
-(id)schedulingContext;
-(id)privatePSC;
-(id)initWithLocalPeerID:(id)arg1 ubiquityRootLocation:(id)arg2 localRootLocation:(id)arg3 storeName:(id)arg4 andPrivateQueue:(id)arg5 ;
-(void)addPersistentStore:(id)arg1 ;
-(void)removePersistentStore:(id)arg1 ;
-(id)exporter;
-(void)setUseLocalAccount:(bool)arg1 ;
-(id)activeModelVersionHash;
-(bool)useLocalAccount;
-(void)dealloc;
@end

