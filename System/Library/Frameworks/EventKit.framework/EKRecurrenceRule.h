/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:18 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/EventKit.framework/EventKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <EventKit/EventKit-Structs.h>
#import <EventKit/EKObject.h>
#import <CoreFoundation/NSCopying.h>

@class EKRecurrenceEnd, EKCalendarItem, NSString, NSArray, NSDate;

@interface EKRecurrenceRule : EKObject <NSCopying> {

	bool _usesEndDate;
	EKRecurrenceEnd* _cachedEnd;
	EKCalendarItem* _owner;

}

@property (nonatomic,readonly) NSString * calendarIdentifier; 
@property (nonatomic,copy) EKRecurrenceEnd * recurrenceEnd; 
@property (nonatomic,readonly) int frequency; 
@property (nonatomic,readonly) long long interval; 
@property (nonatomic,readonly) long long firstDayOfTheWeek; 
@property (nonatomic,readonly) NSArray * daysOfTheWeek; 
@property (nonatomic,readonly) NSArray * daysOfTheMonth; 
@property (nonatomic,readonly) NSArray * daysOfTheYear; 
@property (nonatomic,readonly) NSArray * weeksOfTheYear; 
@property (nonatomic,readonly) NSArray * monthsOfTheYear; 
@property (nonatomic,readonly) NSArray * setPositions; 
@property (readonly) bool usesEndDate;                                              //@synthesize usesEndDate=_usesEndDate - In the implementation block
@property (readonly) SCD_Struct_EK12 gregorianUnits; 
@property (nonatomic,retain) EKCalendarItem * owner;                                //@synthesize owner=_owner - In the implementation block
@property (nonatomic,readonly) NSString * UUID; 
@property (nonatomic,readonly) NSDate * cachedEndDate; 
@property (nonatomic,readonly) bool dirtyStateMayAffectExceptionDates; 
@property (nonatomic,readonly) bool shouldPinMonthDays; 
@property (nonatomic,retain) EKRecurrenceEnd * cachedEnd;                           //@synthesize cachedEnd=_cachedEnd - In the implementation block
+(id)iCalendarValueFromRecurrenceType:(int)arg1 ;
+(id)iCalendarValueFromDate:(id)arg1 isDateOnly:(bool)arg2 isFloating:(bool)arg3 ;
+(id)recurrenceRuleWithType:(int)arg1 interval:(unsigned long long)arg2 end:(id)arg3 ;
+(id)iCalendarValueFromDayOfTheWeek:(unsigned long long)arg1 ;
-(id)lazyLoadRelationForKey:(id)arg1 ;
-(bool)dirtyStateMayAffectExceptionDates;
-(SCD_Struct_EK12)gregorianUnits;
-(id)recurrenceEnd;
-(void)setRecurrenceEnd:(id)arg1 ;
-(id)_persistentRule;
-(id)initRecurrenceWithFrequency:(int)arg1 interval:(long long)arg2 end:(id)arg3 ;
-(void)setDaysOfTheWeek:(id)arg1 ;
-(void)setDaysOfTheMonth:(id)arg1 ;
-(void)setSetPositions:(id)arg1 ;
-(void)setMonthsOfTheYear:(id)arg1 ;
-(void)setDaysOfTheYear:(id)arg1 ;
-(void)setWeeksOfTheYear:(id)arg1 ;
-(id)initRecurrenceWithFrequency:(int)arg1 interval:(long long)arg2 daysOfTheWeek:(id)arg3 daysOfTheMonth:(id)arg4 monthsOfTheYear:(id)arg5 weeksOfTheYear:(id)arg6 daysOfTheYear:(id)arg7 setPositions:(id)arg8 end:(id)arg9 ;
-(id)stringValueAsDateOnly:(bool)arg1 isFloating:(bool)arg2 ;
-(id)daysOfTheWeek;
-(id)daysOfTheMonth;
-(id)setPositions;
-(id)monthsOfTheYear;
-(id)daysOfTheYear;
-(id)weeksOfTheYear;
-(void)setFirstDayOfTheWeek:(unsigned long long)arg1 ;
-(id)cachedEnd;
-(bool)usesEndDate;
-(id)cachedEndDate;
-(void)setCachedEnd:(id)arg1 ;
-(bool)shouldPinMonthDays;
-(long long)firstDayOfTheWeek;
-(bool)mayOccurAfterDate:(id)arg1 ;
-(void)pinToEndsOfMonthsWithCalendarItem:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(id)description;
-(id)copyWithZone:(NSZone)arg1 ;
-(id)UUID;
-(int)frequency;
-(void)setFrequency:(int)arg1 ;
-(id)calendarIdentifier;
-(void)reset;
-(void)setInterval:(unsigned long long)arg1 ;
-(long long)interval;
-(id)owner;
-(void)setOwner:(id)arg1 ;
@end

