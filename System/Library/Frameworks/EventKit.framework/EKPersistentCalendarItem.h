/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 9:59:18 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/Frameworks/EventKit.framework/EventKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <EventKit/EKPersistentObject.h>

@class NSString, EKPersistentCalendar, EKPersistentLocation, NSDate, NSTimeZone, NSURL, NSData, EKPersistentOrganizer, NSSet, EKPersistentAttendee;

@interface EKPersistentCalendarItem : EKPersistentObject

@property (nonatomic,readonly) NSString * UUID; 
@property (nonatomic,retain) EKPersistentCalendar * calendar; 
@property (nonatomic,copy) NSString * title; 
@property (nonatomic,copy) EKPersistentLocation * location; 
@property (nonatomic,copy) NSString * notes; 
@property (nonatomic,copy) NSDate * lastModifiedDate; 
@property (nonatomic,copy) NSDate * creationDate; 
@property (nonatomic,copy) NSDate * startDate; 
@property (nonatomic,copy) NSTimeZone * timeZone; 
@property (assign,getter=isAllDay,nonatomic) bool allDay; 
@property (assign,nonatomic) int priority; 
@property (assign,nonatomic) int sequence; 
@property (nonatomic,copy) NSURL * URL; 
@property (nonatomic,copy) NSURL * action; 
@property (nonatomic,copy) NSString * externalID; 
@property (nonatomic,copy) NSData * externalData; 
@property (nonatomic,copy) NSString * uniqueID; 
@property (nonatomic,retain) EKPersistentOrganizer * organizer; 
@property (nonatomic,readonly) bool hasAlarms; 
@property (nonatomic,readonly) bool hasRecurrenceRules; 
@property (nonatomic,readonly) bool hasAttendees; 
@property (nonatomic,readonly) bool hasNotes; 
@property (nonatomic,readonly) int selfParticipantStatus; 
@property (nonatomic,copy) NSSet * alarms; 
@property (assign,getter=isDefaultAlarmRemoved,nonatomic) bool defaultAlarmRemoved; 
@property (nonatomic,copy) NSSet * recurrenceRules; 
@property (nonatomic,copy) NSSet * attendees; 
@property (nonatomic,retain) EKPersistentAttendee * selfAttendee; 
@property (nonatomic,copy) NSDate * participationStatusModifiedDate; 
@property (nonatomic,copy) NSSet * exceptionDates; 
@property (nonatomic,copy) NSSet * attachments; 
@property (nonatomic,copy) NSString * sharedItemCreatedByDisplayName; 
@property (nonatomic,copy) NSString * sharedItemCreatedByEmailAddress; 
@property (nonatomic,copy) NSString * sharedItemCreatedByFirstName; 
@property (nonatomic,copy) NSString * sharedItemCreatedByLastName; 
@property (nonatomic,copy) NSDate * sharedItemCreatedDate; 
@property (nonatomic,copy) NSTimeZone * sharedItemCreatedTimeZone; 
@property (nonatomic,copy) NSString * sharedItemModifiedByDisplayName; 
@property (nonatomic,copy) NSString * sharedItemModifiedByEmailAddress; 
@property (nonatomic,copy) NSString * sharedItemModifiedByFirstName; 
@property (nonatomic,copy) NSString * sharedItemModifiedByLastName; 
@property (nonatomic,copy) NSDate * sharedItemModifiedDate; 
@property (nonatomic,copy) NSTimeZone * sharedItemModifiedTimeZone; 
@property (getter=isDetached,nonatomic,readonly) bool detached; 
@property (nonatomic,retain) EKPersistentCalendarItem * originalItem; 
@property (nonatomic,copy) NSSet * detachedItems; 
+(id)defaultPropertiesToLoad;
+(id)relations;
-(int)sequence;
-(bool)isAllDay;
-(bool)validate:(id*)arg1 ;
-(id)externalModificationTag;
-(void)setExternalModificationTag:(id)arg1 ;
-(void)setAllDay:(bool)arg1 ;
-(id)selfAttendee;
-(id)originalItem;
-(id)attendees;
-(id)organizer;
-(bool)hasRecurrenceRules;
-(id)recurrenceRules;
-(void)setRecurrenceRules:(id)arg1 ;
-(bool)isDetached;
-(id)participationStatusModifiedDate;
-(void)addAlarm:(id)arg1 ;
-(bool)hasAttendees;
-(id)moveToCalendar:(id)arg1 ;
-(void)setExceptionDates:(id)arg1 ;
-(void)setDetachedItems:(id)arg1 ;
-(id)alarms;
-(id)detachedItems;
-(void)addExceptionDate:(id)arg1 ;
-(void)deleteSelfAndDetached;
-(id)exceptionDates;
-(void)removeRecurrenceRule:(id)arg1 ;
-(void)setOrganizer:(id)arg1 ;
-(void)addAttendee:(id)arg1 ;
-(void)setSelfAttendee:(id)arg1 ;
-(void)addRecurrenceRule:(id)arg1 ;
-(void)setOriginalItem:(id)arg1 ;
-(void)removeAlarm:(id)arg1 ;
-(void)addDetachedItem:(id)arg1 ;
-(int)attendeeCount;
-(id)notes;
-(bool)hasNotes;
-(int)selfParticipantStatus;
-(id)sharedItemCreatedByFirstName;
-(id)sharedItemCreatedByLastName;
-(id)sharedItemModifiedByFirstName;
-(id)sharedItemModifiedByLastName;
-(void)removeAttachment:(id)arg1 ;
-(void)setNotes:(id)arg1 ;
-(void)setLastModifiedDate:(id)arg1 ;
-(bool)isDefaultAlarmRemoved;
-(void)setDefaultAlarmRemoved:(bool)arg1 ;
-(bool)hasAlarms;
-(void)setAlarms:(id)arg1 ;
-(void)setAttendees:(id)arg1 ;
-(void)removeAttendee:(id)arg1 ;
-(id)sharedItemCreatedByDisplayName;
-(void)setSharedItemCreatedByDisplayName:(id)arg1 ;
-(id)sharedItemCreatedByEmailAddress;
-(void)setSharedItemCreatedByFirstName:(id)arg1 ;
-(void)setSharedItemCreatedByLastName:(id)arg1 ;
-(id)sharedItemCreatedDate;
-(void)setSharedItemCreatedDate:(id)arg1 ;
-(id)sharedItemCreatedTimeZone;
-(void)setSharedItemCreatedTimeZone:(id)arg1 ;
-(id)sharedItemModifiedByDisplayName;
-(void)setSharedItemModifiedByDisplayName:(id)arg1 ;
-(id)sharedItemModifiedByEmailAddress;
-(void)setSharedItemModifiedByEmailAddress:(id)arg1 ;
-(void)setSharedItemModifiedByFirstName:(id)arg1 ;
-(void)setSharedItemModifiedByLastName:(id)arg1 ;
-(id)sharedItemModifiedDate;
-(void)setSharedItemModifiedDate:(id)arg1 ;
-(id)sharedItemModifiedTimeZone;
-(void)setSharedItemModifiedTimeZone:(id)arg1 ;
-(void)setSharedItemCreatedByEmailAddress:(id)arg1 ;
-(void)primitiveValueChangedForKey:(id)arg1 ;
-(void)setSequence:(int)arg1 ;
-(void)setParticipationStatusModifiedDate:(id)arg1 ;
-(void)removeExceptionDate:(id)arg1 ;
-(void)removeDetachedItem:(id)arg1 ;
-(id)moveToCalendar:(id)arg1 skipItem:(id)arg2 ;
-(void)itemDidReplicateInNewCalendar:(id)arg1 ;
-(bool)hasAttachments;
-(void)setAttachments:(id)arg1 ;
-(id)init;
-(void)setTitle:(id)arg1 ;
-(id)action;
-(void)setTimeZone:(id)arg1 ;
-(id)UUID;
-(id)title;
-(void)setAction:(id)arg1 ;
-(id)URL;
-(id)location;
-(void)setURL:(id)arg1 ;
-(void)setCalendar:(id)arg1 ;
-(id)timeZone;
-(id)calendar;
-(int)priority;
-(void)setPriority:(int)arg1 ;
-(void)addAttachment:(id)arg1 ;
-(id)uniqueID;
-(void)setUniqueID:(id)arg1 ;
-(id)attachments;
-(void)setExternalID:(id)arg1 ;
-(id)externalID;
-(id)externalData;
-(void)setExternalData:(id)arg1 ;
-(id)startDate;
-(id)creationDate;
-(void)setCreationDate:(id)arg1 ;
-(void)setStartDate:(id)arg1 ;
-(id)lastModifiedDate;
-(void)setLocation:(id)arg1 ;
@end

