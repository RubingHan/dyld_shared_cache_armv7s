/*
* This header is generated by classdump-dyld 0.2
* on Tuesday, October 21, 2014 at 10:03:40 PM Eastern European Summer Time
* Operating System: Version 7.1 (Build 11D167)
* Image Source: /System/Library/TextInput/libTextInputCore.dylib
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <libTextInputCore.dylib/libTextInputCore.dylib-Structs.h>
#import <libTextInputCore.dylib/TIKeyboardInputManagerBase.h>

@class TIKeyboardLayout, TIKeyboardLayoutState, TIKeyboardInputManagerState, TIKeyboardInputManagerCandidateGenerationContext, TIKeyboardInputManagerKeyboardContext, TIKeyboardState;

@interface TIKeyboardInputManager : TIKeyboardInputManagerBase {

	TIKeyboardLayout* _keyLayout;
	TIKeyboardLayoutState* _layoutState;
	TIKeyboardInputManagerState* _currentState;
	TIKeyboardInputManagerCandidateGenerationContext* _candidateGenerationContext;
	TIKeyboardInputManagerKeyboardContext* _keyboardContext;
	TIKeyboardState* _keyboardState;
	unsigned long long _maxCandidateCount;
	NSRange _candidateRange;

}

@property (nonatomic,readonly) TIKeyboardInputManagerKeyboardContext * keyboardContext;                         //@synthesize keyboardContext=_keyboardContext - In the implementation block
@property (nonatomic,readonly) TIKeyboardInputManagerKeyboardContext * candidateGenerationContext; 
@property (nonatomic,readonly) TIKeyboardState * keyboardState;                                                 //@synthesize keyboardState=_keyboardState - In the implementation block
@property (nonatomic,readonly) TIKeyboardInputManagerState * currentState; 
@property (assign,nonatomic) unsigned long long maxCandidateCount;                                              //@synthesize maxCandidateCount=_maxCandidateCount - In the implementation block
@property (assign,nonatomic) NSRange candidateRange;                                                            //@synthesize candidateRange=_candidateRange - In the implementation block
@property (nonatomic,retain) TIKeyboardLayout * keyLayout; 
+(void)removeAllDynamicDictionaries;
+(id)keyboardUserDirectory;
+(id)userDictionaryWordKeyPairsFilePath;
+(id)dynamicDictionaryFilePathForInputMode:(id)arg1 ;
+(void)removeDynamicDictionaryForInputMode:(id)arg1 ;
-(void)_setUsesCandidateSelection:(bool)arg1 ;
-(unsigned long long)maximumShortcutLengthAllowed;
-(id)shortcutCompletionsForDocumentState:(id)arg1 ;
-(id)shortcutConversionForDocumentState:(id)arg1 ;
-(bool)canHandleKeyHitTest;
-(bool)needsKeyHitTestResults;
-(long long)keyHitTest:(id)arg1 ;
-(void)clearKeyAreas;
-(void)registerKeyArea:(CGRect)arg1 keyCode:(short)arg2 keyString:(const char*)arg3 ;
-(id)keyEventMap;
-(void)clearDynamicDictionary;
-(void)dynamicDictionariesRemoved:(id)arg1 ;
-(void)setAutocapitalizationType:(unsigned long long)arg1 ;
-(void)setInSplitKeyboardMode:(bool)arg1 ;
-(bool)shouldExtendPriorWord;
-(void)setAutocapitalizationEnabled:(bool)arg1 ;
-(void)setInHardwareKeyboardMode:(bool)arg1 ;
-(void)setKeyboardEventsLagging:(bool)arg1 ;
-(bool)ignoresDeadKeys;
-(void)setAutoCorrects:(bool)arg1 ;
-(void)setLearnsCorrection:(bool)arg1 ;
-(bool)usesCandidateSelection;
-(unsigned long long)initialSelectedIndex;
-(bool)supportsNumberKeySelection;
-(id)autocorrection;
-(bool)usesAutoDeleteWord;
-(bool)supportsSetPhraseBoundary;
-(id)searchStringForMarkedText;
-(bool)nextInputWouldStartSentence;
-(bool)suppressCompletionsForFieldEditor;
-(bool)suppliesCompletions;
-(id)wordSeparator;
-(id)replacementForDoubleSpace;
-(unsigned long long)phraseBoundary;
-(id)shadowTyping;
-(bool)commitsAcceptedCandidate;
-(id)defaultCandidate;
-(unsigned long long)initialCandidateBatchCount;
-(bool)suppressPlaceholderCandidate;
-(id)terminatorsPreventingAutocorrection;
-(id)candidatesForString:(id)arg1 ;
-(void)setPhraseBoundary:(unsigned long long)arg1 ;
-(id)sortingMethods;
-(id)titleForSortingMethod:(id)arg1 ;
-(id)groupedCandidatesFromCandidates:(id)arg1 usingSortingMethod:(id)arg2 ;
-(id)indexTitlesForGroupTitles:(id)arg1 sortingMethod:(id)arg2 ;
-(bool)alwaysShowExtensionCandidatesForSortingMethod:(id)arg1 ;
-(void)groupedCandidatesFromCandidates:(id)arg1 usingSortingMethod:(id)arg2 completion:(/*^block*/ id)arg3 ;
-(void)setInput:(id)arg1 ;
-(void)dealloc;
-(id)currentState;
-(id)keyboardBehaviors;
-(id)candidateResultSet;
-(id)keyLayout;
-(void)setKeyLayout:(id)arg1 ;
-(void)clearInput;
-(unsigned)inputCount;
-(id)inputString;
-(void)textAccepted:(id)arg1 ;
-(unsigned)inputIndex;
-(void)syncToKeyboardState:(id)arg1 continuation:(/*^block*/ id)arg2 ;
-(void)handleKeyboardInput:(id)arg1 keyboardState:(id)arg2 continuation:(/*^block*/ id)arg3 ;
-(void)generateCandidatesWithKeyboardState:(id)arg1 candidateRange:(NSRange)arg2 continuation:(/*^block*/ id)arg3 ;
-(void)handleAcceptedCandidate:(id)arg1 keyboardState:(id)arg2 continuation:(/*^block*/ id)arg3 ;
-(void)generateReplacementsForString:(id)arg1 keyLayout:(id)arg2 continuation:(/*^block*/ id)arg3 ;
-(void)skipHitTestForTouchEvent:(id)arg1 keyboardState:(id)arg2 ;
-(void)performHitTestForTouchEvent:(id)arg1 keyboardState:(id)arg2 continuation:(/*^block*/ id)arg3 ;
-(void)adjustPhraseBoundaryInForwardDirection:(bool)arg1 keyboardState:(id)arg2 continuation:(/*^block*/ id)arg3 ;
-(bool)shouldSkipCandidateSelection;
-(bool)acceptInputString:(id)arg1 ;
-(bool)stringEndsWord:(id)arg1 ;
-(void)acceptCurrentCandidate;
-(void)lastAcceptedCandidateCorrected;
-(void)setOriginalInput:(id)arg1 ;
-(void)candidateRejected:(id)arg1 ;
-(void)removeAllDynamicDictionaries;
-(void)acceptCurrentCandidateIfSelected;
-(id).cxx_construct;
-(id)initWithInputMode:(id)arg1 ;
-(id)inputsToReject;
-(id)wordCharacters;
-(bool)shouldAddModifierSymbolsToWordCharacters;
-(void)setInputIndex:(unsigned)arg1 ;
-(void)incrementUsageTrackingKeyForAutocorrectionStatistic:(id)arg1 autocorrectionTypes:(unsigned)arg2 ;
-(void)rejectRevisitedWord;
-(void)syncToKeyboardState:(id)arg1 afterContextChange:(bool)arg2 ;
-(void)refreshInputManagerState;
-(id)internalStringToExternal:(id)arg1 ;
-(id)externalStringToInternal:(id)arg1 ;
-(id)suffixOfDesiredString:(id)arg1 toAppendToInputString:(id)arg2 withInputIndex:(unsigned long long)arg3 afterDeletionCount:(unsigned long long*)arg4 ;
-(bool)hasLegacyInputStem;
-(id)keyboardState;
-(void)acceptInput;
-(id)inputContext;
-(id)candidateGenerationContext;
-(id)candidateResultSetFromCandidates:(id)arg1 ;
-(id)addInput:(id)arg1 flags:(unsigned)arg2 point:(CGPoint)arg3 firstDelete:(unsigned long long*)arg4 fromVariantKey:(bool)arg5 ;
-(bool)hasLegacyInputString;
-(id)deleteFromInput:(unsigned long long*)arg1 ;
-(id)internalInputContext;
-(void)setInputContext:(id)arg1 ;
-(void)inputLocationChanged;
-(bool)acceptsCharacter:(unsigned)arg1 ;
-(id)newInputManagerState;
-(id)inputStringFromDocumentState:(id)arg1 ;
-(void)closeCandidateGenerationContext;
-(unsigned long long)inputIndexFromDocumentState:(id)arg1 ;
-(bool)isInSyncWithDocumentState:(id)arg1 ;
-(void)setOriginalInputForRangedSelection;
-(id)rawInputString;
-(void)setPhraseBoundaryIfNecessary;
-(void)setMarkedText;
-(id)keyboardContext;
-(void)addInput:(id)arg1 keyboardState:(id)arg2 continuation:(/*^block*/ id)arg3 ;
-(void)syncMarkedTextForKeyboardState:(id)arg1 afterContextChange:(bool)arg2 ;
-(void)syncInputStringToDocumentState:(id)arg1 afterContextChange:(bool)arg2 ;
-(void)syncToLayoutState:(id)arg1 ;
-(void)syncInputStringToKeyboardState:(id)arg1 afterContextChange:(bool)arg2 ;
-(void)updateLayoutKeysIfNeeded;
-(id)sortMethodTitles;
-(id)sortMethodsGroupsForCandidates:(id)arg1 ;
-(id)sortMethodIndexes;
-(id)sortMethodsShowExtensionCandidates;
-(NSRange)candidateRange;
-(id)pushContextWithKeyboardState:(id)arg1 ;
-(void)pushCurrentStateToKeyboard;
-(id)popToContext:(id)arg1 ;
-(void)handleDeletionWithKeyboardState:(id)arg1 continuation:(/*^block*/ id)arg2 ;
-(id)deletedSuffixOfInputContext:(id)arg1 whenDeletingFromInputString:(id)arg2 withInputIndex:(unsigned long long)arg3 deletionCount:(unsigned long long)arg4 ;
-(bool)shouldCommitInputString;
-(void)generateInlineShortcutConversionForKeyboardState:(id)arg1 ;
-(bool)handleJoinedWordsAfterBackspaceFromWordStart;
-(void)openCandidateGenerationContextWithCompletionHandler:(/*^block*/ id)arg1 ;
-(void)setCandidateRange:(NSRange)arg1 ;
-(void)generateAutocorrectionWithKeyboardState:(id)arg1 continuation:(/*^block*/ id)arg2 ;
-(void)updateCandidateDisplayAsyncWithCandidateResultSet:(id)arg1 ;
-(void)didAcceptCandidate:(id)arg1 ;
-(id)remainingInput;
-(id)usageTrackingKeyForStatistic:(id)arg1 ;
-(id)contextBeforeWithDesiredLength:(unsigned long long)arg1 ;
-(void)clearShiftStatus;
-(void)appendToInputContext:(id)arg1 ;
-(bool)removeSuffixOfInputContext:(id)arg1 ;
-(void)clearInputContext;
-(unsigned long long)maxCandidateCount;
-(void)setMaxCandidateCount:(unsigned long long)arg1 ;
@end

